<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v5 U (http://www.xmlspy.com) by Mark Utting (The University of Waikato) -->
<xs:schema targetNamespace="http://www.cs.waikato.ac.nz/~marku/zstdsubs" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.cs.waikato.ac.nz/~marku/zstdsubs" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xs:element name="Spec">
		<xs:annotation>
			<xs:documentation>Formal Specification in ISO Standard Z</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:sequence>
				<xs:element name="Sect" type="SectType" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
			<xs:attribute name="creator" type="xs:string" use="optional"/>
			<xs:attribute name="date" type="xs:date" use="optional"/>
			<xs:attribute name="time" type="xs:time" use="optional"/>
		</xs:complexType>
	</xs:element>
	<xs:complexType name="SectType" mixed="true">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="Parent" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="Para" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="SchTextType">
		<xs:sequence>
			<xs:element ref="Decl" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="Pred" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeclNameType">
		<xs:sequence>
			<xs:element name="Word" type="xs:string"/>
			<xs:element ref="Stroke" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="Id" type="xs:ID" use="optional"/>
	</xs:complexType>
	<xs:element name="Para" abstract="true"/>
	<xs:element name="GivenPara" substitutionGroup="Para">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DeclName" type="DeclNameType" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="AxPara" substitutionGroup="Para">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DeclName" type="DeclNameType" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element name="SchText" type="SchTextType"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="UnparsedPara" substitutionGroup="Para">
		<xs:complexType mixed="true"/>
	</xs:element>
	<xs:element name="Decl" abstract="true"/>
	<xs:element name="VarDecl" substitutionGroup="Decl">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DeclName" type="DeclNameType" maxOccurs="unbounded"/>
				<xs:element ref="Expr"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ConstDecl" substitutionGroup="Decl">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="DeclName" type="DeclNameType"/>
				<xs:element ref="Expr"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="InclDecl" substitutionGroup="Decl">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Expr"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Expr" abstract="true"/>
	<xs:element name="RefExpr" substitutionGroup="Expr">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="RefName">
					<xs:complexType>
						<xs:sequence>
							<xs:element name="Word" type="xs:string"/>
							<xs:element name="Stroke" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
						</xs:sequence>
						<xs:attribute name="Decl" type="xs:IDREF" use="optional"/>
					</xs:complexType>
				</xs:element>
				<xs:element ref="Expr" minOccurs="0" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="NumExpr" substitutionGroup="Expr">
		<xs:complexType>
			<xs:attribute name="Value" type="xs:decimal" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="Pred" abstract="true"/>
	<xs:element name="ExprPred" substitutionGroup="Pred">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Expr"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="NegPred" substitutionGroup="Pred">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Pred"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="LogPred" substitutionGroup="Pred">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Pred" minOccurs="2" maxOccurs="2"/>
			</xs:sequence>
			<xs:attribute name="Log" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="And"/>
						<xs:enumeration value="Or"/>
						<xs:enumeration value="Imp"/>
						<xs:enumeration value="Iff"/>
						<xs:enumeration value="Nl"/>
						<xs:enumeration value="Semi"/>
						<xs:enumeration value="Chain"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="QntPred" substitutionGroup="Pred">
		<xs:complexType>
			<xs:sequence>
				<xs:element name="SchText" type="SchTextType"/>
				<xs:element ref="Expr" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="Qnt" use="required">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Forall"/>
						<xs:enumeration value="Exists"/>
						<xs:enumeration value="Exists1"/>
						<xs:enumeration value="Lambda"/>
						<xs:enumeration value="Mu"/>
						<xs:enumeration value="Let"/>
						<xs:enumeration value="Set"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="MemPred" substitutionGroup="Pred">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Expr" minOccurs="2" maxOccurs="2"/>
			</xs:sequence>
			<xs:attribute name="Fix" use="optional" default="Mem">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="Mem"/>
						<xs:enumeration value="Mixfix"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:attribute>
		</xs:complexType>
	</xs:element>
	<xs:element name="FalsePred" substitutionGroup="Pred">
		<xs:complexType/>
	</xs:element>
	<xs:element name="TruePred" substitutionGroup="Pred">
		<xs:complexType/>
	</xs:element>
	<xs:element name="Stroke" abstract="true"/>
	<xs:element name="InStroke" substitutionGroup="Stroke"/>
	<xs:element name="OutStroke" substitutionGroup="Stroke"/>
	<xs:element name="NextStroke" substitutionGroup="Stroke"/>
	<xs:element name="NumStroke" substitutionGroup="Stroke">
		<xs:complexType>
			<xs:attribute name="Value" type="xs:nonNegativeInteger" use="required"/>
		</xs:complexType>
	</xs:element>
</xs:schema>
