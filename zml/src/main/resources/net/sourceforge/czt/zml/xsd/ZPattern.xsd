<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
  targetNamespace="http://czt.sourceforge.net/zpatt"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:Z="http://czt.sourceforge.net/zml"
  xmlns:P="http://czt.sourceforge.net/zpatt"
  xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="1.0"
  xmlns:gnast="http://czt.sourceforge.net/gnast"
  elementFormDefault="qualified"
  attributeFormDefault="unqualified"
  version="1.0">
  <xs:annotation>
    <xs:documentation>
      This XML schema defines proof and transformation rules for 
      specifications written in the ISO Standard Z notation.
      It defines various kinds of 'Joker' AST terms, to act as named
      placeholders for expressions, predicates, declaration lists etc.,
      plus two new kinds of paragraphs: Jokers associates names with
      a particular kind of joker AST term, and Rule defines a
      proof rule (with one conclusion and possible several premisses).

      $Id$
      
      Copyright (C) 2003, 2005, 2006, 2007 Mark Utting
      This file is part of the Community Z Tools (CZT) project.
      
      The CZT project contains free software; you can
      redistribute it and/or modify it under the terms
      of the GNU General Public License as published by
      the Free Software Foundation; either version 2 of
      the License, or (at your option) any later version.
      
      The CZT project is distributed in the hope that it
      will be useful, but WITHOUT ANY WARRANTY; without
      even the implied warranty of MERCHANTABILITY or
      FITNESS FOR A PARTICULAR PURPOSE.  See the
      GNU General Public License for more details.
      
      You should have received a copy of the GNU General
      Public License along with CZT; if not, write to the
      Free Software Foundation, Inc., 59 Temple Place,
      Suite 330, Boston, MA  02111-1307  USA
    </xs:documentation>
    <xs:appinfo>
      <jaxb:schemaBindings>
        <jaxb:package name="net.sourceforge.czt.zpatt.jaxb.gen">
          <jaxb:javadoc>
            &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN"&gt;
            &lt;html&gt;
            &lt;body&gt;
            &lt;p&gt;Classes generated by Jaxb.&lt;/p&gt;
            &lt;/body&gt;
            &lt;/html&gt;
          </jaxb:javadoc>
        </jaxb:package>
      </jaxb:schemaBindings>
      <gnast:schemaBindings name="Z Pattern">
        <gnast:package name="net.sourceforge.czt.zpatt">
          <gnast:package id="ast" name="ast" template="AstInterface.vm">
            <gnast:generate id="factory" class="ZpattFactory" template="CoreFactory.vm"/>
          </gnast:package>
          <gnast:package id="impl" name="impl" template="AstClass.vm">
            <gnast:generate id="factoryImpl" class="ZpattFactoryImpl" template="CoreFactoryImpl.vm"/>
          </gnast:package>
          <gnast:package id="visitor" name="visitor"
            template="AstVisitorInterface.vm">
            <gnast:generate id="AstVisitor" class="ZpattVisitor" template="AstVisitor.vm"/>
          </gnast:package>
          <gnast:package id="util" name="util">
            <gnast:generate id="convFactory" class="Factory" template="Factory.vm"/>
          </gnast:package>
          <gnast:package id="jaxb" name="jaxb">
            <gnast:generate id="AstToJaxb" class="AstToJaxb" template="AstToJaxb.vm"/>
            <gnast:generate id="JaxbToAst" class="JaxbToAst" template="JaxbToAst.vm"/>
          </gnast:package>
          <gnast:package id="dom" name="dom">
            <gnast:generate id="AstToDom" class="AstToDom" template="AstToDom.vm"/>
          </gnast:package>
        </gnast:package>
      </gnast:schemaBindings>
    </xs:appinfo>
  </xs:annotation>

  <xs:import namespace="http://czt.sourceforge.net/zml" schemaLocation="Z.xsd"/>
  <xs:element name="SequentList" type="P:SequentList"/>

  <xs:element name="RulePara" type="P:RulePara" abstract="true"
    substitutionGroup="Z:Para"/>

  <xs:element name="Rule" type="P:Rule" substitutionGroup="P:RulePara">
    <xs:annotation>
      <xs:documentation>
        This is a proof/transformation rule with one conclusion sequent
        and optionally, several premiss sequents.  
        Each sequent has the form Context |- Predicate.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Oracle" type="P:Oracle"
    substitutionGroup="P:RulePara"/>

  <xs:element name="Jokers" type="P:Jokers" substitutionGroup="Z:Para">
    <xs:annotation>
      <xs:documentation>
        This records the names that have been declared as a particular
        kind of joker.  It is used by the parser to map those names to
        the appropriate kind of JokerXXX term, but is not needed later
        when rules are being used.  It is similar in purpose to the
        LaTeX markup directives in the standard Z XML schema.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="JokerExpr"     type="P:JokerExpr"     substitutionGroup="Z:Expr"/>
  <xs:element name="JokerExprList" type="P:JokerExprList" substitutionGroup="Z:ExprList"/>
  <xs:element name="JokerRenameList" type="P:JokerRenameList" substitutionGroup="Z:RenameList"/>
  <xs:element name="JokerStroke" type="P:JokerStroke" substitutionGroup="Z:Stroke"/>
  <xs:element name="JokerNameList" type="P:JokerNameList" substitutionGroup="Z:NameList"/>
  <xs:element name="JokerPred"     type="P:JokerPred"     substitutionGroup="Z:Pred"/>
  <xs:element name="JokerDeclList" type="P:JokerDeclList" substitutionGroup="Z:DeclList"/>
  <xs:element name="HeadDeclList"  type="P:HeadDeclList" substitutionGroup="Z:DeclList"/>
  <xs:element name="JokerName" type="P:JokerName" substitutionGroup="Z:Name"/>

  <xs:element name="Binding" type="P:Binding" abstract="true">
    <xs:annotation>
      <xs:documentation>
	Base class for the various kinds of bindings within each joker.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="JokerExprBinding"     type="P:JokerExprBinding"     substitutionGroup="P:Binding"/>
  <xs:element name="JokerExprListBinding" type="P:JokerExprListBinding" substitutionGroup="P:Binding"/>
  <xs:element name="JokerRenameListBinding" type="P:JokerRenameListBinding" substitutionGroup="P:Binding"/>
  <xs:element name="JokerStrokeBinding" type="P:JokerStrokeBinding" substitutionGroup="P:Binding"/>
  <xs:element name="JokerNameListBinding" type="P:JokerNameListBinding" substitutionGroup="P:Binding"/>
  <xs:element name="JokerPredBinding"     type="P:JokerPredBinding"     substitutionGroup="P:Binding"/>
  <xs:element name="JokerDeclListBinding" type="P:JokerDeclListBinding" substitutionGroup="P:Binding"/>
  <xs:element name="JokerNameBinding" type="P:JokerNameBinding" substitutionGroup="P:Binding"/>

  <xs:element name="SequentContext" type="P:SequentContext">
    <xs:annotation>
      <xs:documentation>
        The left-hand-side of a sequent is a sequence
        of names and Z paragraphs.  (More design needed
        here to decide exactly how to write this and what
        restrictions are necessary).
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Deduction" type="P:Deduction" abstract="true">
    <xs:annotation>
      <xs:documentation>
        A deduction is an application of a Rule to a Sequent.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="RuleAppl"
              type="P:RuleAppl"
              substitutionGroup="P:Deduction">
    <xs:annotation>
      <xs:documentation>
        An application of a Rule to a Sequent.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="OracleAppl"
              type="P:OracleAppl"
              substitutionGroup="P:Deduction">
    <xs:annotation>
      <xs:documentation>
        An application of an Orcale to a Sequent.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="OracleAnswer" type="P:OracleAnswer" abstract="true">
    <xs:annotation>
      <xs:documentation>
        The answer of the oracle.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="CheckPassed"
              type="P:CheckPassed"
              substitutionGroup="P:OracleAnswer">
    <xs:annotation>
      <xs:documentation>
        A successful check.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:element name="Sequent" type="P:Sequent">
    <xs:annotation>
      <xs:documentation>
        A sequent is of the form Context |- Predicate,
        where the Predicate may contain joker variables.  A sequent
        is true when the predicate is provable from the context of
        the sequent.
      </xs:documentation>
    </xs:annotation>
  </xs:element>

  <xs:complexType name="SequentList">
    <xs:complexContent>
      <xs:extension base="Z:Term">
        <xs:sequence>
          <xs:element ref="P:Sequent"  minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RulePara">
    <xs:complexContent>
      <xs:extension base="Z:Para">
        <xs:sequence>
          <xs:element ref="P:Sequent">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Rule">
    <xs:complexContent>
      <xs:extension base="P:RulePara">
        <xs:sequence>
          <xs:element ref="P:SequentList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property name="Premisses"
                  generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Oracle">
    <xs:complexContent>
      <xs:extension base="P:RulePara"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Jokers">
    <xs:complexContent>
      <xs:extension base="Z:Para">
        <xs:sequence>
          <xs:element name="Name" type="xs:string"  minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="Kind" type="P:JokerType"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:simpleType name="JokerType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="DeclList"/>
      <xs:enumeration value="Expr"/>
      <xs:enumeration value="ExprList"/>
      <xs:enumeration value="Name"/>
      <xs:enumeration value="NameList"/>
      <xs:enumeration value="Pred"/>
      <xs:enumeration value="RenameList"/>
      <xs:enumeration value="Stroke"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="Deduction">
    <xs:complexContent>
      <xs:extension base="Z:Term"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="RuleAppl">
    <xs:complexContent>
      <xs:extension base="P:Deduction">
        <xs:sequence>
          <xs:element ref="P:Binding" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="P:SequentList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="OracleAppl">
    <xs:complexContent>
      <xs:extension base="P:Deduction">
        <xs:sequence>
          <xs:element ref="P:Binding" minOccurs="0" maxOccurs="unbounded"/>
          <xs:element ref="P:OracleAnswer" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="Name" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="OracleAnswer">
    <xs:complexContent>
      <xs:extension base="Z:Term"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="CheckPassed">
    <xs:complexContent>
      <xs:extension base="P:OracleAnswer">
        <xs:sequence>
          <xs:element ref="P:Binding" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <!-- The hierarchy of sequents -->
  <xs:complexType name="SequentContext">
    <xs:complexContent>
      <xs:extension base="Z:Term"/>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Sequent">
    <xs:complexContent>
      <xs:extension base="Z:Term">
        <xs:sequence>
          <xs:element ref="P:SequentContext">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:Pred"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="JokerExpr">
    <xs:complexContent>
      <xs:extension base="Z:Expr">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerExprList">
    <xs:complexContent>
      <xs:extension base="Z:ExprList">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerRenameList">
    <xs:complexContent>
      <xs:extension base="Z:RenameList">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerStroke">
    <xs:complexContent>
      <xs:extension base="Z:Stroke">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerNameList">
    <xs:complexContent>
      <xs:extension base="Z:NameList">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerPred">
    <xs:complexContent>
      <xs:extension base="Z:Pred">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerDeclList">
    <xs:complexContent>
      <xs:extension base="Z:DeclList">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="HeadDeclList">
    <xs:complexContent>
      <xs:extension base="Z:DeclList">
        <xs:sequence>
          <xs:element ref="Z:ZDeclList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="P:JokerDeclList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerName">
    <xs:complexContent>
      <xs:extension base="Z:Name">
        <xs:attribute name="Name" type="xs:string"/>
        <xs:attribute name="Id" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="Binding">
    <xs:complexContent>
      <xs:extension base="Z:Term"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerExprBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerExpr">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:Expr"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerExprListBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerExprList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:ExprList"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerRenameListBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerRenameList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:RenameList"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerStrokeBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerStroke">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:Stroke"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerNameListBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerNameList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:NameList"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerPredBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerPred">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:Pred"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerDeclListBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerDeclList">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:DeclList"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="JokerNameBinding">
    <xs:complexContent>
      <xs:extension base="P:Binding">
        <xs:sequence>
          <xs:element ref="P:JokerName">
            <xs:annotation>
              <xs:appinfo>
                <jaxb:property generateElementProperty="true"/>
              </xs:appinfo>
            </xs:annotation>
          </xs:element>
          <xs:element ref="Z:Name"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
</xs:schema>
