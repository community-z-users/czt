<project name="rules" default="all">
  <property name="czt.home" location=".."/>
  <property file="${czt.home}/czt.properties"/>
  <property name="rules.jar.dir" location="${czt.home}/${jar.dir}"/>
  <property name="jar.file" location="${rules.jar.dir}/${rules.jar.file}"/>
  <property name="rules.src.dir" location="src/main/java"/>
  <property name="rules.build.dir" location="build"/>
  <property name="rules.api.dir" location="doc/api"/>
  <property name="test.src.dir" location="src/test/java"/>
  <property name="test.build.dir" location="${rules.build.dir}/test"/>
  <property name="test.jar.file" location="${rules.build.dir}/tests.jar"/>
  <property name="codegen.src.dir" location="src/codegen/java"/>
  <property name="codegen.build.dir" location="${rules.build.dir}/codegen"/>
  <property name="codegen.jar.file" location="${rules.build.dir}/codegen.jar"/>

  <path id="classpath">
    <pathelement path="${jwsdp.classpath}"/>
    <pathelement location="${typecheck.build.dir}"/>
    <pathelement location="${czt.home}/${jar.dir}/${corejava.base.jar.file}"/>
    <pathelement location="${czt.home}/${jar.dir}/${corejava.core.jar.file}"/>
    <pathelement location="${czt.home}/${jar.dir}/${corejava.jaxb.jar.file}"/>
    <pathelement location="${czt.home}/${jar.dir}/${corejava.zpatt.jar.file}"/>
    <pathelement location="${czt.home}/${jar.dir}/${session.jar.file}"/>
    <pathelement location="${czt.home}/${jar.dir}/${parser.jar.file}"/>
    <pathelement location="${czt.home}/${jar.dir}/${java_cup.jar.file}"/>    
    <pathelement location="${czt.home}/${jar.dir}/${typechecker.jar.file}"/>
    <pathelement path="${java.class.path}"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${rules.build.dir}"/>
    <mkdir dir="${test.build.dir}"/>
    <mkdir dir="${codegen.build.dir}"/>
    <mkdir dir="build/src/net/sourceforge/czt/rules/ast"/>
  </target>

  <target name="all" depends="install, doc"
    description="build the jar files and the documentation"/>

  <target name="install" depends="compile"
          description="build and install the jar files">
    <mkdir dir="${rules.jar.dir}"/>
    <jar jarfile="${jar.file}">
      <fileset dir="${rules.build.dir}"/>
      <fileset dir="src/main/resources"/>
    </jar>
  </target>

  <target name="compile" depends="codegen"
          description="compile the sources">
    <javac
      srcdir="${rules.src.dir}:build/src"
      destdir="${rules.build.dir}"
      debug="${debug}"
      debuglevel="${debuglevel}"
      optimize="${optimize}">
      <classpath refid="classpath"/>
      <compilerarg value="${compilerarg}"/>
    </javac>
  </target>

  <target name="codegen" depends="run-codegen"/>

  <target name="compile-codegen" depends="init">
    <javac
      srcdir="${codegen.src.dir}"
      destdir="${codegen.build.dir}"
      debug="${debug}"
      debuglevel="${debuglevel}"
      optimize="${optimize}">
      <classpath>
        <pathelement path="${velocity.classpath}"/>
        <pathelement path="${jwsdp.classpath}"/>
      </classpath>
      <classpath refid="classpath"/>
      <compilerarg value="${compilerarg}"/>
    </javac>
  </target>

  <target name="install-codegen" depends="compile-codegen">
    <mkdir dir="${rules.build.dir}"/>
    <jar jarfile="${codegen.jar.file}">
      <fileset dir="${codegen.build.dir}"/>
    </jar>
  </target>

  <target name="run-codegen" depends="install-codegen">
    <java classname="net.sourceforge.czt.rules.codegen.Main" fork="true">
      <arg line="../zml/ZPattern.xsd"/>
      <classpath>
        <pathelement location="${velocity.jar}"/>
        <pathelement location="${codegen.jar.file}"/>
      </classpath>
      <classpath refid="classpath"/> 
      <assertions>
        <enable/>
      </assertions>
    </java>
  </target>

  <target name="test" depends="run-tests">
    <junitreport todir="${rules.build.dir}">
      <fileset dir="${rules.build.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${rules.build.dir}/report"/>
    </junitreport>
  </target>

  <target name="compile-tests" depends="install">
    <javac
      srcdir="${test.src.dir}"
      destdir="${test.build.dir}"
      debug="${debug}"
      debuglevel="${debuglevel}"
      optimize="${optimize}">
      <classpath>
        <pathelement location="${jar.file}"/>
      </classpath>
      <classpath refid="classpath"/>
      <compilerarg value="${compilerarg}"/>
    </javac>
  </target>

  <target name="install-tests" depends="compile-tests">
    <mkdir dir="${rules.build.dir}"/>
    <jar jarfile="${test.jar.file}">
      <fileset dir="${test.build.dir}"/>
      <fileset dir="src/test/resources"/>
    </jar>
  </target>

  <target name="run-tests" depends="install-tests">
    <junit fork="yes" printsummary="on">
      <formatter type="xml"/>
      <test toDir="${rules.build.dir}"
        name="net.sourceforge.czt.rules.SimpleProverTest"/>
      <classpath>
        <pathelement location="${jar.file}"/>
        <pathelement location="${test.jar.file}"/>
      </classpath>
      <classpath refid="classpath"/>
    </junit>
  </target>

  <target name="doc" depends="api"
    description="build all the documentation"/>

  <target name="api"
          description="build the API documentation">
    <mkdir dir="${rules.api.dir}"/>
    <javadoc
      destdir="${rules.api.dir}"
      private="true">
      <packageset dir="${rules.src.dir}"/>
      <packageset dir="build/src"/>
      <tag name="czt.todo" description="To do:"/>
      <classpath refid="classpath"/>
    </javadoc>
  </target>

  <target name="checkstyle" description="check java sources">
    <taskdef resource="checkstyletask.properties"
      classpath="${checkstyle.jar}"/>
    <checkstyle config="${czt.home}/devtools/checkstyle.xml">
      <fileset dir="${rules.src.dir}"/>
      <formatter type="plain"/>
    </checkstyle>
  </target>

  <target name="clean"
          description="clean up">
    <delete dir="${rules.build.dir}"/>
    <delete dir="${rules.api.dir}"/>
  </target>
</project>
