<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/dtd/document-v12.dtd">
<document> 
  <header> 
   <title>Welcome to CZT</title> 
  </header> 
  <body> 
    <section>
      <title>Overview</title>
      <p>The Community Z Tools (CZT) project is building a set of tools
        for editing, typechecking and animating formal specifications
        written in the <link href="site:whatisz">
        Z specification language</link>, with some support for Z extensions
	such as Object-Z and TCOZ.
        These tools are all built using the CZT Java framework for Z tools.
      </p>
    </section>
    <section>
      <title>Background</title>
        <p>[Adapted from Andrew Martin's 
          <link href="ext:original-proposal">original CZT proposal</link>]
	  The Z specification language was adopted as an ISO standard in 2002.
          It can be used to precisely specify the requirements or behaviour of
          systems, and analyze that behaviour via proof, animation,
          test generation etc.  However, one of the biggest barriers to the
          widespread use of the Z specification language seems to be the issue
          of tool support.
        </p>
        <p>Many projects have constructed Z tools, some of product quality,
          most as student projects. Few of them are integrated with each other;
          few support all the new ISO standard; fewer still build together
          to form the kind of integrated environment that developers are
          beginning to expect. Many good ideas have been developed to
          prototype stage, and then have been lost as projects have
          finished and students or researchers have moved on.  The number
          of times a request for a Z parser arises in the Z newsgroup
          suggests lots of people are producing tools, most of which will
          never be seen outside their own institute. An integrated effort
          will move forward the state of tools, and thereby the take-up of
          Z. 
        </p>
    </section>
    <section>
      <title>CZT Objectives</title>
      <p>Our objectives are to encourage interchange between existing Z
         tools (via a standard XML interchange format for Z),
         and to provide open-source libraries for building and integrating
         new Z tools.
         The software we build will include at least:
      </p>
      <ol>
        <li>An <link href="site:zml">XML Schema markup</link> for Z.
            See the <link href="ext:zb-2003">ZB2003</link>
            proceedings for a paper describing this markup.</li>
        <li><link href="http://czt.sourceforge.net/corejava/api/">Java
            classes</link> for Z annotated syntax trees (AST).</li>
        <li>Java classes for converting between XML and Java AST.</li>
        <li>Java libraries for the common operations needed in every Z tool
            (markup-converters, parser, type-checker, schema expansion
            etc.)</li>
        <li>One or more simple graphical Z editors, with facilities for
            easily entering the special Z unicode symbols.  Initially we
            are using <link href="ext:jedit">JEdit</link>.</li>
        <li>A Z animation tool, with a customisable graphical user
            interface.</li> 
        <li>Export tools, to output Z in other notations or for other Z tools.
            (example, HTML output, LaTeX output, translation to B and
            JML).</li> 
        <li>The ability to extend the libraries to support Z extensions
            such as <link href="ext:objectz">Object-Z</link>
            and <link href="ext:tcoz">TCOZ</link>.
        </li>
      </ol>
    </section>
  </body>
</document>
