<project name="corejava" default="all" basedir=".">
  <property name="czt.home" location=".."/>
  <property file="${czt.home}/czt.properties"/>
  <property name="corejava.jar.dir" location="${czt.home}/${jar.dir}"/>
  <property name="util.jar" location="${corejava.jar.dir}/${util.jar.file}"/>
  <property name="jaxb.jar" location="${corejava.jar.dir}/${jaxb.jar.file}"/>
  <property name="corejava.src.dir" location="src/main/java"/>
  <property name="test.src.dir" location="src/test/java"/>
  <property name="corejava.build.dir" location="build"/>
  <property name="corejava.build.xsd" location="${corejava.build.dir}/xsd"/>
  <property name="corejava.build.core" location="${corejava.build.dir}/core"/>
  <property name="corejava.build.oz" location="${corejava.build.dir}/oz"/>
  <property name="corejava.build.tcoz" location="${corejava.build.dir}/tcoz"/>
  <property name="corejava.build.zpatt" location="${corejava.build.dir}/zpatt"/>  
  <property name="corejava.build.circus" location="${corejava.build.dir}/circus"/>
  <property name="corejava.build.jaxb" location="${corejava.build.dir}/jaxb"/>
  <property name="test.build.dir" location="${corejava.build.dir}/test"/>
  <property name="test.build.classes" location="${corejava.build.dir}/test/classes"/>
  <property name="corejava.core.jar" location="${corejava.jar.dir}/${corejava.core.jar.file}"/>
  <property name="corejava.oz.jar" location="${corejava.jar.dir}/${corejava.oz.jar.file}"/>
  <property name="corejava.tcoz.jar" location="${corejava.jar.dir}/${corejava.tcoz.jar.file}"/>
  <property name="corejava.zpatt.jar" location="${corejava.jar.dir}/${corejava.zpatt.jar.file}"/>
  <property name="corejava.circus.jar" location="${corejava.jar.dir}/${corejava.circus.jar.file}"/>
  <property name="corejava.jaxb.jar" location="${corejava.jar.dir}/${corejava.jaxb.jar.file}"/>
  <property name="corejava.api.dir" location="doc/api"/>
  <property name="corejava.api.jaxb.dir" location="doc/jaxb-api"/>  
  <property name="corejava.api.src.jar.file" location="${corejava.jar.dir}/doc-corejava.jar"/>  

  <path id="classpath">
    <pathelement location="${util.jar}"/>
    <pathelement location="${corejava.build.core}"/>
    <pathelement location="${corejava.build.oz}"/>
    <pathelement location="${corejava.build.tcoz}"/>
    <pathelement location="${corejava.build.zpatt}"/>
    <pathelement location="${corejava.build.circus}"/>
    <pathelement path="${jwsdp.classpath}"/>
  </path>

  <target name="all" depends="install, api"
    description="build the jar files and the API documentation"/>

  <target name="init">
    <tstamp/>
    <mkdir dir="${corejava.build.dir}"/>
    <mkdir dir="${corejava.build.xsd}"/>
    <mkdir dir="${test.build.classes}"/>
  </target>

  <target name="install"
    depends="install-core,install-oz,install-tcoz,install-zpatt,install-circus,install-jaxb"
    description="install the jar files">
    <mkdir dir="${corejava.jar.dir}"/>
  </target>

  <target name="compile"
    depends="compile-core,compile-oz,compile-zpatt,compile-circus,compile-jaxb"
    description="compile the source code"/>

  <!-- core (standard Z) -->

  <target name="install-core" depends="compile-core"
          description="generate the core jar file" >
    <mkdir dir="${corejava.jar.dir}"/>
    <jar jarfile="${corejava.core.jar}">
      <fileset dir="${corejava.build.core}"/>
    </jar>
  </target>

  <target name="compile-core"
          depends="init"
          description="compile the core (standard Z) source code">
    <mkdir dir="${corejava.build.core}"/>
    <javac
      srcdir="${corejava.src.dir}"
      destdir="${corejava.build.core}"
      includes="net/sourceforge/czt/z/**"
      excludes="net/sourceforge/czt/z/jaxb/**"
      debug="${debug}"
      debuglevel="${debuglevel}"
      deprecation="on"
      optimize="${optimize}">
      <classpath>
        <pathelement location="${util.jar}"/>
      </classpath>
    </javac>
  </target>

  <!-- Object Z -->

  <target name="install-oz" depends="compile-oz"
          description="generate the Object Z jar file" >
    <mkdir dir="${corejava.jar.dir}"/>
    <jar jarfile="${corejava.oz.jar}">
      <fileset dir="${corejava.build.oz}"/>
    </jar>
  </target>

  <target name="compile-oz"
          depends="init, compile-core"
          description="compile the Object Z source code">
    <mkdir dir="${corejava.build.oz}"/>
    <javac
      srcdir="${corejava.src.dir}"
      destdir="${corejava.build.oz}"
      includes="net/sourceforge/czt/oz/**"
      excludes="net/sourceforge/czt/oz/jaxb/**"
      debug="${debug}"
      debuglevel="${debuglevel}"
      deprecation="on"
      optimize="${optimize}">
      <classpath>
        <pathelement location="${util.jar}"/>
        <pathelement location="${corejava.build.core}"/>
      </classpath>
    </javac>
  </target>

  <!-- TCOZ -->

  <target name="install-tcoz" depends="compile-tcoz"
          description="generate the Object Z jar file" >
    <mkdir dir="${corejava.jar.dir}"/>
    <jar jarfile="${corejava.tcoz.jar}">
      <fileset dir="${corejava.build.tcoz}"/>
    </jar>
  </target>

  <target name="compile-tcoz"
    depends="init, compile-core, compile-oz"
    description="compile the Object Z source code">
    <mkdir dir="${corejava.build.tcoz}"/>
    <javac
      srcdir="${corejava.src.dir}"
      destdir="${corejava.build.tcoz}"
      includes="net/sourceforge/czt/tcoz/**"
      excludes="net/sourceforge/czt/tcoz/jaxb/**"
      debug="${debug}"
      debuglevel="${debuglevel}"
      deprecation="on"
      optimize="${optimize}">
      <classpath>
        <pathelement location="${util.jar}"/>
        <pathelement location="${corejava.build.core}"/>
        <pathelement location="${corejava.build.oz}"/>
      </classpath>
    </javac>
  </target>

  <!-- Z pattern support -->

  <target name="install-zpatt" depends="compile-zpatt"
          description="generate the ZPattern jar file" >
    <mkdir dir="${corejava.jar.dir}"/>
    <jar jarfile="${corejava.zpatt.jar}">
      <fileset dir="${corejava.build.zpatt}"/>
    </jar>
  </target>

  <target name="compile-zpatt"
          depends="init, compile-core"
          description="compile the Z pattern source code">
    <mkdir dir="${corejava.build.zpatt}"/>
    <javac
      srcdir="${corejava.src.dir}"
      destdir="${corejava.build.zpatt}"
      includes="net/sourceforge/czt/zpatt/**"
      excludes="net/sourceforge/czt/zpatt/jaxb/**"
      debug="${debug}"
      debuglevel="${debuglevel}"
      deprecation="on"
      optimize="${optimize}">
      <classpath>
        <pathelement location="${util.jar}"/>
        <pathelement location="${corejava.build.core}"/>
      </classpath>
    </javac>
  </target>

  <!-- Circus support -->

  <target name="install-circus" depends="compile-circus"
          description="generate the Circus jar file" >
    <mkdir dir="${corejava.jar.dir}"/>
    <jar jarfile="${corejava.circus.jar}">
      <fileset dir="${corejava.build.circus}"/>
    </jar>
  </target>

  <target name="compile-circus"
          depends="init, compile-core"
          description="compile the Circus source code">
    <mkdir dir="${corejava.build.circus}"/>
    <javac
      srcdir="${corejava.src.dir}"
      destdir="${corejava.build.circus}"
      includes="net/sourceforge/czt/circus/**"
      excludes="net/sourceforge/czt/circus/jaxb/**"
      debug="${debug}"
      debuglevel="${debuglevel}"
      deprecation="on"
      optimize="${optimize}">
      <classpath>
        <pathelement location="${util.jar}"/>
        <pathelement location="${corejava.build.core}"/>
      </classpath>
    </javac>
  </target>

  <!-- Jaxb support -->

  <target name="install-jaxb" depends="compile-jaxb"
          description="generate the Jaxb jar file" >
    <mkdir dir="${corejava.jar.dir}"/>
    <unjar src="${jaxb.jar}" dest="${corejava.build.jaxb}"/>
    <jar jarfile="${corejava.jaxb.jar}">
      <fileset dir="${corejava.build.jaxb}"/>
      <fileset dir="${corejava.src.dir}">
        <include name="**/*.properties"/>
      </fileset>
    </jar>
  </target>

  <target name="compile-jaxb"
          depends="init, compile-core, compile-oz, compile-tcoz, compile-zpatt, compile-circus"
          description="compile the Jaxb source code">
    <mkdir dir="${corejava.build.jaxb}"/>
    <javac
      srcdir="${corejava.src.dir}"
      destdir="${corejava.build.jaxb}"
      includes="net/sourceforge/czt/**/jaxb/**,org/**"
      debug="${debug}"
      debuglevel="${debuglevel}"
      optimize="${optimize}"
      fork="yes"
      memoryMaximumSize="128m">
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${jaxb.jar}"/>
      </classpath>
    </javac>
  </target>

  <!-- Documentation -->

  <target name="api"
          description="build the API documentation">
    <mkdir dir="${corejava.api.dir}"/>
    <javadoc
      destdir="${corejava.api.dir}"
      maxmemory="128m"
      private="true"
      Overview="${corejava.src.dir}/overview.html">
      <packageset dir="${corejava.src.dir}" defaultexcludes="yes">
        <include name="net/sourceforge/**"/>
        <exclude name="**/jaxb/gen/**"/>
      </packageset>
      <tag name="czt.todo" description="To do:"/>
      <doctitle><![CDATA[<h1>The Annotated Syntax Tree (AST) for Z API</h1>]]></doctitle>
      <group title="Standard Z Packages" packages="net.sourceforge.czt.z.*"/>
      <group title="Object Z Packages" packages="net.sourceforge.czt.oz.*"/>
      <group title="Timed Communicating Object Z Packages" packages="net.sourceforge.czt.tcoz.*"/>
      <group title="Z Pattern Packages" packages="net.sourceforge.czt.zpatt.*"/>      
      <group title="Circus Packages" packages="net.sourceforge.czt.circus.*"/>
      <classpath>
        <pathelement location="${util.jar}"/>
        <pathelement path="${jwsdp.classpath}"/>
      </classpath>
    </javadoc>
  </target>

  <target name="jaxb-api"
          description="build the API documentation for JAXB generated classes">
    <mkdir dir="${corejava.api.jaxb.dir}"/>
    <javadoc
      sourcepath="${corejava.src.dir}"
      destdir="${corejava.api.jaxb.dir}"
      private="true">
      <packageset dir="${corejava.src.dir}" defaultexcludes="yes">
        <include name="org/**"/>
        <include name="**/jaxb/gen/**"/>
      </packageset>
      <classpath>
        <pathelement location="${util.jar}"/>
        <pathelement path="${jwsdp.classpath}"/>
      </classpath>
    </javadoc>
  </target>

  <target name="api-src" depends="api"
    description="generate the jar file with corejava api doc" >
    <mkdir dir="${corejava.jar.dir}"/>
    <jar jarfile="${corejava.api.src.jar.file}">
      <fileset dir="${corejava.api.dir}"/>
    </jar>
  </target>   
  
  <target name="examples" depends="install"
    description="build and run the examples">
    <ant dir="examples/debug"/>
    <ant dir="examples/object-z"/>
    <ant dir="examples/substitutionVisitor"/>
  </target>

  <target name="test" depends="test-run"
    description="build and run the tests"/>

  <target name="test-compile" depends="install" description="compile the test">
    <javac srcdir="${test.src.dir}" destdir="${test.build.classes}" debug="on">
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${corejava.jaxb.jar}"/>
     </classpath>
    </javac>
    <copy toDir="${test.build.classes}">
      <fileset dir="../zml/examples/z">
        <include name="Sched.xml"/>
        <include name="birthdaybook.xml"/>
      </fileset>
    </copy>
  </target>

  <target name="test-run" depends="test-compile">
    <junit dir="${test.build.classes}" fork="yes" printsummary="on">
      <formatter type="xml"/>
      <test toDir="${test.build.dir}"
        name="net.sourceforge.czt.z.impl.AstTest"/>
      <test toDir="${test.build.dir}"
        name="net.sourceforge.czt.z.jaxb.JaxbXmlWriterReaderTest"/>
      <test toDir="${test.build.dir}"
        name="net.sourceforge.czt.z.util.OperatorNameTest"/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${corejava.jaxb.jar}"/>
        <pathelement location="${test.build.classes}"/>
      </classpath>
      <assertions>
        <enable/>
      </assertions>
    </junit>
  </target>

  <target name="test-report">
    <junitreport todir="${test.build.dir}">
      <fileset dir="${test.build.dir}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${corejava.build.dir}/test-report"/>
    </junitreport>
  </target>

  <target name="clean"
          description="clean up">
    <delete dir="${corejava.build.dir}"/>
    <delete dir="${corejava.api.dir}"/>
    <delete dir="${corejava.api.jaxb.dir}"/>
  </target>
</project>
