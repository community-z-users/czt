
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circus.ast;

import net.sourceforge.czt.base.ast.*;
import net.sourceforge.czt.z.ast.*;

/**
 * <p>
        An action signature consists of the action name, formal parameters, and the channels usage.             
        The channels usage is function from channel name to a set of usage flags.
        These flags can be either IN, OUT, SYNCH or HIDE.
        In the case of HIDE, all other flags are irrelevant.                
        </p>
 *
 * @author Gnast version 0.1
 */
public interface ActionSignature extends Term
{

  /**
   * Returns the ActionName element.
   *
   * @return the ActionName element.
   */
  net.sourceforge.czt.z.ast.DeclName getActionName();


  /**
   * Sets the ActionName element.
   *
   * @param actionName   the ActionName element.
   * @see #getActionName
   */
  void setActionName(net.sourceforge.czt.z.ast.DeclName actionName);

  /**
   * Returns the FormalParams element.
   *
   * @return the FormalParams element.
   */
  net.sourceforge.czt.z.ast.Signature getFormalParams();


  /**
   * Sets the FormalParams element.
   *
   * @param formalParams   the FormalParams element.
   * @see #getFormalParams
   */
  void setFormalParams(net.sourceforge.czt.z.ast.Signature formalParams);

  /**
   * Returns the LocalVars element.
   *
   * @return the LocalVars element.
   */
  net.sourceforge.czt.z.ast.Signature getLocalVars();


  /**
   * Sets the LocalVars element.
   *
   * @param localVars   the LocalVars element.
   * @see #getLocalVars
   */
  void setLocalVars(net.sourceforge.czt.z.ast.Signature localVars);

  /**
   * Returns the UsedChannels element.
   *
   * @return the UsedChannels element.
   */
  net.sourceforge.czt.z.ast.Signature getUsedChannels();


  /**
   * Sets the UsedChannels element.
   *
   * @param usedChannels   the UsedChannels element.
   * @see #getUsedChannels
   */
  void setUsedChannels(net.sourceforge.czt.z.ast.Signature usedChannels);
}
