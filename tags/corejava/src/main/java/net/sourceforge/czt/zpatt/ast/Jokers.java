
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.zpatt.ast;

import net.sourceforge.czt.base.ast.*;
import net.sourceforge.czt.z.ast.*;

/**
 * This records the names that have been declared as a particular
        kind of joker.  It is used by the parser to map those names to
        the appropriate kind of JokerXXX term, but is not needed later
        when rules are being used.  It is similar in purpose to the
        LaTeX markup directives in the standard Z XML schema.
 *
 * @author Gnast version 0.1
 */
public interface Jokers extends Para
{

  /**
   * <p>Returns the Name elements.</p>
   * <p>To add or remove elements, use the methods provided by
   * the List interface (that's why there is no need for a setter
   * method).</p>
   *
   * @return a list of String elements.
   */
  net.sourceforge.czt.base.ast.ListTerm<String> getName();

  /**
   * Returns the Kind element.
   *
   * @return the Kind element.
   */
  JokerType getKind();


  /**
   * Sets the Kind element.
   *
   * @param kind   the Kind element.
   * @see #getKind
   */
  void setKind(JokerType kind);
}
