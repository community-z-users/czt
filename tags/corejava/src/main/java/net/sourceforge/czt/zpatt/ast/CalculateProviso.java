
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.zpatt.ast;

import net.sourceforge.czt.base.ast.*;
import net.sourceforge.czt.z.ast.*;

/**
 * The conclusion of this sequent is written as ExprJoker==Expr,
        where Expr contains a restricted set of known operators for
        calculating sets of names and performing substitutions etc.
        When the proviso is executed, it calculates the value of
        Expr and binds ExprJoker to that value.
        TODO: We also want to allow ExprJoker to be a list of names here?
 *
 * @author Gnast version 0.1
 */
public interface CalculateProviso extends Proviso
{

  /**
   * Returns the LeftExpr element.
   *
   * @return the LeftExpr element.
   */
  net.sourceforge.czt.z.ast.Expr getLeftExpr();


  /**
   * Sets the LeftExpr element.
   *
   * @param leftExpr   the LeftExpr element.
   * @see #getLeftExpr
   */
  void setLeftExpr(net.sourceforge.czt.z.ast.Expr leftExpr);

  /**
   * Returns the RightExpr element.
   *
   * @return the RightExpr element.
   */
  net.sourceforge.czt.z.ast.Expr getRightExpr();


  /**
   * Sets the RightExpr element.
   *
   * @param rightExpr   the RightExpr element.
   * @see #getRightExpr
   */
  void setRightExpr(net.sourceforge.czt.z.ast.Expr rightExpr);
}
