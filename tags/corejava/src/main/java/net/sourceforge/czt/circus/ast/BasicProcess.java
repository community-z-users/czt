
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circus.ast;

import net.sourceforge.czt.base.ast.*;
import net.sourceforge.czt.z.ast.*;

/**
 * <p>
        A process definition for an explicit process declaration.
        It is formed by a (possibly empty) set of process paragraphs,
        an optional process state given as a schema and a (mandatory) 
        main action definition.
        </p>
        <p>
        It represents the grammar rule <b>begin</b> <code>PParagraph*</code> <b>state</b> <code>Schema-Exp PParagraph*</code>
        <b>@</b> <code>Action</code> <b>end</b>.
        </p>
        <p>
                For the process state, the corresponding action (as a SchExprAction) or Z paragraph (as a Schema or HorizontalDef) 
                must contain a <code>CircusStateAnn</code> annotation.
        </p>
 *
 * @author Gnast version 0.1
 */
public interface BasicProcess extends CircusProcess
{

  /**
   * Returns the StatePara element.
   *
   * @return the StatePara element.
   */
  net.sourceforge.czt.z.ast.Para getStatePara();


  /**
   * Sets the StatePara element.
   *
   * @param statePara   the StatePara element.
   * @see #getStatePara
   */
  void setStatePara(net.sourceforge.czt.z.ast.Para statePara);

  /**
   * Returns the LocalPara element.
   *
   * @return the LocalPara element.
   */
  net.sourceforge.czt.z.ast.ParaList getLocalPara();


  /**
   * Sets the LocalPara element.
   *
   * @param localPara   the LocalPara element.
   * @see #getLocalPara
   */
  void setLocalPara(net.sourceforge.czt.z.ast.ParaList localPara);

  /**
   * Returns the OnTheFlyPara element.
   *
   * @return the OnTheFlyPara element.
   */
  net.sourceforge.czt.z.ast.ParaList getOnTheFlyPara();


  /**
   * Sets the OnTheFlyPara element.
   *
   * @param onTheFlyPara   the OnTheFlyPara element.
   * @see #getOnTheFlyPara
   */
  void setOnTheFlyPara(net.sourceforge.czt.z.ast.ParaList onTheFlyPara);

  /**
   * Returns the MainAction element.
   *
   * @return the MainAction element.
   */
  CircusAction getMainAction();


  /**
   * Sets the MainAction element.
   *
   * @param mainAction   the MainAction element.
   * @see #getMainAction
   */
  void setMainAction(CircusAction mainAction);
}
