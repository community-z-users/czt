
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.circus.ast;

import net.sourceforge.czt.base.ast.*;
import net.sourceforge.czt.z.ast.*;

/**
 * <p>
        An channel set expression is a special kind of expression used in Circus that is
        not within the Z expressions subtree. It represents the <b>CSExpression</b> grammar rule.
        </p>
        <p>
        Although it is formed by a Z expression, channel set expressions cannot appear wherever a Z expression can;
        they are only allowed in some operators such parallelism and hiding. For this it encpasulates a Z expression
        within the <code>ChannelSet</code> class.
        </p>
        <p>
        The most common Z expressions used in channel sets are set extensions, the empty set, and application expressions.
        The most common application expressions are set union, intersection, and diference. Other (possibly user defined) 
        functions can also be used.
        </p>
        <p>
        In any case, a channel set expression is well-typed only if the names it refer to are from previously declared channels,
        or a previously declared channel set. That is, a well-typed <code>ChannelSet</code> must be a power type of previously declared
        channel names.
        </p>
 *
 * @author Gnast version 0.1
 */
public interface ChannelSet extends Term
{

  /**
   * Returns the Expr element.
   *
   * @return the Expr element.
   */
  net.sourceforge.czt.z.ast.Expr getExpr();


  /**
   * Sets the Expr element.
   *
   * @param expr   the Expr element.
   * @see #getExpr
   */
  void setExpr(net.sourceforge.czt.z.ast.Expr expr);
}
