//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class ParallelActionImpl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl
    implements net.sourceforge.czt.circus.jaxb.gen.ParallelAction, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.circus.jaxb.gen.ChannelSet _ChannelSet;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.ParallelAction.class);
    }

    public net.sourceforge.czt.circus.jaxb.gen.ChannelSet getChannelSet() {
        return _ChannelSet;
    }

    public void setChannelSet(net.sourceforge.czt.circus.jaxb.gen.ChannelSet value) {
        _ChannelSet = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_ChannelSet instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "ChannelSet");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_ChannelSet instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_ChannelSet instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.ParallelAction.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001bsr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000,net.sourceforge.czt"
+".z.jaxb.gen.Term.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementssq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000"
+"#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)h"
+"ttp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004Annst\u0000"
+"\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\npp"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~"
+"\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\npp"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~"
+"\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011"
+"pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00006net.sourceforge.czt.circus.jaxb.gen"
+".LetMuActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00006net.sourceforge.czt.circus.jaxb"
+".gen.IntChoiceActionIteq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<net.sourceforge.czt.circus."
+"jaxb.gen.AssignmentCommandElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000"
+"\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<net.sourceforge.c"
+"zt.circus.jaxb.gen.ParallelActionIteElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:net.sou"
+"rceforge.czt.circus.jaxb.gen.PrefixingActionElementq\u0000~\u0000&sq\u0000~"
+"\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000"
+"3net.sourceforge.czt.circus.jaxb.gen.ExtChoiceActionq\u0000~\u0000&sq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000;net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommandElemen"
+"tq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~"
+"\u0000!sq\u0000~\u0000\"t\u0000-net.sourceforge.czt.circus.jaxb.gen.SeqActionq\u0000~\u0000"
+"&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen.HideActionElementq"
+"\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!"
+"sq\u0000~\u0000\"t\u0000/net.sourceforge.czt.circus.jaxb.gen.ChaosActionq\u0000~\u0000"
+"&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"t\u00003net.sourceforge.czt.circus.jaxb.gen.MuActionElementq\u0000~"
+"\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq"
+"\u0000~\u0000\"t\u0000.net.sourceforge.czt.circus.jaxb.gen.StopActionq\u0000~\u0000&sq"
+"\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""
+"t\u00009net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement"
+"q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000"
+"!sq\u0000~\u0000\"t\u0000Enet.sourceforge.czt.circus.jaxb.gen.AlphabetisedPa"
+"rallelActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000/net.sourceforge.czt.circus.jaxb"
+".gen.ParamActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000=net.sourceforge.czt.circus.jaxb.ge"
+"n.SubstitutionActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourceforge.czt.cir"
+"cus.jaxb.gen.SkipActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sourceforge.czt.circus."
+"jaxb.gen.IntChoiceActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus"
+".jaxb.gen.CallActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00006net.sourceforge.czt.cir"
+"cus.jaxb.gen.ExtChoiceActionIteq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004net.sourceforge.czt"
+".circus.jaxb.gen.InterleaveActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000"
+"\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00009net.sourceforge.c"
+"zt.circus.jaxb.gen.VarDeclCommandElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\n"
+"ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00008net.source"
+"forge.czt.circus.jaxb.gen.GuardedActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007net."
+"sourceforge.czt.circus.jaxb.gen.LetVarActionElementq\u0000~\u0000&sq\u0000~"
+"\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000"
+":net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommandElementq"
+"\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!"
+"sq\u0000~\u0000\"t\u00008net.sourceforge.czt.circus.jaxb.gen.SchExprActionEl"
+"ementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000Anet.sourceforge.czt.circus.jaxb.gen.Alphabeti"
+"sedParallelActionIteq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007net.sourceforge.czt.circus.jax"
+"b.gen.InterleaveActionIteq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011ps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00000net.sourceforge.czt.circu"
+"s.jaxb.gen.SeqActionIteq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\npp"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~"
+"\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\npp"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~"
+"\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000cq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000iq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000oq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000uq\u0000~\u0000&"
+"sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"q\u0000~\u0000{q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u0081q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u0087q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u008dq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u0093q\u0000~\u0000&"
+"sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"q\u0000~\u0000\u0099q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u009fq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00a5q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00abq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00b1q\u0000~\u0000&"
+"sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"q\u0000~\u0000\u00b7q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00bdq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00c3q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00c9q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00cfq\u0000~\u0000&"
+"sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"q\u0000~\u0000\u00d5q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00dbq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00e1q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00e7q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00edq\u0000~\u0000&"
+"sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"q\u0000~\u0000\u00f3q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00f9q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000\u00ffq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001\u0005q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001\u000bq\u0000~\u0000&"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq"
+"\u0000~\u0000!sq\u0000~\u0000\"t\u00002net.sourceforge.czt.circus.jaxb.gen.NameSetElem"
+"entq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000+net.sourceforge.czt.circus.jax"
+"b.gen.NameSetq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000\u0007NameSett\u0000!http://czt.sourceforge.net/circussq\u0000~\u0000\nppsq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001\u00bf"
+"q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001\u00c7q\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q"
+"\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001\u00cbq\u0000~\u0001\u00ccsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.ci"
+"rcus.jaxb.gen.ChannelSetElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.ne"
+"t.sourceforge.czt.circus.jaxb.gen.ChannelSetq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\nChannelSetq\u0000~\u0001\u00ccsr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVer"
+"sionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u00cb\u0001p"
+"q\u0000~\u0000\\q\u0000~\u0000Bq\u0000~\u0001\fq\u0000~\u0000\tq\u0000~\u0000Sq\u0000~\u0001\u001dq\u0000~\u0000Tq\u0000~\u0001\u001eq\u0000~\u0001Lq\u0000~\u0001Gq\u0000~\u0000Nq\u0000~\u0001B"
+"q\u0000~\u0001=q\u0000~\u00018q\u0000~\u00013q\u0000~\u0000Kq\u0000~\u0001.q\u0000~\u0001)q\u0000~\u0001\u0007q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00f5q\u0000~\u0000\u00efq\u0000~\u0000\u00e9"
+"q\u0000~\u0000\u00e3q\u0000~\u0000\u00ddq\u0000~\u0000\u00d7q\u0000~\u0000\u00d1q\u0000~\u0000\u00cbq\u0000~\u0000\u0014q\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}"
+"q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5"
+"q\u0000~\u0001Qq\u0000~\u0001Vq\u0000~\u0001[q\u0000~\u0001`q\u0000~\u0001eq\u0000~\u0001jq\u0000~\u0001oq\u0000~\u0001tq\u0000~\u0001yq\u0000~\u0001\u0018q\u0000~\u0001~q\u0000~\u0001\u0083"
+"q\u0000~\u0001\u0088q\u0000~\u0001\u0015q\u0000~\u0001\u008dq\u0000~\u0001\u0092q\u0000~\u0001\u0097q\u0000~\u0001\u009cq\u0000~\u0001\u00a1q\u0000~\u0001\u00a6q\u0000~\u0000Mq\u0000~\u0001\u0017q\u0000~\u0001\u00abq\u0000~\u0001\u00b0"
+"q\u0000~\u0001\u00b5q\u0000~\u0000\bq\u0000~\u0001\u00bbq\u0000~\u0001\u00c3q\u0000~\u0000\u0007q\u0000~\u0001\u00cfq\u0000~\u0001\u00d6q\u0000~\u0001\u00dfq\u0000~\u0001\u00e7q\u0000~\u0000\u0012q\u0000~\u0000Fq\u0000~\u0001\u0010"
+"q\u0000~\u0001\u00c1q\u0000~\u0001\u00d4q\u0000~\u0001\u00e5q\u0000~\u0000Qq\u0000~\u0001\u001bq\u0000~\u0001\'q\u0000~\u0000]q\u0000~\u0000\u0005q\u0000~\u0000Vq\u0000~\u0001 q\u0000~\u0000Wq\u0000~\u0001!"
+"q\u0000~\u0000Hq\u0000~\u0001\u0012q\u0000~\u0000Iq\u0000~\u0001\u0013q\u0000~\u0000Oq\u0000~\u0000Lq\u0000~\u0001\u0019q\u0000~\u0001\u0016q\u0000~\u0001\u00b9q\u0000~\u0001\u00cdq\u0000~\u0001\u00ddq\u0000~\u0001\""
+"q\u0000~\u0000Xq\u0000~\u0000Jq\u0000~\u0001\u0014q\u0000~\u0000Dq\u0000~\u0001\u000eq\u0000~\u0000Uq\u0000~\u0001\u001fq\u0000~\u0000\u0006q\u0000~\u0001%q\u0000~\u0000[q\u0000~\u0000\'q\u0000~\u0001\u00c8"
+"q\u0000~\u0001\u00daq\u0000~\u0001\u00ecq\u0000~\u0000Pq\u0000~\u0001\u001aq\u0000~\u0001$q\u0000~\u0000Zq\u0000~\u0001Mq\u0000~\u0001Hq\u0000~\u0001Cq\u0000~\u0001>q\u0000~\u00019q\u0000~\u00014"
+"q\u0000~\u0001/q\u0000~\u0000Cq\u0000~\u0001*q\u0000~\u0000\u000bq\u0000~\u0001\bq\u0000~\u0001\u0002q\u0000~\u0000\u00fcq\u0000~\u0000\u00f6q\u0000~\u0000\u00f0q\u0000~\u0000\u00eaq\u0000~\u0000\u00e4q\u0000~\u0000\u00de"
+"q\u0000~\u0000\u00d8q\u0000~\u0000\u00d2q\u0000~\u0000\u00ccq\u0000~\u0000\u0017q\u0000~\u0000`q\u0000~\u0000fq\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000~q\u0000~\u0000\u0084q\u0000~\u0000\u008a"
+"q\u0000~\u0000\u0090q\u0000~\u0000\u0096q\u0000~\u0001#q\u0000~\u0000Yq\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6"
+"q\u0000~\u0001Rq\u0000~\u0001Wq\u0000~\u0001\\q\u0000~\u0001aq\u0000~\u0001fq\u0000~\u0001kq\u0000~\u0001pq\u0000~\u0001uq\u0000~\u0001zq\u0000~\u0001\u007fq\u0000~\u0001\u0084q\u0000~\u0001\u0089"
+"q\u0000~\u0001\u008eq\u0000~\u0001\u0093q\u0000~\u0001\u0098q\u0000~\u0001\u009dq\u0000~\u0001\u00a2q\u0000~\u0001\u00a7q\u0000~\u0000Eq\u0000~\u0001\u000fq\u0000~\u0001\u00acq\u0000~\u0001\u00b1q\u0000~\u0001\rq\u0000~\u0001\u00b6"
+"q\u0000~\u0001\u00bcq\u0000~\u0001\u00c4q\u0000~\u0001\u00d0q\u0000~\u0001\u00d7q\u0000~\u0001\u00e0q\u0000~\u0001\u00e8q\u0000~\u0000Gq\u0000~\u0001\u0011q\u0000~\u0000Rq\u0000~\u0001\u001cq\u0000~\u0001&x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetMuAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AssignmentCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PrefixingAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IfGuardedCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChaosAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("StopAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AlphabetisedParallelAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParamAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SubstitutionAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SkipAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CallAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("VarDeclCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("GuardedAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetVarAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SpecStmtCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExprAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AlphabetisedParallelActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CircusAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CircusAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SensorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActuatorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SigmaExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BasicChannelSetExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("ChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("ChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        if (("ChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 4, value));
                            return ;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
