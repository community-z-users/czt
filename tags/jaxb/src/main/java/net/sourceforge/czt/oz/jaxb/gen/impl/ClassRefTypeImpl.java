//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassRefTypeImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl
    implements net.sourceforge.czt.oz.jaxb.gen.ClassRefType, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.oz.jaxb.gen.VisibilityList _VisibilityList;
    protected net.sourceforge.czt.oz.jaxb.gen.ClassRef _ThisClass;
    protected com.sun.xml.bind.util.ListImpl _SuperClass;
    protected com.sun.xml.bind.util.ListImpl _Primary;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassRefType.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.VisibilityList getVisibilityList() {
        return _VisibilityList;
    }

    public void setVisibilityList(net.sourceforge.czt.oz.jaxb.gen.VisibilityList value) {
        _VisibilityList = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.ClassRef getThisClass() {
        return _ThisClass;
    }

    public void setThisClass(net.sourceforge.czt.oz.jaxb.gen.ClassRef value) {
        _ThisClass = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getSuperClass() {
        if (_SuperClass == null) {
            _SuperClass = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _SuperClass;
    }

    public java.util.List getSuperClass() {
        return _getSuperClass();
    }

    protected com.sun.xml.bind.util.ListImpl _getPrimary() {
        if (_Primary == null) {
            _Primary = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Primary;
    }

    public java.util.List getPrimary() {
        return _getPrimary();
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_SuperClass == null)? 0 :_SuperClass.size());
        int idx4 = 0;
        final int len4 = ((_Primary == null)? 0 :_Primary.size());
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "ThisClass");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ThisClass), "ThisClass");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ThisClass), "ThisClass");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ThisClass), "ThisClass");
        context.endElement();
        while (idx3 != len3) {
            context.startElement("http://czt.sourceforge.net/object-z", "SuperClass");
            int idx_2 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SuperClass.get(idx_2 ++)), "SuperClass");
            context.endNamespaceDecls();
            int idx_3 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SuperClass.get(idx_3 ++)), "SuperClass");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SuperClass.get(idx3 ++)), "SuperClass");
            context.endElement();
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endElement();
            }
        }
        while (idx4 != len4) {
            context.startElement("http://czt.sourceforge.net/object-z", "Primary");
            int idx_6 = idx4;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Primary.get(idx_6 ++)), "Primary");
            context.endNamespaceDecls();
            int idx_7 = idx4;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Primary.get(idx_7 ++)), "Primary");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Primary.get(idx4 ++)), "Primary");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_SuperClass == null)? 0 :_SuperClass.size());
        int idx4 = 0;
        final int len4 = ((_Primary == null)? 0 :_Primary.size());
        super.serializeAttributes(context);
        while (idx3 != len3) {
            idx3 += 1;
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            }
        }
        while (idx4 != len4) {
            idx4 += 1;
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx3 = 0;
        final int len3 = ((_SuperClass == null)? 0 :_SuperClass.size());
        int idx4 = 0;
        final int len4 = ((_Primary == null)? 0 :_Primary.size());
        super.serializeURIs(context);
        while (idx3 != len3) {
            idx3 += 1;
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            }
        }
        while (idx4 != len4) {
            idx4 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassRefType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001bsr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000,net.sourceforge.czt"
+".z.jaxb.gen.Term.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dum"
+"my-elementssq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataE"
+"xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006excep"
+"tq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com"
+".sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.da"
+"tatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datat"
+"ype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd."
+"XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000"
+"#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcess"
+"or;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloc"
+"alNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)h"
+"ttp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004Annst\u0000"
+"\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\np"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000/net.sourcef"
+"orge.czt.oz.jaxb.gen.ClassSigElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq"
+"\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""
+"t\u0000(net.sourceforge.czt.oz.jaxb.gen.ClassSigq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\bClassSigt\u0000#http://czt.source"
+"forge.net/object-zsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000(net.sourceforge.czt."
+"oz.jaxb.gen.ClassRefq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!"
+"sq\u0000~\u0000\"t\u0000\tThisClassq\u0000~\u0000Usq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!"
+"sq\u0000~\u0000\"q\u0000~\u0000]q\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\n"
+"SuperClassq\u0000~\u0000Uq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\nq\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\np"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourcef"
+"orge.czt.oz.jaxb.gen.VisibilityListElementq\u0000~\u0000&sq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq"
+"\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourceforge.czt.oz.jaxb.gen.VisibilityListq"
+"\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u000eVisibilityLi"
+"stq\u0000~\u0000Uq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\'ne"
+"t.sourceforge.czt.z.jaxb.gen.DeclNameq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0007Primaryq\u0000~\u0000Uq\u0000~\u0000!sr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL"
+"\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000)\u0001pq\u0000~\u0000\b"
+"q\u0000~\u0000\u0017q\u0000~\u0000Eq\u0000~\u0000Mq\u0000~\u0000Zq\u0000~\u0000hq\u0000~\u0000sq\u0000~\u0000{q\u0000~\u0000\u0089q\u0000~\u0000cq\u0000~\u0000\u0084q\u0000~\u0000\'q\u0000~\u0000Q"
+"q\u0000~\u0000^q\u0000~\u0000kq\u0000~\u0000\u007fq\u0000~\u0000\u008dq\u0000~\u0000oq\u0000~\u0000Bq\u0000~\u0000pq\u0000~\u0000\u0007q\u0000~\u0000bq\u0000~\u0000\u0083q\u0000~\u0000\u0012q\u0000~\u0000J"
+"q\u0000~\u0000Wq\u0000~\u0000eq\u0000~\u0000\u000bq\u0000~\u0000xq\u0000~\u0000\u0086q\u0000~\u0000\u0014q\u0000~\u0000Dq\u0000~\u0000Lq\u0000~\u0000Yq\u0000~\u0000gq\u0000~\u0000rq\u0000~\u0000z"
+"q\u0000~\u0000\u0088q\u0000~\u0000\tq\u0000~\u0000\u0006q\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("SuperClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  1 :
                        if (("ThisClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("SuperClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListElementImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  11 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPrimary().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getPrimary().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  10 :
                        if (("Primary" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerRefName" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ZRefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ClassSig" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ClassSig" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZRefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZRefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerRefName" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZRefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        if (("Primary" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 7;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  11 :
                        _getPrimary().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  6 :
                        if (("SuperClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  5 :
                        _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  12 :
                        if (("Primary" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  2 :
                        _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("ThisClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 7;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  11 :
                        _getPrimary().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  5 :
                        _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 7;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  11 :
                        _getPrimary().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  5 :
                        _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            state = 7;
                            continue outer;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  11 :
                            _getPrimary().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 12, value)));
                            return ;
                        case  10 :
                            state = 13;
                            continue outer;
                        case  5 :
                            _getSuperClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 6, value)));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.ClassTypeImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefTypeImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  8 :
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 9, value));
                            return ;
                        case  2 :
                            _ThisClass = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.ClassRefImpl.class), 3, value));
                            return ;
                        case  13 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
