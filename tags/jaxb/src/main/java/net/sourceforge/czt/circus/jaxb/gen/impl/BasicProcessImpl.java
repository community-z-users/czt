//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class BasicProcessImpl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl
    implements net.sourceforge.czt.circus.jaxb.gen.BasicProcess, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.ParaList _LocalPara;
    protected net.sourceforge.czt.z.jaxb.gen.ParaList _OnTheFlyPara;
    protected net.sourceforge.czt.circus.jaxb.gen.CircusAction _MainAction;
    protected net.sourceforge.czt.z.jaxb.gen.Para _StatePara;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.BasicProcess.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.ParaList getLocalPara() {
        return _LocalPara;
    }

    public void setLocalPara(net.sourceforge.czt.z.jaxb.gen.ParaList value) {
        _LocalPara = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.ParaList getOnTheFlyPara() {
        return _OnTheFlyPara;
    }

    public void setOnTheFlyPara(net.sourceforge.czt.z.jaxb.gen.ParaList value) {
        _OnTheFlyPara = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.CircusAction getMainAction() {
        return _MainAction;
    }

    public void setMainAction(net.sourceforge.czt.circus.jaxb.gen.CircusAction value) {
        _MainAction = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Para getStatePara() {
        return _StatePara;
    }

    public void setStatePara(net.sourceforge.czt.z.jaxb.gen.Para value) {
        _StatePara = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/circus", "StatePara");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _StatePara), "StatePara");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _StatePara), "StatePara");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _StatePara), "StatePara");
        context.endElement();
        context.startElement("http://czt.sourceforge.net/circus", "LocalPara");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalPara), "LocalPara");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalPara), "LocalPara");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalPara), "LocalPara");
        context.endElement();
        context.startElement("http://czt.sourceforge.net/circus", "OnTheFlyPara");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OnTheFlyPara), "OnTheFlyPara");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OnTheFlyPara), "OnTheFlyPara");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _OnTheFlyPara), "OnTheFlyPara");
        context.endElement();
        context.startElement("http://czt.sourceforge.net/circus", "MainAction");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _MainAction), "MainAction");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _MainAction), "MainAction");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _MainAction), "MainAction");
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.BasicProcess.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq"
+"\u0000~\u0000\tppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010ps"
+"r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\t"
+"nameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression"
+"$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.z.jaxb."
+"gen.Term.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-eleme"
+"ntssq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000"
+"\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv"
+".datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp://"
+"czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\t"
+"ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000#net.source"
+"forge.czt.z.jaxb.gen.Paraq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~\u0000;"
+"q\u0000~\u0000 sq\u0000~\u0000!t\u0000\tStateParat\u0000!http://czt.sourceforge.net/circuss"
+"q\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~"
+"\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.ParaList"
+"q\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\tLocalParaq\u0000"
+"~\u0000Msq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010"
+"pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000Uq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~"
+"\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\fOnTheFlyParaq\u0000~\u0000Msq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000s"
+"q\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00000net.s"
+"ourceforge.czt.circus.jaxb.gen.CircusActionq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\nMainActionq\u0000~\u0000Msr\u0000\"com.sun.m"
+"sv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/m"
+"sv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramm"
+"ar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVers"
+"ionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0019\u0001pq"
+"\u0000~\u0000\u0005q\u0000~\u0000\u0016q\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000^q\u0000~\u0000iq\u0000~\u0000\u0006q\u0000~\u0000&q\u0000~\u0000Iq\u0000~\u0000Vq\u0000~\u0000aq\u0000~\u0000mq"
+"\u0000~\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000Bq\u0000~\u0000Oq\u0000~\u0000[q\u0000~\u0000\nq\u0000~\u0000fq\u0000~\u0000\u0013q\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000]q\u0000~\u0000hq"
+"\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _MainAction = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _MainAction = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl.class), 12, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _StatePara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _StatePara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _OnTheFlyPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _OnTheFlyPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("StatePara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("LocalPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("MainAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl)net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl)net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        if (("OnTheFlyPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LocalPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        if (("MainAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  11 :
                        _MainAction = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _StatePara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        _OnTheFlyPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("StatePara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  13 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("OnTheFlyPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl)net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("LocalPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  5 :
                        _LocalPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        _MainAction = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _StatePara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        _OnTheFlyPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl)net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _LocalPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        _MainAction = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _StatePara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        _OnTheFlyPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl)net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _LocalPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  11 :
                            _MainAction = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.CircusActionImpl.class), 12, value));
                            return ;
                        case  2 :
                            _StatePara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 3, value));
                            return ;
                        case  8 :
                            _OnTheFlyPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 9, value));
                            return ;
                        case  13 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl)net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  5 :
                            _LocalPara = ((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParaListImpl.class), 6, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
