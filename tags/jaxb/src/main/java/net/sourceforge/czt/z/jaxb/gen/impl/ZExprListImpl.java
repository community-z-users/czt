//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class ZExprListImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl
    implements net.sourceforge.czt.z.jaxb.gen.ZExprList, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Expr;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.ZExprList.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getExpr() {
        if (_Expr == null) {
            _Expr = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Expr;
    }

    public java.util.List getExpr() {
        return _getExpr();
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Expr == null)? 0 :_Expr.size());
        super.serializeBody(context);
        while (idx1 != len1) {
            if (_Expr.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)), "Expr");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx_0 ++)), "Expr");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx_1 ++)), "Expr");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)), "Expr");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Expr == null)? 0 :_Expr.size());
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_Expr.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)), "Expr");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Expr == null)? 0 :_Expr.size());
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_Expr.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)), "Expr");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.ZExprList.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsr\u0000 com.sun.msv.gr"
+"ammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.A"
+"ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000"
+"\rpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001f"
+"xq\u0000~\u0000\u001at\u0000,net.sourceforge.czt.z.jaxb.gen.Term.AnnsTypet\u0000+http"
+"://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0014q\u0000~\u0000\rps"
+"r\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxn"
+"g/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/uti"
+"l/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fname"
+"spaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/da"
+"tatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/X"
+"MLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$"
+"NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.util"
+".StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fx"
+"pq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-"
+"instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006q\u0000~\u0000\rpsq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000"
+"~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge"
+".czt.z.jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\r"
+"psq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.j"
+"axb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014"
+"q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb.gen"
+".SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000"
+"\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.jaxb.gen.Tup"
+"leExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExp"
+"rq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprEl"
+"ementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.tcoz.jaxb.gen.Channel"
+"ExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.Hide"
+"ExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.oz.jaxb.gen.Pol"
+"yExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprEle"
+"mentq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExpr"
+"q\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.oz.jaxb.gen.PredExprElemen"
+"tq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.oz.jaxb.gen.ClassUnionExp"
+"rq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.z.jaxb.gen.RenameExprElem"
+"entq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElem"
+"entq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~"
+"\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000\"sq\u0000~\u0000"
+"\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000"
+"sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net."
+"sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006pp"
+"sq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourcefo"
+"rge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000"
+"\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.c"
+"zt.tcoz.jaxb.gen.SensorExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006pp"
+"sq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourcefo"
+"rge.czt.z.jaxb.gen.PreExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt."
+"z.jaxb.gen.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000"
+"~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.z.jaxb."
+"gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005net.sourceforge.czt.tcoz.j"
+"axb.gen.ActuatorExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt"
+".circus.jaxb.gen.SigmaExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006pps"
+"q\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourcefor"
+"ge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000"
+"\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.c"
+"zt.z.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z."
+"jaxb.gen.CompExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00007net.sourceforge.czt.circus.ja"
+"xb.gen.BasicChannelSetExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt."
+"z.jaxb.gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000"
+"~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.oz.jaxb"
+".gen.ContainmentExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.z.jaxb"
+".gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jax"
+"b.gen.LetExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~"
+"\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.An"
+"dExprq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerE"
+"xprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.ApplE"
+"xprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.CondE"
+"xprElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.RefEx"
+"prElementq\u0000~\u0000\"sq\u0000~\u0000\bq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.gen.MuExpr"
+"q\u0000~\u0000\"q\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
+"\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
+"xpressionPool;xp\u0000\u0000\u0000\u0085\u0001pq\u0000~\u0000Eq\u0000~\u0000Mq\u0000~\u0000^q\u0000~\u0000Kq\u0000~\u0000\u0005q\u0000~\u0000Fq\u0000~\u0000_q\u0000~"
+"\u0001Bq\u0000~\u0001<q\u0000~\u0000Yq\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0000Vq\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~"
+"\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0000\u00faq\u0000~\u0000\u00f4q\u0000~\u0000Hq\u0000~\u0000\u00eeq\u0000~\u0000\u00e8q\u0000~\u0000\u00e2q\u0000~\u0000\u00dcq\u0000~\u0000\u00d6q\u0000~\u0000\u0010q\u0000~\u0000jq\u0000~"
+"\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000\u00b2q\u0000~"
+"\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u00c4q\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0001Hq\u0000~\u0001Nq\u0000~\u0001Tq\u0000~\u0001Zq\u0000~\u0001`q\u0000~\u0000Xq\u0000~\u0000>q\u0000~"
+"\u0000\u000eq\u0000~\u0000Qq\u0000~\u0000\\q\u0000~\u0000hq\u0000~\u0000@q\u0000~\u0000Iq\u0000~\u0000aq\u0000~\u0000bq\u0000~\u0000Sq\u0000~\u0000Tq\u0000~\u0000Cq\u0000~\u0000Jq\u0000~"
+"\u0000Zq\u0000~\u0000Wq\u0000~\u0000Lq\u0000~\u0000cq\u0000~\u0000?q\u0000~\u0000Uq\u0000~\u0000Gq\u0000~\u0000Bq\u0000~\u0000Oq\u0000~\u0000`q\u0000~\u0000Dq\u0000~\u0000fq\u0000~"
+"\u0000#q\u0000~\u0000[q\u0000~\u0000eq\u0000~\u0000Aq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0000Nq\u0000~"
+"\u0001\u0019q\u0000~\u0000\u0007q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00f5q\u0000~\u0000\u00efq\u0000~\u0000\u00e9q\u0000~\u0000\u00e3q\u0000~\u0000\u00ddq\u0000~"
+"\u0000\u00d7q\u0000~\u0000\u0013q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~"
+"\u0000dq\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000\u00d1q\u0000~\u0001Iq\u0000~\u0001Oq\u0000~\u0001Uq\u0000~"
+"\u0001[q\u0000~\u0001aq\u0000~\u0000Pq\u0000~\u0000Rq\u0000~\u0000]q\u0000~\u0000gx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SensorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActuatorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SigmaExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.circus.jaxb.gen.impl.SigmaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SigmaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BasicChannelSetExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.circus.jaxb.gen.impl.BasicChannelSetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.BasicChannelSetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  2 :
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SensorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActuatorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SigmaExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.circus.jaxb.gen.impl.SigmaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SigmaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BasicChannelSetExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.circus.jaxb.gen.impl.BasicChannelSetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.BasicChannelSetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        state = 2;
                        continue outer;
                    case  3 :
                        _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        state = 2;
                        continue outer;
                    case  3 :
                        _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        state = 2;
                        continue outer;
                    case  3 :
                        _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 2;
                            continue outer;
                        case  3 :
                            _getExpr().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, value)));
                            return ;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZExprListImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
