<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE unicode SYSTEM "unicode.dtd">
<Spec xmlns="http://czt.sourceforge.net/zml" xmlns:gnast="http://czt.sourceforge.net/gnast" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://czt.sourceforge.net/zml
D:\Academic\typechecker\zml\Z.xsd">
	<ZSect>
		<Name>set_toolkit</Name>
		<Parent>
			<Word>prelude</Word>
		</Parent>
		<!-- generic relation -->
		<OptempPara Cat="Relation" Prec="5" Assoc="Right">
			<Operand/>
			<Operator>
				<Word>&rel;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- horizontal defn: generic relation -->
		<AxPara Box="OmitBox">
			<Anns>
				<TypeAnn>
					<SchemaType>
						<Signature>
							<NameTypePair>
								<Name>
									<Word>&rel;</Word>
								</Name>
								<PowerType>
									<PowerType>
										<ProdType>
											<PowerType>
												<GenType>
													<Name>
														<Word>X</Word>
													</Name>
												</GenType>
											</PowerType>
											<PowerType>
												<GenType>
													<Name>
														<Word>Y</Word>
													</Name>
												</GenType>
											</PowerType>
										</ProdType>
									</PowerType>
								</PowerType>
							</NameTypePair>
						</Signature>
					</SchemaType>
				</TypeAnn>
			</Anns>
			<DeclName>
				<Anns>
					<TypeAnn>
						<PowerType>
							<GenType>
								<Name>
									<Word>X</Word>
								</Name>
							</GenType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<Word>X</Word>
			</DeclName>
			<DeclName>
				<Anns>
					<TypeAnn>
						<PowerType>
							<GenType>
								<Name>
									<Word>Y</Word>
								</Name>
							</GenType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<Word>Y</Word>
			</DeclName>
			<SchText>
				<Anns>
					<TypeAnn>
						<PowerType>
							<SchemaType>
								<Signature>
									<NameTypePair>
										<Name>
											<Word> _ &rel; _ </Word>
										</Name>
										<PowerType>
											<PowerType>
												<ProdType>
													<PowerType>
														<GenType>
															<Name>
																<Word>X</Word>
															</Name>
														</GenType>
													</PowerType>
													<PowerType>
														<GenType>
															<Name>
																<Word>Y</Word>
															</Name>
														</GenType>
													</PowerType>
												</ProdType>
											</PowerType>
										</PowerType>
									</NameTypePair>
								</Signature>
							</SchemaType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<ConstDecl>
					<DeclName>
						<Word> _ &rel; _ </Word>
					</DeclName>
					<PowerExpr>
						<Anns>
							<TypeAnn>
								<PowerType>
									<PowerType>
										<ProdType>
											<PowerType>
												<GenType>
													<Name>
														<Word>X</Word>
													</Name>
												</GenType>
											</PowerType>
											<PowerType>
												<GenType>
													<Name>
														<Word>Y</Word>
													</Name>
												</GenType>
											</PowerType>
										</ProdType>
									</PowerType>
								</PowerType>
							</TypeAnn>
						</Anns>
						<ProdExpr>
							<Anns>
								<TypeAnn>
									<PowerType>
										<ProdType>
											<PowerType>
												<GenType>
													<Name>
														<Word>X</Word>
													</Name>
												</GenType>
											</PowerType>
											<PowerType>
												<GenType>
													<Name>
														<Word>Y</Word>
													</Name>
												</GenType>
											</PowerType>
										</ProdType>
									</PowerType>
								</TypeAnn>
							</Anns>
							<RefExpr>
								<Anns>
									<TypeAnn>
										<PowerType>
											<GenType>
												<Name>
													<Word>X</Word>
												</Name>
											</GenType>
										</PowerType>
									</TypeAnn>
								</Anns>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<Anns>
									<TypeAnn>
										<PowerType>
											<GenType>
												<Name>
													<Word>Y</Word>
												</Name>
											</GenType>
										</PowerType>
									</TypeAnn>
								</Anns>
								<RefName>
									<Word>Y</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- generic total function -->
		<OptempPara Cat="Generic" Prec="5" Assoc="Right">
			<Operand/>
			<Operator>
				<Word>&tfun;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- horizontal defn: total function -->
		<AxPara>
			<DeclName>
				<Anns>
					<TypeAnn>
						<PowerType>
							<GenType>
								<Name>
									<Word>X</Word>
								</Name>
							</GenType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<Word>X</Word>
			</DeclName>
			<DeclName>
				<Anns>
					<TypeAnn>
						<PowerType>
							<GenType>
								<Name>
									<Word>Y</Word>
								</Name>
							</GenType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<Word>Y</Word>
			</DeclName>
			<SchText>
				<Anns>
					<TypeAnn>
						<PowerType>
							<SchemaType>
								<Signature>
									<NameTypePair>
										<Name>
											<Word> _ &tfun; _ </Word>
										</Name>
										<PowerType>
											<PowerType>
												<SchemaType>
													<Signature>
														<NameTypePair>
															<Name>
																<Word>f</Word>
															</Name>
															<PowerType>
																<ProdType>
																	<PowerType>
																		<GenType>
																			<Name>
																				<Word>X</Word>
																			</Name>
																		</GenType>
																	</PowerType>
																	<PowerType>
																		<GenType>
																			<Name>
																				<Word>Y</Word>
																			</Name>
																		</GenType>
																	</PowerType>
																</ProdType>
															</PowerType>
														</NameTypePair>
													</Signature>
												</SchemaType>
											</PowerType>
										</PowerType>
									</NameTypePair>
								</Signature>
							</SchemaType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<ConstDecl>
					<DeclName>
						<Word> _ &tfun; _ </Word>
					</DeclName>
					<SetCompExpr>
						<Anns>
							<TypeAnn>
								<PowerType>
									<PowerType>
										<SchemaType>
											<Signature>
												<NameTypePair>
													<Name>
														<Word>f</Word>
													</Name>
													<PowerType>
														<ProdType>
															<PowerType>
																<GenType>
																	<Name>
																		<Word>X</Word>
																	</Name>
																</GenType>
															</PowerType>
															<PowerType>
																<GenType>
																	<Name>
																		<Word>Y</Word>
																	</Name>
																</GenType>
															</PowerType>
														</ProdType>
													</PowerType>
												</NameTypePair>
											</Signature>
										</SchemaType>
									</PowerType>
								</PowerType>
							</TypeAnn>
						</Anns>
						<SchText>
							<Anns>
								<TypeAnn>
									<PowerType>
										<SchemaType>
											<Signature>
												<NameTypePair>
													<Name>
														<Word>f</Word>
													</Name>
													<PowerType>
														<ProdType>
															<PowerType>
																<GenType>
																	<Name>
																		<Word>X</Word>
																	</Name>
																</GenType>
															</PowerType>
															<PowerType>
																<GenType>
																	<Name>
																		<Word>Y</Word>
																	</Name>
																</GenType>
															</PowerType>
														</ProdType>
													</PowerType>
												</NameTypePair>
											</Signature>
										</SchemaType>
									</PowerType>
								</TypeAnn>
							</Anns>
							<VarDecl>
								<DeclName>
									<Word>f</Word>
								</DeclName>
								<RefExpr Mixfix="true">
									<Anns>
										<TypeAnn>
											<PowerType>
												<PowerType>
													<ProdType>
														<PowerType>
															<GenType>
																<Name>
																	<Word>X</Word>
																</Name>
															</GenType>
														</PowerType>
														<PowerType>
															<GenType>
																<Name>
																	<Word>Y</Word>
																</Name>
															</GenType>
														</PowerType>
													</ProdType>
												</PowerType>
											</PowerType>
										</TypeAnn>
									</Anns>
									<RefName>
										<Word> _ &tfun; _ </Word>
									</RefName>
									<RefExpr>
										<Anns>
											<TypeAnn>
												<PowerType>
													<GenType>
														<Name>
															<Word>X</Word>
														</Name>
													</GenType>
												</PowerType>
											</TypeAnn>
										</Anns>
										<RefName>
											<Word>X</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<Anns>
											<TypeAnn>
												<PowerType>
													<GenType>
														<Name>
															<Word>Y</Word>
														</Name>
													</GenType>
												</PowerType>
											</TypeAnn>
										</Anns>
										<RefName>
											<Word>Y</Word>
										</RefName>
									</RefExpr>
								</RefExpr>
							</VarDecl>
							<ForallPred>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
								</SchText>
								<Exists1Pred>
									<SchText>
										<VarDecl>
											<DeclName>
												<Word>y</Word>
											</DeclName>
											<RefExpr>
												<RefName>
													<Word>Y</Word>
												</RefName>
											</RefExpr>
										</VarDecl>
									</SchText>
									<MemPred>
										<TupleExpr>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>y</Word>
												</RefName>
											</RefExpr>
										</TupleExpr>
										<RefExpr>
											<RefName>
												<Word> _ &tfun; _ </Word>
											</RefName>
										</RefExpr>
									</MemPred>
								</Exists1Pred>
							</ForallPred>
						</SchText>
					</SetCompExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- gen axiomatic defn: inequality -->
		<AxPara>
			<Anns>
				<TypeAnn>
					<SchemaType>
						<Signature>
							<NameTypePair>
								<Name>
									<Word> _ &neq; _ </Word>
								</Name>
								<PowerType>
									<ProdType>
										<PowerType>
											<GenType>
												<Name>
													<Word>X</Word>
												</Name>
											</GenType>
										</PowerType>
										<PowerType>
											<GenType>
												<Name>
													<Word>Y</Word>
												</Name>
											</GenType>
										</PowerType>
									</ProdType>
								</PowerType>
							</NameTypePair>
						</Signature>
					</SchemaType>
				</TypeAnn>
			</Anns>
			<DeclName>
				<Anns>
					<TypeAnn>
						<PowerType>
							<GenType>
								<Name>
									<Word>X</Word>
								</Name>
							</GenType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<Anns>
					<TypeAnn>
						<PowerType>
							<SchemaType>
								<Signature>
									<NameTypePair>
										<Name>
											<Word> _ &neq; _ </Word>
										</Name>
										<PowerType>
											<ProdType>
												<PowerType>
													<GenType>
														<Name>
															<Word>X</Word>
														</Name>
													</GenType>
												</PowerType>
												<PowerType>
													<GenType>
														<Name>
															<Word>Y</Word>
														</Name>
													</GenType>
												</PowerType>
											</ProdType>
										</PowerType>
									</NameTypePair>
								</Signature>
							</SchemaType>
						</PowerType>
					</TypeAnn>
				</Anns>
				<VarDecl>
					<DeclName>
						<Word> _ &neq; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<Anns>
							<TypeAnn>
								<PowerType>
									<PowerType>
										<ProdType>
											<PowerType>
												<GenType>
													<Name>
														<Word>X</Word>
													</Name>
												</GenType>
											</PowerType>
											<PowerType>
												<GenType>
													<Name>
														<Word>Y</Word>
													</Name>
												</GenType>
											</PowerType>
										</ProdType>
									</PowerType>
								</PowerType>
							</TypeAnn>
						</Anns>
						<RefName>
							<Word>&rel;</Word>
						</RefName>
						<RefExpr>
							<Anns>
								<TypeAnn>
									<PowerType>
										<GenType>
											<Name>
												<Word>X</Word>
											</Name>
										</GenType>
									</PowerType>
								</TypeAnn>
							</Anns>
							<RefName>
								<Word>X</Word>
							</RefName>
						</RefExpr>
						<RefExpr>
							<Anns>
								<TypeAnn>
									<PowerType>
										<GenType>
											<Name>
												<Word>X</Word>
											</Name>
										</GenType>
									</PowerType>
								</TypeAnn>
							</Anns>
							<RefName>
								<Word>X</Word>
							</RefName>
						</RefExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>x</Word>
							</DeclName>
							<DeclName>
								<Word>y</Word>
							</DeclName>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<MemPred>
							<TupleExpr>
								<RefExpr>
									<RefName>
										<Word>x</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>y</Word>
									</RefName>
								</RefExpr>
							</TupleExpr>
							<RefExpr>
								<RefName>
									<Word> _ &neq; _ </Word>
								</RefName>
							</RefExpr>
						</MemPred>
						<NegPred>
							<MemPred>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>x</Word>
										</RefName>
										<RefExpr>
											<RefName>
												<Word>y</Word>
											</RefName>
										</RefExpr>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word>=</Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</NegPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- generic axiomatic defn: non-member -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &nem; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word>&rel;</Word>
						</RefName>
						<RefExpr>
							<RefName>
								<Word>X</Word>
							</RefName>
						</RefExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>x</Word>
							</DeclName>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</VarDecl>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<MemPred>
							<TupleExpr>
								<RefExpr>
									<RefName>
										<Word>x</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>a</Word>
									</RefName>
								</RefExpr>
							</TupleExpr>
							<RefExpr>
								<RefName>
									<Word> _ &nem; _ </Word>
								</RefName>
							</RefExpr>
						</MemPred>
						<NegPred>
							<MemPred>
								<RefExpr>
									<RefName>
										<Word>x</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>a</Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</NegPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- generic horizontal defn: empty set -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<ConstDecl>
					<DeclName>
						<Word>&emptyset;</Word>
					</DeclName>
					<SetCompExpr>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
							<FalsePred/>
						</SchText>
					</SetCompExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- generic axiomatic defn: subset -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>&subseteq;</Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word>&rel;</Word>
						</RefName>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<DeclName>
								<Word>b</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<MemPred>
							<TupleExpr>
								<RefExpr>
									<RefName>
										<Word>a</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>b</Word>
									</RefName>
								</RefExpr>
							</TupleExpr>
							<RefExpr>
								<RefName>
									<Word> _ &subseteq; _ </Word>
								</RefName>
							</RefExpr>
						</MemPred>
						<ForallPred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>x</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<MemPred>
								<RefExpr>
									<RefName>
										<Word>x</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>b</Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</ForallPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- generic axiomatic defn: proper subset -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>&subset;</Word>
					</DeclName>
					<RefExpr>
						<RefName>
							<Word>&rel;</Word>
						</RefName>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<DeclName>
								<Word>b</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<MemPred>
							<TupleExpr>
								<RefExpr>
									<RefName>
										<Word>a</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>b</Word>
									</RefName>
								</RefExpr>
							</TupleExpr>
							<RefExpr>
								<RefName>
									<Word> _ &subset; _ </Word>
								</RefName>
							</RefExpr>
						</MemPred>
						<AndPred Op="And">
							<MemPred>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>b</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word> _ &subseteq; _ </Word>
									</RefName>
								</RefExpr>
							</MemPred>
							<NegPred>
								<MemPred>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>a</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>b</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word> _ &neq; _ </Word>
										</RefName>
									</RefExpr>
								</MemPred>
							</NegPred>
						</AndPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- ???: non-empty subsets -->
		<AxPara Box="OmitBox">
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<ConstDecl>
					<DeclName>
						<Word>&psetone;</Word>
					</DeclName>
					<SetCompExpr>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>a</Word>
								</DeclName>
								<PowerExpr>
									<RefExpr>
										<RefName>
											<Word>X</Word>
										</RefName>
									</RefExpr>
								</PowerExpr>
							</VarDecl>
							<MemPred>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>&emptyset;</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word> _ &neq; _ </Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</SchText>
					</SetCompExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- operator temp: set union -->
		<OptempPara Cat="Function" Prec="30" Assoc="Left">
			<Operand/>
			<Operator>
				<Word>&uni;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- generic axiomatic defn: set union -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &uni; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word> _ &tfun; _ </Word>
						</RefName>
						<ProdExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</ProdExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<DeclName>
								<Word>b</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<MemPred>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word> _ &uni; _ </Word>
									</RefName>
								</RefExpr>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>b</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
							</ApplExpr>
							<SetCompExpr>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
									<OrPred>
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>a</Word>
												</RefName>
											</RefExpr>
										</MemPred>
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>b</Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</OrPred>
								</SchText>
							</SetCompExpr>
						</TupleExpr>
						<RefExpr>
							<RefName>
								<Word>=</Word>
							</RefName>
						</RefExpr>
					</MemPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- operator temp: set intersection -->
		<OptempPara Cat="Function" Prec="40" Assoc="Left">
			<Operand/>
			<Operator>
				<Word>&int;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- generic axiomatic defn: set intersection -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &int; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word> _ &tfun; _ </Word>
						</RefName>
						<ProdExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</ProdExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<DeclName>
								<Word>b</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<MemPred>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word> _ &int; _ </Word>
									</RefName>
								</RefExpr>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>b</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
							</ApplExpr>
							<SetCompExpr>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
									<AndPred Op="And">
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>a</Word>
												</RefName>
											</RefExpr>
										</MemPred>
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>b</Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</AndPred>
								</SchText>
							</SetCompExpr>
						</TupleExpr>
						<RefExpr>
							<RefName>
								<Word>=</Word>
							</RefName>
						</RefExpr>
					</MemPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- operator temp: set difference -->
		<OptempPara Cat="Function" Prec="30" Assoc="Left">
			<Operand/>
				<Operator>
				<Word>&setdiff;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- generic axiomatic defn: set difference -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &setdiff; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word> _ &tfun; _ </Word>
						</RefName>
						<ProdExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</ProdExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<DeclName>
								<Word>b</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<MemPred>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word> _ &setdiff; _ </Word>
									</RefName>
								</RefExpr>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>b</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
							</ApplExpr>
							<SetCompExpr>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
									<AndPred>
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>a</Word>
												</RefName>
											</RefExpr>
										</MemPred>
										<MemPred>
											<TupleExpr>
												<RefExpr>
													<RefName>
														<Word>x</Word>
													</RefName>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>b</Word>
													</RefName>
												</RefExpr>
											</TupleExpr>
											<RefExpr>
												<RefName>
													<Word> _ &nem; _ </Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</AndPred>
								</SchText>
							</SetCompExpr>
						</TupleExpr>
						<RefExpr>
							<RefName>
								<Word>=</Word>
							</RefName>
						</RefExpr>
					</MemPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- operator temp: set symmetric difference -->
		<OptempPara Cat="Function" Prec="25" Assoc="Left">
			<Operand/>
			<Operator>
				<Word>&symsetdiff;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- generic axiomatic defn: set symmetric difference -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &symsetdiff; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word> _ &tfun; _ </Word>
						</RefName>
						<ProdExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</ProdExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>a</Word>
							</DeclName>
							<DeclName>
								<Word>b</Word>
							</DeclName>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<MemPred>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word> _ &symsetdiff; _ </Word>
									</RefName>
								</RefExpr>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>a</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>b</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
							</ApplExpr>
							<SetCompExpr>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
									<NegPred>
										<IffPred>
											<MemPred>
												<RefExpr>
													<RefName>
														<Word>x</Word>
													</RefName>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>a</Word>
													</RefName>
												</RefExpr>
											</MemPred>
											<MemPred>
												<RefExpr>
													<RefName>
														<Word>x</Word>
													</RefName>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>b</Word>
													</RefName>
												</RefExpr>
											</MemPred>
										</IffPred>
									</NegPred>
								</SchText>
							</SetCompExpr>
						</TupleExpr>
						<RefExpr>
							<RefName>
								<Word>=</Word>
							</RefName>
						</RefExpr>
					</MemPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- generic axiomatic defn: generalized union -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>&guni; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word> _ &tfun; _ </Word>
						</RefName>
						<PowerExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</PowerExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>A</Word>
							</DeclName>
							<PowerExpr>
								<PowerExpr>
									<RefExpr>
										<RefName>
											<Word>X</Word>
										</RefName>
									</RefExpr>
								</PowerExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<MemPred>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word>&guni; _ </Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>A</Word>
									</RefName>
								</RefExpr>
							</ApplExpr>
							<SetCompExpr>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
									<ExistsPred>
										<SchText>
											<VarDecl>
												<DeclName>
													<Word>a</Word>
												</DeclName>
												<RefExpr>
													<RefName>
														<Word>A</Word>
													</RefName>
												</RefExpr>
											</VarDecl>
										</SchText>
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>a</Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</ExistsPred>
								</SchText>
							</SetCompExpr>
						</TupleExpr>
						<RefExpr>
							<RefName>
								<Word>=</Word>
							</RefName>
						</RefExpr>
					</MemPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- generic axiomatic defn: generalized intersection -->
		<AxPara>
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>&gint; _ </Word>
					</DeclName>
					<RefExpr Mixfix="true">
						<RefName>
							<Word> _ &tfun; _ </Word>
						</RefName>
						<PowerExpr>
							<PowerExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</PowerExpr>
						</PowerExpr>
						<PowerExpr>
							<RefExpr>
								<RefName>
									<Word>X</Word>
								</RefName>
							</RefExpr>
						</PowerExpr>
					</RefExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>A</Word>
							</DeclName>
							<PowerExpr>
								<PowerExpr>
									<RefExpr>
										<RefName>
											<Word>X</Word>
										</RefName>
									</RefExpr>
								</PowerExpr>
							</PowerExpr>
						</VarDecl>
					</SchText>
					<MemPred>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word>&gint; _ </Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>A</Word>
									</RefName>
								</RefExpr>
							</ApplExpr>
							<SetCompExpr>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>x</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>X</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
									<ForallPred>
										<SchText>
											<VarDecl>
												<DeclName>
													<Word>a</Word>
												</DeclName>
												<RefExpr>
													<RefName>
														<Word>A</Word>
													</RefName>
												</RefExpr>
											</VarDecl>
										</SchText>
										<MemPred>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>a</Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</ForallPred>
								</SchText>
							</SetCompExpr>
						</TupleExpr>
						<RefExpr>
							<RefName>
								<Word>=</Word>
							</RefName>
						</RefExpr>
					</MemPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- generic prefix operator: finite set -->
		<OptempPara Cat="Generic" Prec="80">
			<Operator>
				<Word>&fset;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<AxPara Box="OmitBox">
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<ConstDecl>
					<DeclName>
						<Word>&fset; _ </Word>
					</DeclName>
					<ApplExpr>
						<RefExpr>
							<RefName>
								<Word>&gint; _ </Word>
							</RefName>
						</RefExpr>
						<SetCompExpr>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>A</Word>
									</DeclName>
									<PowerExpr>
										<PowerExpr>
											<RefExpr>
												<RefName>
													<Word>X</Word>
												</RefName>
											</RefExpr>
										</PowerExpr>
									</PowerExpr>
								</VarDecl>
								<AndPred Op="And">
									<MemPred>
										<RefExpr>
											<RefName>
												<Word>&emptyset;</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>A</Word>
											</RefName>
										</RefExpr>
									</MemPred>
									<ForallPred>
										<SchText>
											<VarDecl>
												<DeclName>
													<Word>a</Word>
												</DeclName>
												<RefExpr>
													<RefName>
														<Word>A</Word>
													</RefName>
												</RefExpr>
											</VarDecl>
											<VarDecl>
												<DeclName>
													<Word>x</Word>
												</DeclName>
												<RefExpr>
													<RefName>
														<Word>X</Word>
													</RefName>
												</RefExpr>
											</VarDecl>
										</SchText>
										<MemPred>
											<ApplExpr>
												<RefExpr>
													<RefName>
														<Word> _ &uni; _ </Word>
													</RefName>
												</RefExpr>
												<TupleExpr>
													<RefExpr>
														<RefName>
															<Word>a</Word>
														</RefName>
													</RefExpr>
													<SetExpr>
														<RefExpr>
															<RefName>
																<Word>x</Word>
															</RefName>
														</RefExpr>
													</SetExpr>
												</TupleExpr>
											</ApplExpr>
											<RefExpr>
												<RefName>
													<Word>A</Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</ForallPred>
								</AndPred>
							</SchText>
						</SetCompExpr>
					</ApplExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- horizontal defn: non-empty finite set -->
		<AxPara Box="OmitBox">
			<DeclName>
				<Word>X</Word>
			</DeclName>
			<SchText>
				<ConstDecl>
					<DeclName>
						<Word>&fsetone;</Word>
					</DeclName>
					<ApplExpr>
						<RefExpr>
							<RefName>
								<Word> _ &setdiff; _ </Word>
							</RefName>
						</RefExpr>
						<TupleExpr>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word>&fset; _ </Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>X</Word>
									</RefName>
								</RefExpr>
							</ApplExpr>
							<SetExpr>
								<RefExpr>
									<RefName>
										<Word>&emptyset;</Word>
									</RefName>
								</RefExpr>
							</SetExpr>
						</TupleExpr>
					</ApplExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
	</ZSect>
</Spec>
