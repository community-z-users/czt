<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE unicode SYSTEM "unicode.dtd">
<Spec xmlns="http://czt.sourceforge.net/zml" xmlns:gnast="http://czt.sourceforge.net/gnast" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://czt.sourceforge.net/zml
D:\Academic\typechecker\zml\Z.xsd">
	<ZSect>
		<Name>number_toolkit</Name>
		<!-- function operator temp: successor -->
		<OptempPara Cat="Function" Prec="80">
			<Operator>
				<Word>succ</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- axiomatic defn: successor -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>succ _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&nat;</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<RefName>
									<Word>&nat;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<MemPred>
					<TupleExpr>
						<RefExpr>
							<RefName>
								<Word>succ _ </Word>
							</RefName>
						</RefExpr>
						<LambdaExpr>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>n</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&nat;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word> _ + _ </Word>
									</RefName>
								</RefExpr>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>n</Word>
										</RefName>
									</RefExpr>
									<NumExpr Value="1"/>
								</TupleExpr>
							</ApplExpr>
						</LambdaExpr>
					</TupleExpr>
					<RefExpr>
						<RefName>
							<Word>=</Word>
						</RefName>
					</RefExpr>
				</MemPred>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: integers -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>&integer;</Word>
					</DeclName>
					<PowerExpr>
						<RefExpr>
							<RefName>
								<Word>&arithmos;</Word>
							</RefName>
						</RefExpr>
					</PowerExpr>
				</VarDecl>
			</SchText>
		</AxPara>
		<!-- function operator temp: arithmetic negation -->
		<OptempPara Cat="Function" Prec="80">
			<Operator>
				<Word>-</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- axiomatic defn: arithmetic negation -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>- _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<AndPred Op="NL">
					<ForallPred>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<DeclName>
									<Word>y</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
						</SchText>
						<Exists1Pred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>z</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<MemPred>
								<TupleExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>y</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>z</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word> _ + _ </Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</Exists1Pred>
					</ForallPred>
					<AndPred Op="NL">
						<ForallPred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>x</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<Exists1Pred>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>y</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>&integer;</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
								</SchText>
								<MemPred>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>y</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>- _ </Word>
										</RefName>
									</RefExpr>
								</MemPred>
							</Exists1Pred>
						</ForallPred>
						<AndPred Op="NL">
							<ForallPred>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>i</Word>
										</DeclName>
										<DeclName>
											<Word>j</Word>
										</DeclName>
										<DeclName>
											<Word>k</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>&integer;</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
								</SchText>
								<AndPred Op="And">
									<MemPred>
										<TupleExpr>
											<ApplExpr>
												<RefExpr>
													<RefName>
														<Word> _ + _ </Word>
													</RefName>
												</RefExpr>
												<TupleExpr>
													<ApplExpr>
														<RefExpr>
															<RefName>
																<Word> _ + _ </Word>
															</RefName>
														</RefExpr>
														<TupleExpr>
															<RefExpr>
																<RefName>
																	<Word>i</Word>
																</RefName>
															</RefExpr>
															<RefExpr>
																<RefName>
																	<Word>j</Word>
																</RefName>
															</RefExpr>
														</TupleExpr>
													</ApplExpr>
													<RefExpr>
														<RefName>
															<Word>k</Word>
														</RefName>
													</RefExpr>
												</TupleExpr>
											</ApplExpr>
											<ApplExpr>
												<RefExpr>
													<RefName>
														<Word> _ + _ </Word>
													</RefName>
												</RefExpr>
												<TupleExpr>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<ApplExpr>
														<RefExpr>
															<RefName>
																<Word> _ + _ </Word>
															</RefName>
														</RefExpr>
														<TupleExpr>
															<RefExpr>
																<RefName>
																	<Word>j</Word>
																</RefName>
															</RefExpr>
															<RefExpr>
																<RefName>
																	<Word>k</Word>
																</RefName>
															</RefExpr>
														</TupleExpr>
													</ApplExpr>
												</TupleExpr>
											</ApplExpr>
										</TupleExpr>
										<RefExpr>
											<RefName>
												<Word>=</Word>
											</RefName>
										</RefExpr>
									</MemPred>
									<AndPred Op="And">
										<MemPred>
											<TupleExpr>
												<ApplExpr>
													<RefExpr>
														<RefName>
															<Word> _ + _ </Word>
														</RefName>
													</RefExpr>
													<TupleExpr>
														<RefExpr>
															<RefName>
																<Word>i</Word>
															</RefName>
														</RefExpr>
														<RefExpr>
															<RefName>
																<Word>j</Word>
															</RefName>
														</RefExpr>
													</TupleExpr>
												</ApplExpr>
												<ApplExpr>
													<RefExpr>
														<RefName>
															<Word> _ + _ </Word>
														</RefName>
													</RefExpr>
													<TupleExpr>
														<RefExpr>
															<RefName>
																<Word>j</Word>
															</RefName>
														</RefExpr>
														<RefExpr>
															<RefName>
																<Word>i</Word>
															</RefName>
														</RefExpr>
													</TupleExpr>
												</ApplExpr>
											</TupleExpr>
											<RefExpr>
												<RefName>
													<Word>=</Word>
												</RefName>
											</RefExpr>
										</MemPred>
										<AndPred Op="And">
											<MemPred>
												<TupleExpr>
													<ApplExpr>
														<RefExpr>
															<RefName>
																<Word> _ + _ </Word>
															</RefName>
														</RefExpr>
														<TupleExpr>
															<RefExpr>
																<RefName>
																	<Word>i</Word>
																</RefName>
															</RefExpr>
															<RefExpr Mixfix="true">
																<RefName>
																	<Word>- _ </Word>
																</RefName>
																<RefExpr>
																	<RefName>
																		<Word>i</Word>
																	</RefName>
																</RefExpr>
															</RefExpr>
														</TupleExpr>
													</ApplExpr>
													<NumExpr Value="0"/>
												</TupleExpr>
												<RefExpr>
													<RefName>
														<Word>=</Word>
													</RefName>
												</RefExpr>
											</MemPred>
											<MemPred>
												<TupleExpr>
													<ApplExpr>
														<RefExpr>
															<RefName>
																<Word> _ + _ </Word>
															</RefName>
														</RefExpr>
														<TupleExpr>
															<RefExpr>
																<RefName>
																	<Word>i</Word>
																</RefName>
															</RefExpr>
															<NumExpr Value="0"/>
														</TupleExpr>
													</ApplExpr>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
												</TupleExpr>
												<RefExpr>
													<RefName>
														<Word>=</Word>
													</RefName>
												</RefExpr>
											</MemPred>
										</AndPred>
									</AndPred>
								</AndPred>
							</ForallPred>
							<MemPred>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
									<SetCompExpr>
										<SchText>
											<VarDecl>
												<DeclName>
													<Word>z</Word>
												</DeclName>
												<RefExpr>
													<RefName>
														<Word>&arithmos;</Word>
													</RefName>
												</RefExpr>
											</VarDecl>
											<ExistsPred>
												<SchText>
													<VarDecl>
														<DeclName>
															<Word>x</Word>
														</DeclName>
														<RefExpr>
															<RefName>
																<Word>&nat;</Word>
															</RefName>
														</RefExpr>
													</VarDecl>
												</SchText>
												<OrPred>
													<MemPred>
														<TupleExpr>
															<RefExpr>
																<RefName>
																	<Word>z</Word>
																</RefName>
															</RefExpr>
															<RefExpr>
																<RefName>
																	<Word>x</Word>
																</RefName>
															</RefExpr>
														</TupleExpr>
														<RefExpr>
															<RefName>
																<Word>=</Word>
															</RefName>
														</RefExpr>
													</MemPred>
													<MemPred>
														<TupleExpr>
															<RefExpr>
																<RefName>
																	<Word>z</Word>
																</RefName>
															</RefExpr>
															<RefExpr Mixfix="true">
																<RefName>
																	<Word>- _ </Word>
																</RefName>
																<RefExpr>
																	<RefName>
																		<Word>x</Word>
																	</RefName>
																</RefExpr>
															</RefExpr>
														</TupleExpr>
														<RefExpr>
															<RefName>
																<Word>=</Word>
															</RefName>
														</RefExpr>
													</MemPred>
												</OrPred>
											</ExistsPred>
										</SchText>
									</SetCompExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word>=</Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</AndPred>
					</AndPred>
				</AndPred>
			</SchText>
		</AxPara>
		<!-- function operator temp: subtraction -->
		<OptempPara Cat="Function" Prec="30" Assoc="Left">
			<Operand/>
			<Operator>
				<Word>-</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- axiomatic defn: subtraction -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ - _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<ProdExpr>
								<RefExpr>
									<RefName>
										<Word>&arithmos;</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>&arithmos;</Word>
									</RefName>
								</RefExpr>
							</ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<AndPred Op="NL">
					<ForallPred>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<DeclName>
									<Word>y</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
						</SchText>
						<Exists1Pred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>z</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<MemPred>
								<TupleExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>y</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>z</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word> _ - _ </Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</Exists1Pred>
					</ForallPred>
					<ForallPred>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>i</Word>
								</DeclName>
								<DeclName>
									<Word>j</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
						</SchText>
						<MemPred>
							<TupleExpr>
								<ApplExpr>
									<RefExpr>
										<RefName>
											<Word> _ - _ </Word>
										</RefName>
									</RefExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>i</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>j</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
								</ApplExpr>
								<ApplExpr>
									<RefExpr>
										<RefName>
											<Word> _ + _ </Word>
										</RefName>
									</RefExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>i</Word>
											</RefName>
										</RefExpr>
										<RefExpr Mixfix="true">
											<RefName>
												<Word>- _ </Word>
											</RefName>
											<RefExpr>
												<RefName>
													<Word>j</Word>
												</RefName>
											</RefExpr>
										</RefExpr>
									</TupleExpr>
								</ApplExpr>
							</TupleExpr>
							<RefExpr>
								<RefName>
									<Word>=</Word>
								</RefName>
							</RefExpr>
						</MemPred>
					</ForallPred>
				</AndPred>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: less-than-or-equal-to -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &leq; _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>i</Word>
							</DeclName>
							<DeclName>
								<Word>j</Word>
							</DeclName>
							<RefExpr>
								<RefName>
									<Word>&integer;</Word>
								</RefName>
							</RefExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &leq; _ </Word>
								</RefName>
								<RefExpr>
									<RefName>
										<Word>i</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
						<MemPred>
							<ApplExpr>
								<RefExpr>
									<RefName>
										<Word> _ - _ </Word>
									</RefName>
								</RefExpr>
								<TupleExpr>
									<RefExpr>
										<RefName>
											<Word>j</Word>
										</RefName>
									</RefExpr>
									<RefExpr>
										<RefName>
											<Word>i</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
							</ApplExpr>
							<RefExpr>
								<RefName>
									<Word>&nat;</Word>
								</RefName>
							</RefExpr>
						</MemPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: less than or equal to -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word>&lt;</Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>i</Word>
							</DeclName>
							<DeclName>
								<Word>j</Word>
							</DeclName>
							<RefExpr>
								<RefName>
									<Word>&integer;</Word>
								</RefName>
							</RefExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &lt; _ </Word>
								</RefName>
								<RefExpr>
									<RefName>
										<Word>i</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &leq; _ </Word>
								</RefName>
								<ApplExpr>
									<RefExpr>
										<RefName>
											<Word> _ + _ </Word>
										</RefName>
									</RefExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>i</Word>
											</RefName>
										</RefExpr>
										<NumExpr Value="1"/>
									</TupleExpr>
								</ApplExpr>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: greater than or equal to -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &geq; _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>i</Word>
							</DeclName>
							<DeclName>
								<Word>j</Word>
							</DeclName>
							<RefExpr>
								<RefName>
									<Word>&integer;</Word>
								</RefName>
							</RefExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &geq; _ </Word>
								</RefName>
								<RefExpr>
									<RefName>
										<Word>i</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &leq; _ </Word>
								</RefName>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>i</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: greater than -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &gt; _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<ForallPred>
					<SchText>
						<VarDecl>
							<DeclName>
								<Word>i</Word>
							</DeclName>
							<DeclName>
								<Word>j</Word>
							</DeclName>
							<RefExpr>
								<RefName>
									<Word>&integer;</Word>
								</RefName>
							</RefExpr>
						</VarDecl>
					</SchText>
					<IffPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &gt; _ </Word>
								</RefName>
								<RefExpr>
									<RefName>
										<Word>i</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
						<ExprPred>
							<RefExpr Mixfix="true">
								<RefName>
									<Word> _ &lt; _ </Word>
								</RefName>
								<RefExpr>
									<RefName>
										<Word>j</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>i</Word>
									</RefName>
								</RefExpr>
							</RefExpr>
						</ExprPred>
					</IffPred>
				</ForallPred>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: strictly positive natual numbers -->
		<AxPara>
			<SchText>
				<ConstDecl>
					<DeclName>
						<Word>&natone;</Word>
					</DeclName>
					<SetCompExpr>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&nat;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
							<NegPred>
								<MemPred>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<NumExpr Value="0"/>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>=</Word>
										</RefName>
									</RefExpr>
								</MemPred>
							</NegPred>
						</SchText>
					</SetCompExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: non-zero integer -->
		<AxPara>
			<SchText>
				<ConstDecl>
					<DeclName>
						<Word>&integerone;</Word>
					</DeclName>
					<SetCompExpr>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
							<NegPred>
								<MemPred>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<NumExpr Value="0"/>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>=</Word>
										</RefName>
									</RefExpr>
								</MemPred>
							</NegPred>
						</SchText>
					</SetCompExpr>
				</ConstDecl>
			</SchText>
		</AxPara>
		<!-- axiomatic defn: multiplication of integers -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ * _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<ProdExpr>
								<RefExpr>
									<RefName>
										<Word>&arithmos;</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>&arithmos;</Word>
									</RefName>
								</RefExpr>
							</ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<AndPred Op="NL">
					<ForallPred>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<DeclName>
									<Word>y</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
						</SchText>
						<Exists1Pred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>z</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<MemPred>
								<TupleExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>y</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>z</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word> _ * _ </Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</Exists1Pred>
					</ForallPred>
					<ForallPred>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>i</Word>
								</DeclName>
								<DeclName>
									<Word>j</Word>
								</DeclName>
								<DeclName>
									<Word>k</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
						</SchText>
						<AndPred Op="And">
							<MemPred>
								<TupleExpr>
									<RefExpr Mixfix="true">
										<RefName>
											<Word> _ * _ </Word>
										</RefName>
										<RefExpr Mixfix="true">
											<RefName>
												<Word> _ * _ </Word>
											</RefName>
											<RefExpr>
												<RefName>
													<Word>i</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>j</Word>
												</RefName>
											</RefExpr>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>k</Word>
											</RefName>
										</RefExpr>
									</RefExpr>
									<RefExpr Mixfix="true">
										<RefName>
											<Word> _ * _ </Word>
										</RefName>
										<RefExpr>
											<RefName>
												<Word>i</Word>
											</RefName>
										</RefExpr>
										<RefExpr Mixfix="true">
											<RefName>
												<Word> _ * _ </Word>
											</RefName>
											<RefExpr>
												<RefName>
													<Word>j</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>k</Word>
												</RefName>
											</RefExpr>
										</RefExpr>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word>=</Word>
									</RefName>
								</RefExpr>
							</MemPred>
							<AndPred Op="And">
								<MemPred>
									<TupleExpr>
										<RefExpr Mixfix="true">
											<RefName>
												<Word> _ * _ </Word>
											</RefName>
											<RefExpr>
												<RefName>
													<Word>i</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>j</Word>
												</RefName>
											</RefExpr>
										</RefExpr>
										<RefExpr Mixfix="true">
											<RefName>
												<Word> _ * _ </Word>
											</RefName>
											<RefExpr>
												<RefName>
													<Word>j</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>i</Word>
												</RefName>
											</RefExpr>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>=</Word>
										</RefName>
									</RefExpr>
								</MemPred>
								<AndPred Op="And">
									<MemPred>
										<TupleExpr>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ * _ </Word>
												</RefName>
												<RefExpr>
													<RefName>
														<Word>i</Word>
													</RefName>
												</RefExpr>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ + _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>k</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
											</RefExpr>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ + _ </Word>
												</RefName>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ * _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ * _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>k</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
											</RefExpr>
										</TupleExpr>
										<RefExpr>
											<RefName>
												<Word>=</Word>
											</RefName>
										</RefExpr>
									</MemPred>
									<AndPred Op="And">
										<MemPred>
											<TupleExpr>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ * _ </Word>
													</RefName>
													<NumExpr Value="0"/>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
												<NumExpr Value="0"/>
											</TupleExpr>
											<RefExpr>
												<RefName>
													<Word>=</Word>
												</RefName>
											</RefExpr>
										</MemPred>
										<MemPred>
											<TupleExpr>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ * _ </Word>
													</RefName>
													<NumExpr Value="1"/>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>i</Word>
													</RefName>
												</RefExpr>
											</TupleExpr>
											<RefExpr>
												<RefName>
													<Word>=</Word>
												</RefName>
											</RefExpr>
										</MemPred>
									</AndPred>
								</AndPred>
							</AndPred>
						</AndPred>
					</ForallPred>
				</AndPred>
			</SchText>
		</AxPara>
		<!-- operator temp: division, modulus -->
		<OptempPara Cat="Function" Prec="40" Assoc="Left">
			<Operand/>
			<Operator>
				<Word>&div;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<OptempPara Cat="Function" Prec="40" Assoc="Left">
			<Operand/>
			<Operator>
				<Word>&mod;</Word>
			</Operator>
			<Operand/>
		</OptempPara>
		<!-- axiomatic defns: division, modulus -->
		<AxPara>
			<SchText>
				<VarDecl>
					<DeclName>
						<Word> _ &div; _ </Word>
					</DeclName>
					<DeclName>
						<Word> _ &mod; _ </Word>
					</DeclName>
					<PowerExpr>
						<ProdExpr>
							<ProdExpr>
								<RefExpr>
									<RefName>
										<Word>&arithmos;</Word>
									</RefName>
								</RefExpr>
								<RefExpr>
									<RefName>
										<Word>&arithmos;</Word>
									</RefName>
								</RefExpr>
							</ProdExpr>
							<RefExpr>
								<RefName>
									<Word>&arithmos;</Word>
								</RefName>
							</RefExpr>
						</ProdExpr>
					</PowerExpr>
				</VarDecl>
				<AndPred Op="NL">
					<ForallPred>
						<SchText>
							<VarDecl>
								<DeclName>
									<Word>x</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integer;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
							<VarDecl>
								<DeclName>
									<Word>y</Word>
								</DeclName>
								<RefExpr>
									<RefName>
										<Word>&integerone;</Word>
									</RefName>
								</RefExpr>
							</VarDecl>
						</SchText>
						<Exists1Pred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>z</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<MemPred>
								<TupleExpr>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>x</Word>
											</RefName>
										</RefExpr>
										<RefExpr>
											<RefName>
												<Word>y</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>z</Word>
										</RefName>
									</RefExpr>
								</TupleExpr>
								<RefExpr>
									<RefName>
										<Word> _ &div; _</Word>
									</RefName>
								</RefExpr>
							</MemPred>
						</Exists1Pred>
					</ForallPred>
					<AndPred Op="NL">
						<ForallPred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>x</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
								<VarDecl>
									<DeclName>
										<Word>y</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integerone;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<Exists1Pred>
								<SchText>
									<VarDecl>
										<DeclName>
											<Word>z</Word>
										</DeclName>
										<RefExpr>
											<RefName>
												<Word>&integer;</Word>
											</RefName>
										</RefExpr>
									</VarDecl>
								</SchText>
								<MemPred>
									<TupleExpr>
										<TupleExpr>
											<RefExpr>
												<RefName>
													<Word>x</Word>
												</RefName>
											</RefExpr>
											<RefExpr>
												<RefName>
													<Word>y</Word>
												</RefName>
											</RefExpr>
										</TupleExpr>
										<RefExpr>
											<RefName>
												<Word>z</Word>
											</RefName>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word> _ &mod; _ </Word>
										</RefName>
									</RefExpr>
								</MemPred>
							</Exists1Pred>
						</ForallPred>
						<ForallPred>
							<SchText>
								<VarDecl>
									<DeclName>
										<Word>i</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integer;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
								<VarDecl>
									<DeclName>
										<Word>j</Word>
									</DeclName>
									<RefExpr>
										<RefName>
											<Word>&integerone;</Word>
										</RefName>
									</RefExpr>
								</VarDecl>
							</SchText>
							<AndPred Op="And">
								<MemPred>
									<TupleExpr>
										<RefExpr>
											<RefName>
												<Word>i</Word>
											</RefName>
										</RefExpr>	
										<RefExpr Mixfix="true">
											<RefName>
												<Word> _ + _ </Word>
											</RefName>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ * _ </Word>
												</RefName>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ &div; _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>j</Word>
													</RefName>
												</RefExpr>
											</RefExpr>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ &mod; _ </Word>
												</RefName>
												<RefExpr>
													<RefName>
														<Word>i</Word>
													</RefName>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>j</Word>
													</RefName>
												</RefExpr>
											</RefExpr>
										</RefExpr>
									</TupleExpr>
									<RefExpr>
										<RefName>
											<Word>=</Word>
										</RefName>
									</RefExpr>
								</MemPred>
								<OrPred>
									<AndPred Op="Chain">
										<ExprPred>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ &leq; _ </Word>
												</RefName>
												<RefExpr>
													<RefName>
														<Word> _ &mod; _ </Word>
													</RefName>
													<NumExpr Value="0"/>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
											</RefExpr>
										</ExprPred>
										<ExprPred>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ &lt; _ </Word>
												</RefName>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ &mod; _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
												<RefExpr>
													<RefName>
														<Word>j</Word>
													</RefName>
												</RefExpr>
											</RefExpr>
										</ExprPred>
									</AndPred>
									<AndPred Op="Chain">
										<ExprPred>
											<RefExpr>
												<RefName>
													<Word> _ &lt; _ </Word>
												</RefName>
												<RefExpr>
													<RefName>
														<Word>j</Word>
													</RefName>
												</RefExpr>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ &mod; _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
											</RefExpr>
										</ExprPred>
										<ExprPred>
											<RefExpr Mixfix="true">
												<RefName>
													<Word> _ &leq; _ </Word>
												</RefName>
												<RefExpr Mixfix="true">
													<RefName>
														<Word> _ &mod; _ </Word>
													</RefName>
													<RefExpr>
														<RefName>
															<Word>i</Word>
														</RefName>
													</RefExpr>
													<RefExpr>
														<RefName>
															<Word>j</Word>
														</RefName>
													</RefExpr>
												</RefExpr>
												<NumExpr Value="0"/>
											</RefExpr>
										</ExprPred>
									</AndPred>
								</OrPred>
							</AndPred>
						</ForallPred>
					</AndPred>
				</AndPred>
			</SchText>
		</AxPara>
	</ZSect>
</Spec>
