ERROR_FILE_LINE=\"{0}\", line {1}
ERROR_FILE_LINE_COL=\"{0}\", line {1}, column {2}
NO_LOCATION=No location information
TYPE_MISMATCH_IN_MEM_PRED=Type mismatch in membership predicate\n\tPredicate: {0}\n\tLHS type: {1}\n\tRHS type: {2}
TYPE_MISMATCH_IN_EQUALITY=Type mismatch in equality\n\tPredicate: {0}\n\tLHS type: {1}\n\tRHS type: {2}
TYPE_MISMATCH_IN_REL_OP=Type mismatch in relation\n\tPredicate: {0}\n\tLHS type: {1}\n\tRHS type: {2}
TYPE_MISMATCH_IN_CHAIN_REL=Type mismatch in chain relation - Middle expression unifies to two different types\n\tChain relation: {0}\n\tFirst type: {1}\n\tSecond type: {2}
NON_SCHEXPR_IN_EXPR_PRED=Schema expression required in expression predicate\n\tExpression: {0}\n\tType: {1}
TYPE_MISMATCH_IN_SIGNATURE=Type mismatch in declaration of {0}\n\tFirst type: {1}\n\tSecond type: {2}
TYPE_MISMATCH_IN_COMPEXPR=Type mismatch in schema composition\n\tExpression: {0}\n\tType of {1} in left side: {2}\n\tType of {3} in right side: {4}
TYPE_MISMATCH_IN_PIPEEXPR=Type mismatch in schema piping\n\tExpression: {0}\n\tType of {1} in left side: {2}\n\tType of {3} in right side: {4}
NON_SET_IN_FREETYPE=Set expression required for free type\n\tExpression: {0}\n\tType: {1}
REDECLARED_GEN=Generic type name {0} multiply declared in generic paragraph definition
PARAMETERS_NOT_DETERMINED=Implicit parameters not determined\n\tExpression: {0}
TYPE_NOT_DETERMINED=Type of reference expression not determined\n\tExpression: {0}
UNDECLARED_IDENTIFIER=Undeclared identifier: {0}
REDECLARED_SECTION=Section {0} has previously been declared
REDECLARED_PARENT=Parent {0} is multiply included for section {1}
SELF_PARENT=Section {0} has itself as a parent
REDECLARED_GLOBAL_NAME=Global name {0} multiply declared
PARAMETER_MISMATCH=Name {0} expects {1} parameters
NON_SET_IN_DECL=Set expression required in variable declaration\n\tExpression: {0}\n\tType: {1}
NON_SCHEXPR_IN_INCLDECL=Included declaration {0} is not a schema\n\tFound type: {1}
NON_SET_IN_INSTANTIATION=Set expression required in generic instantiation\n\tExpression: {0}\n\tType: {1}
NON_SET_IN_POWEREXPR=Set expression required in power expression\n\tExpression: {0}\n\tType: {1}
NON_SET_IN_PRODEXPR=Arguments of cross product must be a set expression\n\tExpression: {0}\n\tArgument: {1}\n\tType: {2}
TYPE_MISMATCH_IN_SET_EXPR=Type mismatch in set expression\n\tExpression: {0}\n\tType: {1}\n\tExpected type: {2}
INDEX_ERROR_IN_TUPLESELEXPR=Tuple selection index out of bounds\n\tExpression: {0}\n\tTuple length: {1}
NON_PRODTYPE_IN_TUPLESELEXPR=Argument of tuple selection must be a tuple\n\tExpression: {0}\n\tArgument type: {1}
NON_SCHEXPR_IN_QNT1EXPR=Schema expression required in quantifier expression\n\tExpression: {0}\n\tType: {1}
NON_SCHEXPR_IN_SCHEXPR2=Non-schema expression in infix schema expression\n\tExpression: {0} \n\tType: {1}
TYPE_MISMATCH_IN_CONDEXPR=Type mismatch in conditional expression\n\tExpression: {0}\n\tThen type: {1}\n\tElse type: {2}
NON_SCHEXPR_IN_HIDE_EXPR=Attemping to hide variables from non-schema expression\n\tExpression: {0}\n\tType: {1}
NON_EXISTENT_NAME_IN_HIDEEXPR=Non-existent component hidden\n\tExpression: {0}\n\tComponent: {1}
NON_SCHEXPR_IN_PREEXPR=Schema expression required in precondition expression\n\tExpression: {0}\n\tType: {1}
NON_FUNCTION_IN_APPLEXPR=Application of a non-function\n\tExpression: {0}\n\tFound type: {1}
TYPE_MISMATCH_IN_APPLEXPR=Argument to function application has unexpected type\n\tExpression: {0}\n\tExpected type: {1}\n\tActual type: {2}
NON_SCHEXPR_IN_THETAEXPR=Schema expression required as argument to theta expression\n\tExpression: {0}\n\tType: {1}
UNDECLARED_IDENTIFIER_IN_EXPR=Undeclared identifier: {0}\n\tExpression: {1}
GENERICTYPE_IN_THETAEXPR=Name {0} has generic type\n\tExpression: {1}\n\tType: {2}
TYPE_MISMATCH_IN_THETAEXPR=Type mismatch for name {0}\n\tExpression: {1}\n\tFirst type: {2}\n\tSecond type: {3}
NON_SCHEXPR_IN_DECOREXPR=Schema expression required in decorated expression\n\tExpression: {0}\n\tType: {1}
NON_SCHEXPR_IN_RENAMEEXPR=Schema expression required in rename expression\n\tExpression: {0}\n\tType: {1}
DUPLICATE_NAME_IN_RENAMEEXPR=Duplicate name in rename expression\n\tExpression: {0}\n\tName: {1}
NON_BINDING_IN_BINDSELEXPR=Argument of binding selection must have schema type\n\tExpression: {0}\n\tType: {1}
NON_EXISTENT_SELECTION=Non-existent component selected\n\tExpression: {0}
DUPLICATE_IN_BINDEXPR=Duplicate name in binding expr: {0}
