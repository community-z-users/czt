<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE unicode SYSTEM "http://nt-appn.comp.nus.edu.sg/fm/zml/unicode.dtd">
<Spec xmlns="http://czt.sourceforge.net/zml"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://czt.sourceforge.net/zml http://czt.sourceforge.net/zml/Z_1_1.xsd "
 Version="1.1">
  <ZSect>
    <Name>birthdaybook</Name>
    <NarrPara>
        <Content>
          \ documentclass { article } \ usepackage { oz } % oz or z - eves or fuzz styles \ newenvironment { machine } [ 1 ] { \ begin { tabular } { @ { \ qquad } l } \ textbf { \ kern - 1em machine } \ # 1 \ \ } { \ \ \ textbf { \ kern - 1em end } \ end { tabular } } \ newcommand { \ machineInit } { \ \ \ textbf { \ kern - 1em init } \ \ } \ newcommand { \ machineOps } { \ \ \ textbf { \ kern - 1em ops } \ \ } \ begin { document } This is the BirthdayBook specification , from Spivey \ cite { spivey : z - notation2 } . We extend it slightlyby adding an extra operation , $ RemindOne $ , that is non - deterministic . % [ NAME , DATE ] 
        </Content>
    </NarrPara>
    <AxPara Box="OmitBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>NAME</Word>
          </DeclName>
          <ApplExpr>
            <RefExpr>
              <RefName>
                <Word>&upto;</Word>
              </RefName>
            </RefExpr>
            <TupleExpr>
              <RefExpr>
                <RefName>
                  <Word>1</Word>
                </RefName>
              </RefExpr>
              <RefExpr>
                <RefName>
                  <Word>5</Word>
                </RefName>
              </RefExpr>
            </TupleExpr>
          </ApplExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <AxPara Box="OmitBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>DATE</Word>
          </DeclName>
          <ApplExpr>
            <RefExpr>
              <RefName>
                <Word>&upto;</Word>
              </RefName>
            </RefExpr>
            <TupleExpr>
              <RefExpr>
                <RefName>
                  <Word>10</Word>
                </RefName>
              </RefExpr>
              <RefExpr>
                <RefName>
                  <Word>15</Word>
                </RefName>
              </RefExpr>
            </TupleExpr>
          </ApplExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          The $ BirthdayBook $ schema defines the \ emph { state space } of the birthday book system . 
        </Content>
    </NarrPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>BirthdayBook</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <VarDecl>
                <DeclName>
                  <Word>known</Word>
                </DeclName>
                <PowerExpr>
                  <RefExpr>
                    <RefName>
                      <Word>NAME</Word>
                    </RefName>
                  </RefExpr>
                </PowerExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>birthday</Word>
                </DeclName>
                <RefExpr Mixfix="true">
                  <RefName>
                    <Word>&pfun;</Word>
                  </RefName>
                  <RefExpr>
                    <RefName>
                      <Word>NAME</Word>
                    </RefName>
                  </RefExpr>
                  <RefExpr>
                    <RefName>
                      <Word>DATE</Word>
                    </RefName>
                  </RefExpr>
                </RefExpr>
              </VarDecl>
              <MemPred>
                <TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>known</Word>
                    </RefName>
                  </RefExpr>
                  <RefExpr Mixfix="true">
                    <RefName>
                      <Word>dom</Word>
                    </RefName>
                    <RefExpr>
                      <RefName>
                        <Word>birthday</Word>
                      </RefName>
                    </RefExpr>
                  </RefExpr>
                </TupleExpr>
                <RefExpr>
                  <RefName>
                    <Word>=</Word>
                  </RefName>
                </RefExpr>
              </MemPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          This $ InitBirthdayBook $ specifies the initial stateof the birthday book system . It does not say explicitly that $ birthday' $ is empty , but that is implicit , because its domainis empty . 
        </Content>
    </NarrPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>InitBirthdayBook</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <DecorExpr>
                  <RefExpr>
                    <RefName>
                      <Word>BirthdayBook</Word>
                    </RefName>
                  </RefExpr>
                    <NextStroke/>
                </DecorExpr>
              </InclDecl>
              <MemPred>
                <TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>known</Word>
                      <NextStroke/>
                    </RefName>
                  </RefExpr>
                  <SetExpr/>
                </TupleExpr>
                <RefExpr>
                  <RefName>
                    <Word>=</Word>
                  </RefName>
                </RefExpr>
              </MemPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          Next we have several operation schemas to define the normal ( non - error ) behaviour of the system . 
        </Content>
    </NarrPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>AddBirthday</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <RefExpr>
                  <RefName>
                    <Word>&delta; BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </InclDecl>
              <VarDecl>
                <DeclName>
                  <Word>name</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>NAME</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>date</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>DATE</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <AndPred Op="NL">
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>name</Word>
                        <InStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>&nem;</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>birthday</Word>
                        <NextStroke/>
                      </RefName>
                    </RefExpr>
                    <ApplExpr>
                      <RefExpr>
                        <RefName>
                          <Word>&uni;</Word>
                        </RefName>
                      </RefExpr>
                      <TupleExpr>
                        <RefExpr>
                          <RefName>
                            <Word>birthday</Word>
                          </RefName>
                        </RefExpr>
                        <SetExpr>
                          <ApplExpr>
                            <RefExpr>
                              <RefName>
                                <Word>&map;</Word>
                              </RefName>
                            </RefExpr>
                            <TupleExpr>
                              <RefExpr>
                                <RefName>
                                  <Word>name</Word>
                                  <InStroke/>
                                </RefName>
                              </RefExpr>
                              <RefExpr>
                                <RefName>
                                  <Word>date</Word>
                                  <InStroke/>
                                </RefName>
                              </RefExpr>
                            </TupleExpr>
                          </ApplExpr>
                        </SetExpr>
                      </TupleExpr>
                    </ApplExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>=</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
              </AndPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>FindBirthday</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <RefExpr>
                  <RefName>
                    <Word>&xi; BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </InclDecl>
              <VarDecl>
                <DeclName>
                  <Word>name</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>NAME</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>date</Word>
                  <OutStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>DATE</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <AndPred Op="NL">
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>name</Word>
                        <InStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>&mem;</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>date</Word>
                        <OutStroke/>
                      </RefName>
                    </RefExpr>
                    <ApplExpr>
                      <RefExpr>
                        <RefName>
                          <Word>birthday</Word>
                        </RefName>
                      </RefExpr>
                      <RefExpr>
                        <RefName>
                          <Word>name</Word>
                          <InStroke/>
                        </RefName>
                      </RefExpr>
                    </ApplExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>=</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
              </AndPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>Remind</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <RefExpr>
                  <RefName>
                    <Word>&xi; BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </InclDecl>
              <VarDecl>
                <DeclName>
                  <Word>today</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>DATE</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>cards</Word>
                  <OutStroke/>
                </DeclName>
                <PowerExpr>
                  <RefExpr>
                    <RefName>
                      <Word>NAME</Word>
                    </RefName>
                  </RefExpr>
                </PowerExpr>
              </VarDecl>
              <MemPred>
                <TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>cards</Word>
                      <OutStroke/>
                    </RefName>
                  </RefExpr>
                  <SetCompExpr>
                    <SchText>
                      <VarDecl>
                        <DeclName>
                          <Word>n</Word>
                        </DeclName>
                        <RefExpr>
                          <RefName>
                            <Word>known</Word>
                          </RefName>
                        </RefExpr>
                      </VarDecl>
                      <MemPred>
                        <TupleExpr>
                          <ApplExpr>
                            <RefExpr>
                              <RefName>
                                <Word>birthday</Word>
                              </RefName>
                            </RefExpr>
                            <RefExpr>
                              <RefName>
                                <Word>n</Word>
                              </RefName>
                            </RefExpr>
                          </ApplExpr>
                          <RefExpr>
                            <RefName>
                              <Word>today</Word>
                              <InStroke/>
                            </RefName>
                          </RefExpr>
                        </TupleExpr>
                        <RefExpr>
                          <RefName>
                            <Word>=</Word>
                          </RefName>
                        </RefExpr>
                      </MemPred>
                    </SchText>
                  </SetCompExpr>
                </TupleExpr>
                <RefExpr>
                  <RefName>
                    <Word>=</Word>
                  </RefName>
                </RefExpr>
              </MemPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          This $ RemindOne $ schema does not appear in Spivey , but isincluded to show how non - deterministic schemas can be animated . It reminds us of just one person who has a birthday on the given day . 
        </Content>
    </NarrPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>RemindOne</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <RefExpr>
                  <RefName>
                    <Word>&xi; BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </InclDecl>
              <VarDecl>
                <DeclName>
                  <Word>today</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>DATE</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>card</Word>
                  <OutStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>NAME</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <AndPred Op="NL">
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>card</Word>
                        <OutStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>&mem;</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
                <MemPred>
                  <TupleExpr>
                    <ApplExpr>
                      <RefExpr>
                        <RefName>
                          <Word>birthday</Word>
                        </RefName>
                      </RefExpr>
                      <RefExpr>
                        <RefName>
                          <Word>card</Word>
                          <OutStroke/>
                        </RefName>
                      </RefExpr>
                    </ApplExpr>
                    <RefExpr>
                      <RefName>
                        <Word>today</Word>
                        <InStroke/>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>=</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
              </AndPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          Now we strengthen the specification by adding error handling . 
        </Content>
    </NarrPara>
    <FreePara>
      <Freetype>
        <DeclName>
          <Word>REPORT</Word>
        </DeclName>
        <Branch>
          <DeclName>
            <Word>ok</Word>
          </DeclName>
        </Branch>
        <Branch>
          <DeclName>
            <Word>already\_known</Word>
          </DeclName>
        </Branch>
        <Branch>
          <DeclName>
            <Word>not\_known</Word>
          </DeclName>
        </Branch>
      </Freetype>
    </FreePara>
    <NarrPara>
        <Content>
          First we define auxiliary schemas that capture various successand error cases . 
        </Content>
    </NarrPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>Success</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <VarDecl>
                <DeclName>
                  <Word>result</Word>
                  <OutStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>REPORT</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <MemPred>
                <TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>result</Word>
                      <OutStroke/>
                    </RefName>
                  </RefExpr>
                  <RefExpr>
                    <RefName>
                      <Word>ok</Word>
                    </RefName>
                  </RefExpr>
                </TupleExpr>
                <RefExpr>
                  <RefName>
                    <Word>=</Word>
                  </RefName>
                </RefExpr>
              </MemPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>AlreadyKnown</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <RefExpr>
                  <RefName>
                    <Word>&xi; BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </InclDecl>
              <VarDecl>
                <DeclName>
                  <Word>name</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>NAME</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>result</Word>
                  <OutStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>REPORT</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <AndPred Op="NL">
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>name</Word>
                        <InStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>&mem;</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>result</Word>
                        <OutStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>already\_known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>=</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
              </AndPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>NotKnown</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <InclDecl>
                <RefExpr>
                  <RefName>
                    <Word>&xi; BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </InclDecl>
              <VarDecl>
                <DeclName>
                  <Word>name</Word>
                  <InStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>NAME</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>result</Word>
                  <OutStroke/>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>REPORT</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <AndPred Op="NL">
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>name</Word>
                        <InStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>&nem;</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
                <MemPred>
                  <TupleExpr>
                    <RefExpr>
                      <RefName>
                        <Word>result</Word>
                        <OutStroke/>
                      </RefName>
                    </RefExpr>
                    <RefExpr>
                      <RefName>
                        <Word>not\_known</Word>
                      </RefName>
                    </RefExpr>
                  </TupleExpr>
                  <RefExpr>
                    <RefName>
                      <Word>=</Word>
                    </RefName>
                  </RefExpr>
                </MemPred>
              </AndPred>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          Finally , we define robust versions of all the operationsby specifying how errors are handled . For illustration purposes , we leave the $ RemindOne $ operation non - robust . 
        </Content>
    </NarrPara>
    <AxPara Box="OmitBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>RAddBirthday</Word>
          </DeclName>
          <OrExpr>
            <AndExpr>
              <RefExpr>
                <RefName>
                  <Word>AddBirthday</Word>
                </RefName>
              </RefExpr>
              <RefExpr>
                <RefName>
                  <Word>Success</Word>
                </RefName>
              </RefExpr>
            </AndExpr>
            <RefExpr>
              <RefName>
                <Word>AlreadyKnown</Word>
              </RefName>
            </RefExpr>
          </OrExpr>
        </ConstDecl>
        <ConstDecl>
          <DeclName>
            <Word>RFindBirthday</Word>
          </DeclName>
          <OrExpr>
            <AndExpr>
              <RefExpr>
                <RefName>
                  <Word>FindBirthday</Word>
                </RefName>
              </RefExpr>
              <RefExpr>
                <RefName>
                  <Word>Success</Word>
                </RefName>
              </RefExpr>
            </AndExpr>
            <RefExpr>
              <RefName>
                <Word>NotKnown</Word>
              </RefName>
            </RefExpr>
          </OrExpr>
        </ConstDecl>
        <ConstDecl>
          <DeclName>
            <Word>RRemind</Word>
          </DeclName>
          <AndExpr>
            <RefExpr>
              <RefName>
                <Word>Remind</Word>
              </RefName>
            </RefExpr>
            <RefExpr>
              <RefName>
                <Word>Success</Word>
              </RefName>
            </RefExpr>
          </AndExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          Finally , we can ( optionally ) define an explicit state machine , by identifying the state and initialisation schemas and theoperations . This is not necessary for the animator , but isuseful to make the roles of the various schemas explicit , ratherthan relying on informal naming conventions . This \ emph { machine } construct is a Java - specific extension of Zand will be ignored by other Z tools ( because they do notrecognise the \ verb! \ begin { machine } . . \ end { machine } ! \ LaTeX environment . Jaza uses this construct for translating the machine into the Bspecification language or other similar languages and ( in the future ) forconstructing GUI animation interface for the machine . \ begin { machine } { BirthdayBook } BirthdayBook \ machineInit InitBirthdayBook \ machineOps RAddBirthday ; RFindBirthday ; RRemind ; RemindOne \ end { machine } Here is an alternative style of defining a machine - - as aschema with fields named $ state $ and $ init $ , plus otherfields for the operations of the machine . Advantages of this approach include : \ begin { enumerate } \ item This \ emph { machine } construct is a standard Z schema , so all the usual Z operators can be used to construct machines , add and hide operations etc . \ item The operation names are local to this schema rather than global , so short , non - qualified names can be used . Furthermore , several machines can have the same operation name . \ item Other ( non - schema ) fields inside the machine can represent global constants of the machine , and the invariant can be used to constrain these constants . \ item A generic schema can represent a parameterised machine . \ end { enumerate } Disadvantages : \ begin { enumerate } \ item The machine name cannot be the same as its state schema . \ item Some restrictions are probably necessary on the invariant of the machine , because it is difficult to see what should be the meaning of a predicate that constrains two of the operations . ( This has no obvious translation into B . It is not expressive enough to act as a history invariant . ) \ end { enumerate } 
        </Content>
    </NarrPara>
    <AxPara Box="SchBox">
      <SchText>
        <ConstDecl>
          <DeclName>
            <Word>BBook</Word>
          </DeclName>
          <SchExpr>
            <SchText>
              <VarDecl>
                <DeclName>
                  <Word>state</Word>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>BirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>init</Word>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>InitBirthdayBook</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>add</Word>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>RAddBirthday</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>find</Word>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>RFindBirthday</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>remind</Word>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>RRemind</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
              <VarDecl>
                <DeclName>
                  <Word>remind1</Word>
                </DeclName>
                <RefExpr>
                  <RefName>
                    <Word>RemindOne</Word>
                  </RefName>
                </RefExpr>
              </VarDecl>
            </SchText>
          </SchExpr>
        </ConstDecl>
      </SchText>
    </AxPara>
    <NarrPara>
        <Content>
          % \ bibliographystyle { plain } \ bibliography { spec } \ begin { thebibliography } { 1 } \ bibitem { spivey : z - notation2 } J . Michael Spivey . \ newblock { \ em The Z Notation : A Reference Manual } . \ newblock International Series in Computer Science . Prentice - Hall International ( UK ) Ltd , second edition , 1992 . \ end { thebibliography } \ end { document } 
        </Content>
    </NarrPara>
  </ZSect>
</Spec>
