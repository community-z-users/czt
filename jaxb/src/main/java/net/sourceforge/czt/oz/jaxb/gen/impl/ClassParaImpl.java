//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassParaImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl
    implements net.sourceforge.czt.oz.jaxb.gen.ClassPara, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Operation;
    protected com.sun.xml.bind.util.ListImpl _LocalDef;
    protected net.sourceforge.czt.oz.jaxb.gen.InitialState _InitialState;
    protected net.sourceforge.czt.oz.jaxb.gen.State _State;
    protected net.sourceforge.czt.oz.jaxb.gen.VisibilityList _VisibilityList;
    protected net.sourceforge.czt.z.jaxb.gen.ExprList _InheritedClass;
    protected com.sun.xml.bind.util.ListImpl _FormalParameters;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _DeclName;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getOperation() {
        if (_Operation == null) {
            _Operation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Operation;
    }

    public java.util.List getOperation() {
        return _getOperation();
    }

    protected com.sun.xml.bind.util.ListImpl _getLocalDef() {
        if (_LocalDef == null) {
            _LocalDef = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _LocalDef;
    }

    public java.util.List getLocalDef() {
        return _getLocalDef();
    }

    public net.sourceforge.czt.oz.jaxb.gen.InitialState getInitialState() {
        return _InitialState;
    }

    public void setInitialState(net.sourceforge.czt.oz.jaxb.gen.InitialState value) {
        _InitialState = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.State getState() {
        return _State;
    }

    public void setState(net.sourceforge.czt.oz.jaxb.gen.State value) {
        _State = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.VisibilityList getVisibilityList() {
        return _VisibilityList;
    }

    public void setVisibilityList(net.sourceforge.czt.oz.jaxb.gen.VisibilityList value) {
        _VisibilityList = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.ExprList getInheritedClass() {
        return _InheritedClass;
    }

    public void setInheritedClass(net.sourceforge.czt.z.jaxb.gen.ExprList value) {
        _InheritedClass = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getFormalParameters() {
        if (_FormalParameters == null) {
            _FormalParameters = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _FormalParameters;
    }

    public java.util.List getFormalParameters() {
        return _getFormalParameters();
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getDeclName() {
        return _DeclName;
    }

    public void setDeclName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _DeclName = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Operation == null)? 0 :_Operation.size());
        int idx2 = 0;
        final int len2 = ((_LocalDef == null)? 0 :_LocalDef.size());
        int idx7 = 0;
        final int len7 = ((_FormalParameters == null)? 0 :_FormalParameters.size());
        super.serializeBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endElement();
        }
        while (idx7 != len7) {
            context.startElement("http://czt.sourceforge.net/object-z", "FormalParameters");
            int idx_2 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters.get(idx_2 ++)), "FormalParameters");
            context.endNamespaceDecls();
            int idx_3 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters.get(idx_3 ++)), "FormalParameters");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormalParameters.get(idx7 ++)), "FormalParameters");
            context.endElement();
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endElement();
            }
        }
        if (_InheritedClass!= null) {
            if (_InheritedClass instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass), "InheritedClass");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "ExprList");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass), "InheritedClass");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass), "InheritedClass");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass), "InheritedClass");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_LocalDef.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Para");
                int idx_8 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx_8 ++)), "LocalDef");
                context.endNamespaceDecls();
                int idx_9 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx_9 ++)), "LocalDef");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
                context.endElement();
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "State");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endElement();
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InitialState");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "Operation");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_14 ++)), "Operation");
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_15 ++)), "Operation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Operation == null)? 0 :_Operation.size());
        int idx2 = 0;
        final int len2 = ((_LocalDef == null)? 0 :_LocalDef.size());
        int idx7 = 0;
        final int len7 = ((_FormalParameters == null)? 0 :_FormalParameters.size());
        super.serializeAttributes(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            }
        }
        if (_InheritedClass!= null) {
            if (_InheritedClass instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass), "InheritedClass");
            }
        }
        while (idx2 != len2) {
            if (_LocalDef.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
            } else {
                idx2 += 1;
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Operation == null)? 0 :_Operation.size());
        int idx2 = 0;
        final int len2 = ((_LocalDef == null)? 0 :_LocalDef.size());
        int idx7 = 0;
        final int len7 = ((_FormalParameters == null)? 0 :_FormalParameters.size());
        super.serializeURIs(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        while (idx7 != len7) {
            idx7 += 1;
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            }
        }
        if (_InheritedClass!= null) {
            if (_InheritedClass instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass), "InheritedClass");
            }
        }
        while (idx2 != len2) {
            if (_LocalDef.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
            } else {
                idx2 += 1;
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.gramma"
+"r.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~"
+"\u0000!t\u0000,net.sourceforge.czt.z.jaxb.gen.Term.AnnsTypet\u0000+http://j"
+"ava.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psr\u0000\u001bc"
+"om.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/da"
+"tatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/St"
+"ringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'c"
+"om.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespac"
+"eUriq\u0000~\u0000&L\u0000\btypeNameq\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dataty"
+"pe/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSc"
+"hemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Null"
+"SetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.util.Str"
+"ingPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000~"
+"\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-inst"
+"anceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000$"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q"
+"\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.z.jaxb.gen.ZDeclNameElement"
+"q\u0000~\u0000)sq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000"
+"$sq\u0000~\u0000%t\u00007net.sourceforge.czt.zpatt.jaxb.gen.JokerDeclNameEl"
+"ementq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net."
+"sourceforge.czt.z.jaxb.gen.DeclNameq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014p"
+"q\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0010FormalParameterst\u0000#http://czt.source"
+"forge.net/object-zq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005net.sour"
+"ceforge.czt.oz.jaxb.gen.VisibilityListElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000"
+"\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~"
+"\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.oz.jaxb.gen.VisibilityLi"
+"stq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000eVisibilit"
+"yListq\u0000~\u0000`q\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00007net.sourceforge."
+"czt.zpatt.jaxb.gen.JokerExprListElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000"
+"~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sou"
+"rceforge.czt.z.jaxb.gen.ZExprListElementq\u0000~\u0000)q\u0000~\u0000$sq\u0000~\u0000\rppsq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq"
+"\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq"
+"\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq"
+"\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00006net.sourceforge.czt.circus.ja"
+"xb.gen.ChannelParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.z"
+".jaxb.gen.FreeParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.z"
+".jaxb.gen.ConjParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00006net.sourceforge.czt.c"
+"ircus.jaxb.gen.ProcessParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rpps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00006net.sourcefor"
+"ge.czt.circus.jaxb.gen.NameSetParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000s"
+"q\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.s"
+"ourceforge.czt.z.jaxb.gen.NarrParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000s"
+"q\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.s"
+"ourceforge.czt.oz.jaxb.gen.ClassParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p"
+"\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net"
+".sourceforge.czt.zpatt.jaxb.gen.JokersElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000"
+"\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00009n"
+"et.sourceforge.czt.circus.jaxb.gen.ChannelSetParaElementq\u0000~\u0000"
+")sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000"
+"$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.z.jaxb.gen.GivenParaElementq\u0000~"
+"\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~"
+"\u0000$sq\u0000~\u0000%t\u00005net.sourceforge.czt.z.jaxb.gen.LatexMarkupParaEle"
+"mentq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq"
+"\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00002net.sourceforge.czt.z.jaxb.gen.UnparsedPar"
+"aElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000"
+"~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sourceforge.czt.z.jaxb.gen.OptempP"
+"araElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014p"
+"q\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005net.sourceforge.czt.circus.jaxb.gen."
+"ActionParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.zpatt.jax"
+"b.gen.RuleElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.z.jaxb.ge"
+"n.AxParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq"
+"\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000=net.sourceforge.czt.circus.jaxb"
+".gen.RefinementConjParaElementq\u0000~\u0000)q\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$"
+"sq\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.gen.StateElementq\u0000~\u0000)sq"
+"\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014p"
+"q\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000%net.sourceforge.czt.oz.jaxb.gen.Stat"
+"eq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0005Stateq\u0000~\u0000`"
+"q\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq"
+"\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00003net.sourceforge.czt.oz.jax"
+"b.gen.InitialStateElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net."
+"sourceforge.czt.oz.jaxb.gen.InitialStateq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq"
+"\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\fInitialStateq\u0000~\u0000`q\u0000~\u0000$sq\u0000~\u0000\rpps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sourceforge.czt.oz.jaxb."
+"gen.OperationElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000"
+"\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000)net.sourc"
+"eforge.czt.oz.jaxb.gen.Operationq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~"
+"\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\tOperationq\u0000~\u0000`q\u0000~\u0000$sr\u0000\"com.sun.msv.gram"
+"mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
+"mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
+"essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006p"
+"arentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000s\u0001pq\u0000~\u0000Sq\u0000~"
+"\u0000\u008aq\u0000~\u0000\u008bq\u0000~\u0001#q\u0000~\u0000uq\u0000~\u0001/q\u0000~\u0001\'q\u0000~\u0000\u0085q\u0000~\u0001\u001aq\u0000~\u0001\u0012q\u0000~\u0001\u0006q\u0000~\u0000\u00feq\u0000~\u0000\u00f6q\u0000~"
+"\u0000\u00f0q\u0000~\u0000\u00eaq\u0000~\u0000\u00e4q\u0000~\u0000\u00deq\u0000~\u0000\u00d8q\u0000~\u0000\u00d2q\u0000~\u0000\u00ccq\u0000~\u0000\u00c6q\u0000~\u0000\u0017q\u0000~\u0000Gq\u0000~\u0000Mq\u0000~\u0000Wq\u0000~"
+"\u0000dq\u0000~\u0000lq\u0000~\u0000xq\u0000~\u0000~q\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~"
+"\u0000\u0005q\u0000~\u0001-q\u0000~\u0001\u0018q\u0000~\u0001\u0004q\u0000~\u0000\u0015q\u0000~\u0000Uq\u0000~\u0000jq\u0000~\u0000Rq\u0000~\u0000\u0007q\u0000~\u0000\u0088q\u0000~\u0000Eq\u0000~\u0000vq\u0000~"
+"\u0000\u0094q\u0000~\u0001\u000fq\u0000~\u0000\u00fbq\u0000~\u0000aq\u0000~\u0000\u008dq\u0000~\u0000\u008eq\u0000~\u0000\fq\u0000~\u0001$q\u0000~\u0000\u0083q\u0000~\u0000\u0086q\u0000~\u0001%q\u0000~\u0001\u0010q\u0000~"
+"\u0000\u00fcq\u0000~\u0000bq\u0000~\u0000\u0006q\u0000~\u0000\u008fq\u0000~\u0000\tq\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u00014q\u0000~\u0001\u001fq\u0000~\u0001\u000bq\u0000~\u0000*q\u0000~\u0000\\q\u0000~"
+"\u0000qq\u0000~\u0000\u000bq\u0000~\u0000\u0087q\u0000~\u0000\bq\u0000~\u0000\u0091q\u0000~\u0000\u0084q\u0000~\u00010q\u0000~\u0001(q\u0000~\u0001\u001bq\u0000~\u0001\u0013q\u0000~\u0001\u0007q\u0000~\u0000\u00ffq\u0000~"
+"\u0000\u00f7q\u0000~\u0000\u00f1q\u0000~\u0000\u000eq\u0000~\u0000\u00ebq\u0000~\u0000\u00e5q\u0000~\u0000\u00dfq\u0000~\u0000\u00d9q\u0000~\u0000\u00d3q\u0000~\u0000\u00cdq\u0000~\u0000\u00c7q\u0000~\u0000\u001aq\u0000~\u0000Hq\u0000~"
+"\u0000Nq\u0000~\u0000Xq\u0000~\u0000eq\u0000~\u0000mq\u0000~\u0000yq\u0000~\u0000\nq\u0000~\u0000\u007fq\u0000~\u0000\u0097q\u0000~\u0000\u009dq\u0000~\u0000\u00a3q\u0000~\u0000\u00a9q\u0000~\u0000\u00afq\u0000~"
+"\u0000\u00b5q\u0000~\u0000\u00bbq\u0000~\u0000\u0090q\u0000~\u0000\u00c1q\u0000~\u0000\u0089q\u0000~\u0000\u0093x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("ChannelPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProcessPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NameSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Jokers" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LatexMarkupPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActionPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Rule" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefinementConjPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.RefinementConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RefinementConjParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  22 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZRefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZRefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  14 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  2 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  24 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 25, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  1 :
                        if (("ZDeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.ZDeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ZDeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerDeclName" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerDeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerDeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 24;
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  18 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  6 :
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _InheritedClass = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ZExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ZExprListElementImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("ExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListElementImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  11 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 14;
                        continue outer;
                    case  15 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("ChannelPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProcessPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NameSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Jokers" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LatexMarkupPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActionPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Rule" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefinementConjPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.RefinementConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RefinementConjParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  20 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 21, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  16 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OpName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 14;
                            return ;
                        }
                        break;
                    case  22 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  23 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  2 :
                        state = 5;
                        continue outer;
                    case  24 :
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  19 :
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  9 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  25 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 19, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  3 :
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  21 :
                        if (("ExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  20 :
                        _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  16 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  12 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  2 :
                        state = 5;
                        continue outer;
                    case  24 :
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 19, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  3 :
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  20 :
                        _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  16 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  2 :
                        state = 5;
                        continue outer;
                    case  24 :
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 19, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        state = 7;
                        continue outer;
                    case  3 :
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        state = 11;
                        continue outer;
                    case  20 :
                        _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  16 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            state = 8;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "Box");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, value));
                            return ;
                        case  22 :
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 23, value));
                            return ;
                        case  14 :
                            state = 15;
                            continue outer;
                        case  2 :
                            state = 5;
                            continue outer;
                        case  24 :
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 25, value));
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "Box");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 10, value));
                            return ;
                        case  5 :
                            state = 6;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  18 :
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 19, value)));
                            return ;
                        case  6 :
                            state = 7;
                            continue outer;
                        case  3 :
                            _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 4, value)));
                            return ;
                        case  11 :
                            state = 14;
                            continue outer;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  8 :
                            state = 11;
                            continue outer;
                        case  20 :
                            _InheritedClass = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 21, value));
                            return ;
                        case  16 :
                            attIdx = context.getAttribute("", "Box");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
