//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class StateImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermImpl
    implements net.sourceforge.czt.oz.jaxb.gen.State, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.oz.jaxb.gen.SecondaryDecl _SecondaryDecl;
    protected net.sourceforge.czt.oz.jaxb.gen.PrimaryDecl _PrimaryDecl;
    protected java.lang.String _Box;
    protected net.sourceforge.czt.z.jaxb.gen.Pred _Pred;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.State.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.SecondaryDecl getSecondaryDecl() {
        return _SecondaryDecl;
    }

    public void setSecondaryDecl(net.sourceforge.czt.oz.jaxb.gen.SecondaryDecl value) {
        _SecondaryDecl = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.PrimaryDecl getPrimaryDecl() {
        return _PrimaryDecl;
    }

    public void setPrimaryDecl(net.sourceforge.czt.oz.jaxb.gen.PrimaryDecl value) {
        _PrimaryDecl = value;
    }

    public java.lang.String getBox() {
        if (_Box == null) {
            return "SchBox";
        } else {
            return _Box;
        }
    }

    public void setBox(java.lang.String value) {
        _Box = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Pred getPred() {
        return _Pred;
    }

    public void setPred(net.sourceforge.czt.z.jaxb.gen.Pred value) {
        _Pred = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_PrimaryDecl!= null) {
            if (_PrimaryDecl instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PrimaryDecl), "PrimaryDecl");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "PrimaryDecl");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PrimaryDecl), "PrimaryDecl");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PrimaryDecl), "PrimaryDecl");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _PrimaryDecl), "PrimaryDecl");
                context.endElement();
            }
        }
        if (_SecondaryDecl!= null) {
            if (_SecondaryDecl instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SecondaryDecl), "SecondaryDecl");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "SecondaryDecl");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SecondaryDecl), "SecondaryDecl");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SecondaryDecl), "SecondaryDecl");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SecondaryDecl), "SecondaryDecl");
                context.endElement();
            }
        }
        if (_Pred!= null) {
            if (_Pred instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pred), "Pred");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Pred");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred), "Pred");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred), "Pred");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pred), "Pred");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Box!= null) {
            context.startAttribute("", "Box");
            try {
                context.text(((java.lang.String) _Box), "Box");
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.circus.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
        if (_PrimaryDecl!= null) {
            if (_PrimaryDecl instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _PrimaryDecl), "PrimaryDecl");
            }
        }
        if (_SecondaryDecl!= null) {
            if (_SecondaryDecl instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SecondaryDecl), "SecondaryDecl");
            }
        }
        if (_Pred!= null) {
            if (_Pred instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred), "Pred");
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_PrimaryDecl!= null) {
            if (_PrimaryDecl instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _PrimaryDecl), "PrimaryDecl");
            }
        }
        if (_SecondaryDecl!= null) {
            if (_SecondaryDecl instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SecondaryDecl), "SecondaryDecl");
            }
        }
        if (_Pred!= null) {
            if (_Pred instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred), "Pred");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.State.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq"
+"\u0000~\u0000\tppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010ps"
+"r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\t"
+"nameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression"
+"$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.z.jaxb."
+"gen.Term.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-eleme"
+"ntssq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000"
+"\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv"
+".datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp://"
+"czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\u000bq\u0000~\u0000\u0010p"
+"\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00002net"
+".sourceforge.czt.oz.jaxb.gen.PrimaryDeclElementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000"
+"~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+net.sourceforge.czt.oz.jaxb.gen.PrimaryDec"
+"lq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bPrimaryDec"
+"lt\u0000#http://czt.sourceforge.net/object-zq\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\tq\u0000"
+"~\u0000\u0010psq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq"
+"\u0000~\u0000 sq\u0000~\u0000!t\u00004net.sourceforge.czt.oz.jaxb.gen.SecondaryDeclEl"
+"ementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010p"
+"sq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.oz.j"
+"axb.gen.SecondaryDeclq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000"
+" sq\u0000~\u0000!t\u0000\rSecondaryDeclq\u0000~\u0000Uq\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq"
+"\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq"
+"\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq"
+"\u0000~\u0000\u0010psq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001e"
+"q\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesPredq\u0000~\u0000"
+"%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000"
+" sq\u0000~\u0000!t\u0000)net.sourceforge.czt.z.jaxb.gen.ForallPredq\u0000~\u0000%sq\u0000~"
+"\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~"
+"\u0000!t\u0000%net.sourceforge.czt.z.jaxb.gen.OrPredq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000"
+"sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net."
+"sourceforge.czt.z.jaxb.gen.TruePredq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tp"
+"psq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourcef"
+"orge.czt.z.jaxb.gen.MemPredElementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tpp"
+"sq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourcefo"
+"rge.czt.z.jaxb.gen.IffPredq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000"
+"~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00003net.sourceforge.czt."
+"zpatt.jaxb.gen.JokerPredElementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000"
+"~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge"
+".czt.z.jaxb.gen.AndPredElementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~"
+"\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge."
+"czt.z.jaxb.gen.ExistsPredq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~"
+"\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.czt.z"
+".jaxb.gen.Exists1Predq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jax"
+"b.gen.NegPredElementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb"
+".gen.ExprPredElementq\u0000~\u0000%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourceforge.czt.z.jaxb"
+".gen.FalsePredq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psq\u0000~\u0000(ppsr\u0000)com."
+"sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000f"
+"Ljava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValu"
+"eConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Data"
+"TypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlag"
+"L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fco"
+"ncreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacet"
+"Nameq\u0000~\u0000\"xq\u0000~\u0000/q\u0000~\u0000@t\u0000\u0003Boxsr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005\u0000\u0000sr\u0000#com.sun.msv.da"
+"tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000-q\u0000~\u00002t"
+"\u0000\u0006stringq\u0000~\u0000\u00d1\u0001q\u0000~\u0000\u00d3t\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8"
+"\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0005AxBoxt\u0000\u0006SchBoxt\u0000\u0007OmitBoxxq\u0000~\u00008sq\u0000~\u00009"
+"q\u0000~\u0000\u00cfq\u0000~\u0000@sq\u0000~\u0000!t\u0000\u0003Boxt\u0000\u0000q\u0000~\u0000 sr\u0000\"com.sun.msv.grammar.Expres"
+"sionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expres"
+"sionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool"
+"$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lc"
+"om/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000A\u0001pq\u0000~\u0000kq\u0000~\u0000oq\u0000~\u0000fq\u0000~"
+"\u0000Qq\u0000~\u0000&q\u0000~\u0000mq\u0000~\u0000qq\u0000~\u0000\bq\u0000~\u0000\u00bbq\u0000~\u0000\u00b5q\u0000~\u0000\u00afq\u0000~\u0000\u00a9q\u0000~\u0000\u00a3q\u0000~\u0000\u009dq\u0000~\u0000\u0097q\u0000~"
+"\u0000\u0091q\u0000~\u0000\u008bq\u0000~\u0000\u0085q\u0000~\u0000\u007fq\u0000~\u0000yq\u0000~\u0000bq\u0000~\u0000Zq\u0000~\u0000Mq\u0000~\u0000Eq\u0000~\u0000\u0016q\u0000~\u0000\u00c1q\u0000~\u0000sq\u0000~"
+"\u0000\u0006q\u0000~\u0000tq\u0000~\u0000\nq\u0000~\u0000lq\u0000~\u0000uq\u0000~\u0000\u00baq\u0000~\u0000\u00b4q\u0000~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000\u009cq\u0000~\u0000\u0096q\u0000~"
+"\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000aq\u0000~\u0000Yq\u0000~\u0000rq\u0000~\u0000Lq\u0000~\u0000Dq\u0000~\u0000\u0013q\u0000~\u0000_q\u0000~"
+"\u0000Jq\u0000~\u0000\u0011q\u0000~\u0000vq\u0000~\u0000\u00c0q\u0000~\u0000\u00c5q\u0000~\u0000nq\u0000~\u0000Wq\u0000~\u0000Bq\u0000~\u0000pq\u0000~\u0000\u0005q\u0000~\u0000\u0007q\u0000~\u0000Vq\u0000~"
+"\u0000Aq\u0000~\u0000jx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  5 :
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  10 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 11, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HeadDeclList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerDeclList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZDeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  8 :
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  12 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HeadDeclList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerDeclList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZDeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Box = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  10 :
                        _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 11, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  13 :
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  11 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  7 :
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  12 :
                        _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  10 :
                        _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 11, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  12 :
                        _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  10 :
                        _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 11, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  9 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  12 :
                        _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  5 :
                            state = 8;
                            continue outer;
                        case  10 :
                            _Pred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 11, value));
                            return ;
                        case  6 :
                            _SecondaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryDeclImpl.class), 7, value));
                            return ;
                        case  8 :
                            state = 9;
                            continue outer;
                        case  9 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Box");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  4 :
                            state = 5;
                            continue outer;
                        case  12 :
                            _PrimaryDecl = ((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.PrimaryDeclImpl.class), 13, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
