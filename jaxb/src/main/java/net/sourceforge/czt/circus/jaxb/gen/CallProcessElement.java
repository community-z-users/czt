//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.circus.jaxb.gen;


/**
 * Java content class for CallProcess element declaration.
 * <p>The following schema fragment specifies the expected content contained within this java content object. (defined at file:/research/czt/trunk/jaxb/build/xsd/Circus.xsd line 459)
 * <pre>&lt;p xmlns:Z="http://czt.sourceforge.net/zml" xmlns:CIRCUS="http://czt.sourceforge.net/circus" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:gnast="http://czt.sourceforge.net/gnast" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb">
 * Circus process reference call. In other words, it permits a name to be a process.
 * That is, it contains a reference name to lookup the process definition.
 * &lt;/p></pre>
 * 
 * <pre>&lt;p xmlns:Z="http://czt.sourceforge.net/zml" xmlns:CIRCUS="http://czt.sourceforge.net/circus" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:gnast="http://czt.sourceforge.net/gnast" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb">
 * Moreover, it contains two list of expressions and an attribute defining the kind of call this
 * reference is related too. The first list is related to generic actuals, whereas the second list is
 * related to actual parameters or indexes.
 * An empty list of generic actuals means that refering process is not generic.
 * An empty list of expressions means a simple process call of the grammar rules
 * &lt;b>N, N[Expr+]&lt;/b>,
 * where
 * &lt;b>N&lt;/b> is the process name.
 * If the list of expressions is not empty, then the
 * &lt;code>CallKind&lt;/code> attribute defines if this is an indexed
 * process instantiation call, a parameterised process call.
 * It represents the grammar rules:
 * &lt;b>N(Expr+), N lfloor Expr+ rfloor&lt;/b>
 * &lt;/p></pre>
 * 
 * <pre>&lt;p xmlns:Z="http://czt.sourceforge.net/zml" xmlns:CIRCUS="http://czt.sourceforge.net/circus" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:gnast="http://czt.sourceforge.net/gnast" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb">
 * The invariant is as follows:  TODO: THIS COMMENT NEEDS UPDATE (See Parser.xml)
 * 
 * &lt;ul>
 * &lt;li>N        = nonempty name, empty generic actuals, and empty parameters/indexes. &lt;/li>
 * &lt;li>N[Expr+] = nonempty name, nonempty generic actuals, and empty parameters/indexes. &lt;/li>
 * &lt;li>N(Expr+) = empty generic actuals, nonempty parameters.
 * Internal name for on-the-fly, user given name for previously declared action.
 * The call type defines whether the expressions are actual parameters or indexes.&lt;/li>
 * &lt;li>N[Expr+](Expr+) = nonempty generic actuals, nonempty parameters.
 * Internal name for on-the-fly, user given name for previously declared action.
 * The call type defines whether the expressions are actual parameters or indexes.&lt;/li>
 * &lt;/ul>
 * The case for parameterised and indexed process is not present in the grammar.
 * The default value of CallKind is
 * &lt;b>Param&lt;/b> and need to be inspected only for the case where the
 * second expression list demands attention.&lt;/p></pre>
 * 
 * 
 * 
 * <p>
 * <pre>
 * &lt;element name="CallProcess" type="{http://czt.sourceforge.net/circus}CallProcess"/>
 * </pre>
 * 
 */
public interface CallProcessElement
    extends javax.xml.bind.Element, net.sourceforge.czt.circus.jaxb.gen.CallProcess
{


}
