//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class LetVarActionImpl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl
    implements net.sourceforge.czt.circus.jaxb.gen.LetVarAction, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.DeclList _DeclList;
    protected net.sourceforge.czt.z.jaxb.gen.ExprList _ExprList;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.LetVarAction.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclList getDeclList() {
        return _DeclList;
    }

    public void setDeclList(net.sourceforge.czt.z.jaxb.gen.DeclList value) {
        _DeclList = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.ExprList getExprList() {
        return _ExprList;
    }

    public void setExprList(net.sourceforge.czt.z.jaxb.gen.ExprList value) {
        _ExprList = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_DeclList instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclList), "DeclList");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclList), "DeclList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclList), "DeclList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclList), "DeclList");
            context.endElement();
        }
        if (_ExprList instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExprList), "ExprList");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "ExprList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExprList), "ExprList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExprList), "ExprList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ExprList), "ExprList");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_DeclList instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclList), "DeclList");
        }
        if (_ExprList instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ExprList), "ExprList");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_DeclList instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclList), "DeclList");
        }
        if (_ExprList instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ExprList), "ExprList");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.LetVarAction.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000,net.sourceforge.czt.z.jaxb.gen.Term"
+".AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatyp"
+"e.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Built"
+"inAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concrete"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet\u0000"
+".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://w"
+"ww.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
+"mmar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000\u001b"
+"com.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fna"
+"mespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.org"
+"/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sour"
+"ceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~"
+"\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~"
+"\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u00006net.sourceforge.czt.circus.jaxb.gen.LetMuActionElem"
+"entq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt.circus.jaxb.gen.IntChoiceAc"
+"tionIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000<net.sourceforge.czt.circus.jaxb.gen.Assignm"
+"entCommandElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000<net.sourceforge.czt.circus.jaxb.g"
+"en.ParallelActionIteElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000:net.sourceforge.czt.cir"
+"cus.jaxb.gen.PrefixingActionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000"
+"~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge"
+".czt.circus.jaxb.gen.ExtChoiceActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq"
+"\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000;net.sourceforg"
+"e.czt.circus.jaxb.gen.IfGuardedCommandElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000s"
+"q\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.s"
+"ourceforge.czt.circus.jaxb.gen.SeqActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00005net.source"
+"forge.czt.circus.jaxb.gen.HideActionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000"
+"~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sou"
+"rceforge.czt.circus.jaxb.gen.ChaosActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.source"
+"forge.czt.circus.jaxb.gen.MuActionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourc"
+"eforge.czt.circus.jaxb.gen.StopActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bpps"
+"q\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00009net.sourcefor"
+"ge.czt.circus.jaxb.gen.ParallelActionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq"
+"\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000Enet.so"
+"urceforge.czt.circus.jaxb.gen.AlphabetisedParallelActionElem"
+"entq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.circus.jaxb.gen.ParamAction"
+"q\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000"
+"\u001fsq\u0000~\u0000 t\u0000=net.sourceforge.czt.circus.jaxb.gen.SubstitutionAc"
+"tionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.circus.jaxb.gen.Ski"
+"pActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.circus.jaxb.gen.IntChoi"
+"ceActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00005net.sourceforge.czt.circus.jaxb.gen.CallAc"
+"tionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt.circus.jaxb.gen.Ext"
+"ChoiceActionIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.circus.jaxb.gen"
+".InterleaveActionq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00009net.sourceforge.czt.circus.jaxb.g"
+"en.VarDeclCommandElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00008net.sourceforge.czt.circus"
+".jaxb.gen.GuardedActionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt."
+"circus.jaxb.gen.LetVarActionElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000"
+"~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000:net.sourceforge"
+".czt.circus.jaxb.gen.SpecStmtCommandElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000"
+"~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00008net.sou"
+"rceforge.czt.circus.jaxb.gen.SchExprActionElementq\u0000~\u0000$sq\u0000~\u0000\n"
+"pp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000An"
+"et.sourceforge.czt.circus.jaxb.gen.AlphabetisedParallelActio"
+"nIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt.circus.jaxb.gen.Interleave"
+"ActionIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.circus.jaxb.gen.SeqAc"
+"tionIteq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt.zpatt.j"
+"axb.gen.HeadDeclListElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt.zpa"
+"tt.jaxb.gen.JokerDeclListElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.cz"
+"t.z.jaxb.gen.ZDeclListElementq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bpps"
+"q\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourcefor"
+"ge.czt.zpatt.jaxb.gen.JokerExprListElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~"
+"\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sour"
+"ceforge.czt.z.jaxb.gen.ZExprListElementq\u0000~\u0000$sr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000k\u0001pq\u0000~\u0000"
+"Pq\u0000~\u0000Tq\u0000~\u0000%q\u0000~\u0000\u0007q\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000Vq\u0000~\u0000\u00c4q\u0000~\u0000\u00beq\u0000~\u0000\u00b8q\u0000~\u0000\u00b2q\u0000~\u0000\u00acq\u0000~\u0000"
+"\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000~\u0000\u0094q\u0000~\u0000\u008eq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000~\u0000|q\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000jq\u0000~\u0000dq\u0000~\u0000"
+"^q\u0000~\u0000\u0015q\u0000~\u0000Xq\u0000~\u0000Oq\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0000\u00d6q\u0000~\u0000\u00dcq\u0000~\u0000\u00e2q\u0000~\u0000Fq\u0000~\u0000\u00e8q\u0000~\u0000Yq\u0000~\u0000"
+"Eq\u0000~\u0000\u00eeq\u0000~\u0000\u00f4q\u0000~\u0000Cq\u0000~\u0000\u00faq\u0000~\u0001\u0000q\u0000~\u0001\u0006q\u0000~\u0000\tq\u0000~\u0001\u000eq\u0000~\u0001\u0014q\u0000~\u0001\u001aq\u0000~\u0001!q\u0000~\u0001"
+"\'q\u0000~\u0000Qq\u0000~\u0000Hq\u0000~\u0000Zq\u0000~\u0001\nq\u0000~\u0000\u00c3q\u0000~\u0000\u00bdq\u0000~\u0000\u00b7q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000"
+"\u0099q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~\u0000uq\u0000~\u0000Wq\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000"
+"\u0012q\u0000~\u0000\u0010q\u0000~\u0000[q\u0000~\u0000\u00c9q\u0000~\u0000\u00cfq\u0000~\u0000\u00d5q\u0000~\u0000\u00dbq\u0000~\u0000\u00e1q\u0000~\u0000\u00e7q\u0000~\u0000\u00edq\u0000~\u0000\u00f3q\u0000~\u0000\u00f9q\u0000~\u0000"
+"\u00ffq\u0000~\u0001\u0005q\u0000~\u0000Sq\u0000~\u0001\rq\u0000~\u0001\u0013q\u0000~\u0001\u000bq\u0000~\u0001\u0019q\u0000~\u0001 q\u0000~\u0001&q\u0000~\u0001\u001eq\u0000~\u0000Jq\u0000~\u0000Uq\u0000~\u0000"
+"Iq\u0000~\u0000\u0006q\u0000~\u0000@q\u0000~\u0000Gq\u0000~\u0000\u0005q\u0000~\u0000Lq\u0000~\u0000Mq\u0000~\u0000Nq\u0000~\u0000Aq\u0000~\u0000Kq\u0000~\u0000Bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _ExprList = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ZExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ZExprListElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("ExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetMuAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AssignmentCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PrefixingAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IfGuardedCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChaosAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("StopAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AlphabetisedParallelAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParamAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SubstitutionAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SkipAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CallAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("VarDeclCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("GuardedAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetVarAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SpecStmtCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExprAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AlphabetisedParallelActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqActionIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CircusAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CircusAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("HeadDeclList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _DeclList = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.HeadDeclListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.HeadDeclListElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerDeclList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _DeclList = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerDeclListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerDeclListElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ZDeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.ZDeclListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ZDeclListElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclListElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("ExprList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        if (("DeclList" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  6 :
                        _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.LetActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.LetVarActionImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            _ExprList = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprListImpl.class), 4, value));
                            return ;
                        case  6 :
                            _DeclList = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclListImpl.class), 7, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
