//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class ProcessParaImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl
    implements net.sourceforge.czt.circus.jaxb.gen.ProcessPara, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.DeclName _ProcessName;
    protected net.sourceforge.czt.z.jaxb.gen.DeclNameList _GenFormals;
    protected net.sourceforge.czt.circus.jaxb.gen.CircusProcess _CircusProcess;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.ProcessPara.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getProcessName() {
        return _ProcessName;
    }

    public void setProcessName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _ProcessName = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclNameList getGenFormals() {
        return _GenFormals;
    }

    public void setGenFormals(net.sourceforge.czt.z.jaxb.gen.DeclNameList value) {
        _GenFormals = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.CircusProcess getCircusProcess() {
        return _CircusProcess;
    }

    public void setCircusProcess(net.sourceforge.czt.circus.jaxb.gen.CircusProcess value) {
        _CircusProcess = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_ProcessName instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
            context.endElement();
        }
        context.startElement("http://czt.sourceforge.net/circus", "GenFormals");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GenFormals), "GenFormals");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GenFormals), "GenFormals");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _GenFormals), "GenFormals");
        context.endElement();
        if (_CircusProcess instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CircusProcess), "CircusProcess");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "CircusProcess");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CircusProcess), "CircusProcess");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CircusProcess), "CircusProcess");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CircusProcess), "CircusProcess");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_ProcessName instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
        }
        if (_CircusProcess instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CircusProcess), "CircusProcess");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_ProcessName instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
        }
        if (_CircusProcess instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CircusProcess), "CircusProcess");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.ProcessPara.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000,net.sourceforge.czt.z.jaxb.gen.Term"
+".AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
+"dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
+"Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatyp"
+"e.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Built"
+"inAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concrete"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet\u0000"
+".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://w"
+"ww.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd"
+".WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
+"mmar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000\u001b"
+"com.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fna"
+"mespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.org"
+"/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sour"
+"ceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.z.jaxb."
+"gen.ZDeclNameElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt.zpatt.jaxb"
+".gen.JokerDeclNameElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~"
+"\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sour"
+"ceforge.czt.z.jaxb.gen.DeclNameListq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fp"
+"q\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\nGenFormalst\u0000!http://czt.sourceforge."
+"net/circussq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq"
+"\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq"
+"\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.circus.jaxb.gen.IntCh"
+"oiceProcessq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00008net.sourceforge.czt.circus.jaxb.gen.Int"
+"erleaveProcessIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000Bnet.sourceforge.czt.circus.jaxb.g"
+"en.AlphabetisedParallelProcessIdxq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000"
+"\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.c"
+"zt.circus.jaxb.gen.ExtChoiceProcessIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourcefo"
+"rge.czt.circus.jaxb.gen.BasicProcessElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000"
+"~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000Bnet.sou"
+"rceforge.czt.circus.jaxb.gen.AlphabetisedParallelProcessIteq"
+"\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u00002net.sourceforge.czt.circus.jaxb.gen.IndexedProcessq"
+"\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u00008net.sourceforge.czt.circus.jaxb.gen.InterleaveProce"
+"ssIdxq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000"
+"\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00005net.sourceforge.czt.circus.jaxb.gen.Interleav"
+"eProcessq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt.circus.jaxb.gen.HidePr"
+"ocessElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.circus.jaxb.gen.Se"
+"qProcessIdxq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.circus.jaxb.gen.Seq"
+"ProcessIteq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000:net.sourceforge.czt.circus.jaxb.gen.Para"
+"llelProcessElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.circus.jaxb."
+"gen.ExtChoiceProcessq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt.circus.jax"
+"b.gen.CallProcessElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00008net.sourceforge.czt.circus"
+".jaxb.gen.RenameProcessElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000Fnet.sourceforge.czt."
+"circus.jaxb.gen.AlphabetisedParallelProcessElementq\u0000~\u0000$sq\u0000~\u0000"
+"\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000"
+"net.sourceforge.czt.circus.jaxb.gen.ParamProcessq\u0000~\u0000$sq\u0000~\u0000\np"
+"p\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.ne"
+"t.sourceforge.czt.circus.jaxb.gen.SeqProcessq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq"
+"\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.so"
+"urceforge.czt.circus.jaxb.gen.IntChoiceProcessIdxq\u0000~\u0000$sq\u0000~\u0000\n"
+"pp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007n"
+"et.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessIteq\u0000~\u0000$s"
+"q\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u00007net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessIdxq"
+"\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u0000=net.sourceforge.czt.circus.jaxb.gen.ParallelProcess"
+"IdxElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000=net.sourceforge.czt.circus.jaxb.gen.Para"
+"llelProcessIteElementq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.Expression"
+"Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"
+"Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"
+"sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/s"
+"un/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000X\u0001pq\u0000~\u0000eq\u0000~\u0000iq\u0000~\u0000Uq\u0000~\u0000%q\u0000"
+"~\u0000gq\u0000~\u0000kq\u0000~\u0000\u00c1q\u0000~\u0000\u00bbq\u0000~\u0000\u00b5q\u0000~\u0000\u00afq\u0000~\u0000\u00a9q\u0000~\u0000\u00a3q\u0000~\u0000\u009dq\u0000~\u0000\u0097q\u0000~\u0000\u0091q\u0000~\u0000\u008bq\u0000"
+"~\u0000\u0085q\u0000~\u0000\u007fq\u0000~\u0000yq\u0000~\u0000sq\u0000~\u0000Qq\u0000~\u0000Iq\u0000~\u0000Cq\u0000~\u0000\u0015q\u0000~\u0000\u00c7q\u0000~\u0000mq\u0000~\u0000dq\u0000~\u0000\u00cdq\u0000"
+"~\u0000\u00d3q\u0000~\u0000\u00d9q\u0000~\u0000\u00dfq\u0000~\u0000\u00e5q\u0000~\u0000\u00ebq\u0000~\u0000\u00f1q\u0000~\u0000nq\u0000~\u0000\u00f7q\u0000~\u0000[q\u0000~\u0000\u00fdq\u0000~\u0000Zq\u0000~\u0000\u0007q\u0000"
+"~\u0000\tq\u0000~\u0000fq\u0000~\u0000]q\u0000~\u0000oq\u0000~\u0000\u00c0q\u0000~\u0000\u00baq\u0000~\u0000\u00b4q\u0000~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000\u009cq\u0000~\u0000\u0096q\u0000"
+"~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000rq\u0000~\u0000lq\u0000~\u0000Pq\u0000~\u0000Hq\u0000~\u0000Bq\u0000~\u0000\u0012q\u0000~\u0000Nq\u0000"
+"~\u0000\u0010q\u0000~\u0000pq\u0000~\u0000@q\u0000~\u0000\u00c6q\u0000~\u0000\u00ccq\u0000~\u0000\u00d2q\u0000~\u0000\u00d8q\u0000~\u0000\u00deq\u0000~\u0000\u00e4q\u0000~\u0000\u00eaq\u0000~\u0000\u00f0q\u0000~\u0000\u00f6q\u0000"
+"~\u0000\u00fcq\u0000~\u0000hq\u0000~\u0000\u0005q\u0000~\u0000_q\u0000~\u0000jq\u0000~\u0000^q\u0000~\u0000\\q\u0000~\u0000aq\u0000~\u0000\u0006q\u0000~\u0000bq\u0000~\u0000cq\u0000~\u0000`x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 10, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("ZDeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.ZDeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ZDeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerDeclName" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _ProcessName = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerDeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerDeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        if (("IntChoiceProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcessIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessIteImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessIteImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AlphabetisedParallelProcessIdx" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.AlphabetisedParallelProcessIdxImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.AlphabetisedParallelProcessIdxImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcessIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessIteImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessIteImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BasicProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.BasicProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AlphabetisedParallelProcessIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.AlphabetisedParallelProcessIteImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.AlphabetisedParallelProcessIteImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IndexedProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcessIdx" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessIdxImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessIdxImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcessIdx" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessIdxImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessIdxImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcessIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessIteImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessIteImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CallProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AlphabetisedParallelProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.AlphabetisedParallelProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.AlphabetisedParallelProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParamProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParamProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParamProcessImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcessIdx" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessIdxImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessIdxImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcessIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessIteImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessIteImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcessIdx" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessIdxImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessIdxImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcessIdx" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessIdxElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessIdxElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcessIte" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessIteElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessIteElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CircusProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("CircusProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  2 :
                        if (("GenFormals" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        if (("CircusProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("GenFormals" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 10, value));
                            return ;
                        case  3 :
                            _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 4, value));
                            return ;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            _CircusProcess = ((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.CircusProcessImpl.class), 8, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
