//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.06.26 at 02:10:37 PM NZST 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class ProcessSignatureImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermImpl
    implements net.sourceforge.czt.circus.jaxb.gen.ProcessSignature, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.DeclName _ProcessName;
    protected net.sourceforge.czt.z.jaxb.gen.DeclNameList _GenFormals;
    protected net.sourceforge.czt.z.jaxb.gen.Signature _ParamOrIndexes;
    protected java.lang.String _Kind;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.ProcessSignature.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getProcessName() {
        return _ProcessName;
    }

    public void setProcessName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _ProcessName = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclNameList getGenFormals() {
        return _GenFormals;
    }

    public void setGenFormals(net.sourceforge.czt.z.jaxb.gen.DeclNameList value) {
        _GenFormals = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Signature getParamOrIndexes() {
        return _ParamOrIndexes;
    }

    public void setParamOrIndexes(net.sourceforge.czt.z.jaxb.gen.Signature value) {
        _ParamOrIndexes = value;
    }

    public java.lang.String getKind() {
        if (_Kind == null) {
            return "Parameterised";
        } else {
            return _Kind;
        }
    }

    public void setKind(java.lang.String value) {
        _Kind = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/circus", "ProcessName");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProcessName), "ProcessName");
        context.endElement();
        context.startElement("http://czt.sourceforge.net/circus", "GenFormals");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GenFormals), "GenFormals");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GenFormals), "GenFormals");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _GenFormals), "GenFormals");
        context.endElement();
        if (_ParamOrIndexes!= null) {
            context.startElement("http://czt.sourceforge.net/circus", "ParamOrIndexes");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ParamOrIndexes), "ParamOrIndexes");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ParamOrIndexes), "ParamOrIndexes");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ParamOrIndexes), "ParamOrIndexes");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Kind!= null) {
            context.startAttribute("", "Kind");
            try {
                context.text(((java.lang.String) _Kind), "Kind");
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.circus.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.ProcessSignature.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq"
+"\u0000~\u0000\tppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010ps"
+"r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\t"
+"nameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression"
+"$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.z.jaxb."
+"gen.Term.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-eleme"
+"ntssq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000"
+"\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv"
+".datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.x"
+"sd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd."
+"ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
+"peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhit"
+"eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 "
+"http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000"
+"~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000"
+"~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://ww"
+"w.w3.org/2001/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp://"
+"czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\t"
+"ppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.source"
+"forge.czt.z.jaxb.gen.DeclNameq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q"
+"\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bProcessNamet\u0000!http://czt.sourceforge.net/c"
+"ircussq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+net.sourceforge.czt.z.jaxb.gen.De"
+"clNameListq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\nG"
+"enFormalsq\u0000~\u0000Msq\u0000~\u0000\tppsq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tpp"
+"sq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourcefo"
+"rge.czt.z.jaxb.gen.Signatureq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q\u0000"
+"~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000eParamOrIndexesq\u0000~\u0000Mq\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010"
+"psq\u0000~\u0000(ppsr\u0000)com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd"
+".DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012n"
+"eedValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSD"
+"atatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Conc"
+"reteType;L\u0000\tfacetNameq\u0000~\u0000\"xq\u0000~\u0000/q\u0000~\u0000Mt\u0000\u000bProcessKindsr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u00005\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\r"
+"isAlwaysValidxq\u0000~\u0000-q\u0000~\u00002t\u0000\u0006stringq\u0000~\u0000s\u0001q\u0000~\u0000ut\u0000\u000benumerationsr"
+"\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0002t\u0000\u0007Indexedt\u0000\rP"
+"arameterisedxq\u0000~\u00008sq\u0000~\u00009q\u0000~\u0000qq\u0000~\u0000Msq\u0000~\u0000!t\u0000\u0004Kindt\u0000\u0000q\u0000~\u0000 sr\u0000\"c"
+"om.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lc"
+"om/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.m"
+"sv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rst"
+"reamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;x"
+"p\u0000\u0000\u0000\u0017\u0001pq\u0000~\u0000\u0006q\u0000~\u0000\u0016q\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000_q\u0000~\u0000gq\u0000~\u0000&q\u0000~\u0000Iq\u0000~\u0000Vq\u0000~\u0000cq\u0000~"
+"\u0000\bq\u0000~\u0000\u0011q\u0000~\u0000Bq\u0000~\u0000Oq\u0000~\u0000\\q\u0000~\u0000\nq\u0000~\u0000Zq\u0000~\u0000\u0013q\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000^q\u0000~\u0000\u0005q\u0000~"
+"\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "Kind");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  11 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameTypePair" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameTypePair" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  10 :
                        if (("ParamOrIndexes" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  4 :
                        if (("ProcessName" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("GenFormals" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Kind = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "Kind");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  12 :
                        if (("ParamOrIndexes" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  13 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("ProcessName" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  11 :
                        _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  9 :
                        if (("GenFormals" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  8 :
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Kind" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  8 :
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        attIdx = context.getAttribute("", "Kind");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  2 :
                        if (("Kind" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  8 :
                        _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            attIdx = context.getAttribute("", "Kind");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  5 :
                            _ProcessName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, value));
                            return ;
                        case  13 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText1(value);
                            return ;
                        case  11 :
                            _ParamOrIndexes = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 12, value));
                            return ;
                        case  10 :
                            state = 13;
                            continue outer;
                        case  8 :
                            _GenFormals = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameListImpl.class), 9, value));
                            return ;
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ProcessSignatureImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
