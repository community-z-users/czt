<?xml version="1.0" encoding="utf-8"?>
<xsl:transform xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                version="1.0">

  <xsl:output method="text"/>
  <xsl:strip-space elements="*"/>

  <xsl:template match="/">
    <xsl:text>
/**
Copyright 2011, Leo Freitas
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/
package net.sourceforge.czt.zeves.util;

import net.sourceforge.czt.z.util.*;

/**
 * An interface for commonly used Z pattern characters.
 *
 * @author generated by Gnast XSL script zeveschar2stringclass.xsl
 */
public interface ZEvesString extends ZString
{
</xsl:text>
<xsl:apply-templates select="*"/>
  String ZPROOF = ZPROOFCHAR;
  String ZPROOFSECTION = ZPROOFSECTIONCHAR;
  String ZPROOFDOLLAR = ZPROOFDOLLARCHAR;
  String DISABLEDTHMTAG = DISABLEDTHMTAGCHAR;
  String DISABLEDDEFTAG = DISABLEDDEFTAGCHAR;
  
/*
PROOFWORDBEGIN  = "apply" | "back" | "cases" | "conjunctive" | "disjunctive" | "equality" |
                  "instantiate" | "invoke" | "next" | "prenex" | "prove" | "oops" | "rearrange" |
                  "reduce" | "rewrite" | "simplify" | "sorry" | "split" | "trivial" | "try" | "use" | "with"

PROOFWORDMIDDLE = "by" | "enabled" | "expression" | "disabled" | "lemma" |
                  "normalization" | "predicate" | "substitute" | "to"

PROOFCMDBEGIN   = "check" | "declare" | "help" | "parent" | "print" | "quit" |
                  "read" | "reset" | "retry" | "theorems" | "undo" |
                  "zsection" | "ztags"

PROOFCMDMIDDLE  = "about" | "back" | "declaration" | "formula" | "history" | "proof" |
                  "script" | "status" | "summary" | "syntax" | "to" | "through"
*/

  String APPLY       = "apply";
  String BACK        = "back";
  String CASES       = "cases";
  String CONJUNCTIVE = "conjunctive";
  String DISJUNCTIVE = "disjunctive";
  String EQUALITY    = "equality";
  String INSTANTIATE = "instantiate";
  String INVOKE      = "invoke";
  String NEXT        = "next";
  String PRENEX      = "prenex";
  String PROVE       = "prove";
  String REARRANGE   = "rearrange";
  String REDUCE      = "reduce";
  String REWRITE     = "rewrite";
  String SIMPLIFY    = "simplify";
  String TRIVIAL     = "trivial";
  String TRY         = "try";
  String SPLIT       = "split";
  String USE         = "use";
  String WITH        = "with";
  String SORRY       = "sorry";
  String OOPS        = "oops";
  
  String BY          = "by";
  String ENABLED     = "enabled";
  String EXPRESSION  = "expression";
  String DISABLED    = "disabled";
  String LEMMA		 = "lemma";
  String NORMALIZATION = "normalization";
  String PREDICATE   = "predicate";
  String SUBSTITUTE  = "substitute";
  String TO			 = "to";

  String CHECK       = "check";
  String DECLARE     = "declare";
  String HELP        = "help";
  String PARENT      = "parent";
  String PRINT       = "print";
  String QUIT        = "quit";
  String READ        = "read";
  String RESET       = "reset";
  String RETRY       = "retry";
  String THEOREMS    = "theorems";
  String UNDO        = "undo";
  String ZSECTION    = "zsection";
  String ZTAGS       = "ztags";
  
  String ABOUT		 = "about";
  //String BACK			  = "back"; // already above!
  String DECLARATION = "declaration";
  String FORMULA	 = "formula";
  String HISTORY	 = "history";
  String PROOF		 = "proof";
  String SCRIPT		 = "script";
  String STATUS		 = "status";
  String SUMMARY	 = "summary";
  String ZEVESYNTAX= "syntax";
  String THROUGH	 = "through";
  //String TO		   = "to"; already above
  
  String ZPROOFCOMMANDSEP = "; "; // semicolon followed by space
  
  String THMREPLACEMENT = ":=";
  String QNTINSTANTIATION = "==";
  String THMRULE = "rule";
  String THMGRULE = "grule";
  String THMFRULE = "frule";
  String THMAXIOM = "axiom";

  String BAG = "bag";

  // Names from theorems added by ZEves
  String DECLARATION_PART = "declarationPart";
  String SCHEMA_MEMBER = "member";
  String THETA_MEMBER = "thetaMember";
  String SCHEMA_BIND_SELECT = "select";
  String THETAS_EQUAL = "thetasEqual";
  String SCHEMA_INSET = "inSet";
  String THETA_INSET = "thetaInSet";
  String SCHEMA_SET_IN_POWERSET = "setInPowerSet";

  String FREETYPE_INJECTIVE = "injective";
  String FREETYPE_EXPANSION = "expansion";
  String FREETYPE_INDUCTION = "induction";
  String FREETYPE_MEMBER    = "member";

  String DOMAIN_CHECK = "domainCheck";
}
<xsl:text>
</xsl:text>
  </xsl:template>

  <xsl:template match="*[@regexp]"/>

  <xsl:template match="char">
    <xsl:text>

  /**
   * </xsl:text><xsl:value-of select="@description"/><xsl:text>.
   */
  String </xsl:text>
    <xsl:value-of select="@id"/>
    <xsl:text> = String.valueOf(ZEvesChar.</xsl:text>
    <xsl:value-of select="@id"/>
    <xsl:text>);</xsl:text>
  </xsl:template>

</xsl:transform>
