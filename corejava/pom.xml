<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>net.sourceforge.czt</groupId>
    <artifactId>czt</artifactId>
    <version>1.6-SNAPSHOT</version>
  </parent>
  <artifactId>corejava</artifactId>
  <packaging>jar</packaging>
  <version>2.1.5-SNAPSHOT</version>
  <name>CZT Corejava</name>
  <description>
    Provides AST classes for Z and Z extensions.
  </description>
  <dependencies>
    <dependency>
      <groupId>${czt.groupId}</groupId>
      <artifactId>jaxb</artifactId>
    </dependency>
    <dependency>
      <groupId>${czt.groupId}</groupId>
      <artifactId>zml</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <!-- Put GnAST plugin first since xml generation ought to generate to ./gnast as well -->
      <plugin>
        <groupId>net.sourceforge.czt</groupId>
        <artifactId>maven-gnast-plugin</artifactId>
        <version>1.6-SNAPSHOT</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
              <gnastdir>${basedir}/../gnast</gnastdir>
              <addAstFinaliser>true</addAstFinaliser>
              <gnastVerbose>true</gnastVerbose>
            </configuration>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-trax</artifactId>
            <version>1.6.5</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <configuration>
              <tasks>
                <!-- Change the dirs for XXXChar/String to make it easier for IDEs to find classes -->
                <property name="build.xml.dir" location="target/generated-sources/gnast"/>
                <property name="xml.dir" location="src/main/resources/xml"/>
                <property name="xsl.dir" location="src/main/resources/xsl"/>
                <property name="build.compiler" value="extJavac"/>
                <xslt
                  in="${xml.dir}/zchar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/z/util/ZChar.java"
                  style="${xsl.dir}/zchar2class.xsl"/>
                <xslt
                  in="${xml.dir}/zchar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/z/util/ZString.java"
                  style="${xsl.dir}/zchar2stringclass.xsl"/>
                <xslt
                  in="${xml.dir}/ozchar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/oz/util/OzChar.java"
                  style="${xsl.dir}/ozchar2class.xsl"/>
                <xslt
                  in="${xml.dir}/ozchar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/oz/util/OzString.java"
                  style="${xsl.dir}/ozchar2stringclass.xsl"/>
                <xslt
                  in="${xml.dir}/circuschar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/circus/util/CircusChar.java"
                  style="${xsl.dir}/circuschar2class.xsl"/>
                <xslt
                  in="${xml.dir}/circuschar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/circus/util/CircusString.java"
                  style="${xsl.dir}/circuschar2stringclass.xsl"/>
                <xslt
                  in="${xml.dir}/zpattchar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/zpatt/util/ZPattChar.java"
                  style="${xsl.dir}/zpattchar2class.xsl"/>
                <xslt
                  in="${xml.dir}/zpattchar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/zpatt/util/ZPattString.java"
                  style="${xsl.dir}/zpattchar2stringclass.xsl"/>
                <xslt
                  in="${xml.dir}/zeveschar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/zeves/util/ZEvesChar.java"
                  style="${xsl.dir}/zeveschar2class.xsl"/>
                <xslt
                  in="${xml.dir}/zeveschar.xml"
                  out="${build.xml.dir}/net/sourceforge/czt/zeves/util/ZEvesString.java"
                  style="${xsl.dir}/zeveschar2stringclass.xsl"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
