<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>net.sourceforge.czt</groupId>
    <artifactId>corejava-parent</artifactId>
    <version>1.6-SNAPSHOT</version>
  </parent>

  <artifactId>corejava-z</artifactId>
  <packaging>jar</packaging>

  <name>CZT Corejava Z</name>
  <description>
    Provides AST classes for Z.
  </description>

  <properties>
    <dialect>z</dialect>
    <dialectCaps>Z</dialectCaps>
    <zml.schema.name>Z.xsd</zml.schema.name>
    <zml.schema.namespace>http://czt.sourceforge.net/zml</zml.schema.namespace>
    <char.src.file>${dialect}char.xml</char.src.file>
    <char.xsl>${xsl.dir}/${dialect}char2class.xsl</char.xsl>
    <char.string.xsl>${xsl.dir}/${dialect}char2stringclass.xsl</char.string.xsl>
    <char.out.file>net/sourceforge/czt/${dialect}/util/${dialectCaps}Char.java</char.out.file>
    <char.string.out.file>net/sourceforge/czt/${dialect}/util/${dialectCaps}String.java</char.string.out.file>
    <gnast.res.src.dir>${project.basedir}/src/main/resources/vm/gnast</gnast.res.src.dir>
    <gnast.res.tgt.dir>${project.basedir}/target/generated-sources/gnast/net/sourceforge/czt/z/ast</gnast.res.tgt.dir>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>zml</artifactId>
      <version>${project.version}</version>
      <scope>test</scope> 
      <!-- jhr, should be compile (or no) scope? 
           See https://maven.apache.org/pom.html#Dependencies -->
    </dependency>
    <!-- Comet --> 
    <dependency>
      <groupId>tech.tablesaw</groupId>
      <artifactId>tablesaw-core</artifactId>
      <version>0.42.0</version>
    </dependency>
    <dependency>
      <groupId>com.smartesting.comet</groupId>
      <artifactId>javaclient</artifactId>
      <version>0.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>2.0.0-alpha7</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.0-alpha7</version>
    </dependency>
  </dependencies>

  <!-- jhr, see https://maven.apache.org/pom.html#build-settings -->
  <build>
 
    <pluginManagement>
      <plugins>
        <!-- jhr, fix missing (in help:effective-pom) gnast-maven-plugin Goal by 
           naming gnast-maven-plugin within pluginManagement. See comments in 
           corejava parent -->
        <plugin>
          <groupId>${czt.dev.groupId}</groupId>
          <artifactId>gnast-maven-plugin</artifactId>
        </plugin>
      </plugins>
    </pluginManagement>     
     
    <plugins>
      <!-- jhr, copy src/main/resources/vm/gnast/* to target before running
           gnast. Works but makes no difference as it is the src directory
           named in parent pom gnast-maven-plugin templates - ->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-gnast-resources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->

      <plugin>
        <groupId>${czt.dev.groupId}</groupId>
        <artifactId>gnast-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-ast-and-visitors</id>  <!-- jhr (search for in maven build log) -->
            <configuration>
              <targetNamespace>${zml.schema.namespace}</targetNamespace>
              <verbose>true</verbose> <!-- jhr (override setting in corejava/pom.xml) -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>xml-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-chars</id>
            <configuration>
              <transformationSets>
                <transformationSet>
                  <includes>
                    <include>${char.src.file}</include>
                  </includes>
                  <fileMappers>
                    <fileMapper>
                      <targetName>${char.out.file}</targetName>
                    </fileMapper>
                  </fileMappers>
                  <stylesheet>${char.xsl}</stylesheet>
                </transformationSet>
                <transformationSet>
                  <includes>
                    <include>${char.src.file}</include>
                  </includes>
                  <fileMappers>
                    <fileMapper>
                      <targetName>${char.string.out.file}</targetName>
                    </fileMapper>
                  </fileMappers>
                  <stylesheet>${char.string.xsl}</stylesheet>
                </transformationSet>
              </transformationSets>
            </configuration>
          </execution>

          <execution>
            <id>annotate-jaxb</id>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>

      <plugin>
        <groupId>org.jvnet.jaxb2.maven2</groupId>
        <artifactId>maven-jaxb2-plugin</artifactId>
        <dependencies>
          <!-- jhr Solve build error: required class javax/xml/bind/JAXBException
               https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception
               https://stackoverflow.com/questions/52502189/java-11-package-javax-xml-bind-does-not-exist

               CZT sources build with JAXBException which is no longer part of the 
               JDK SE11 distribution. Add dependencies to solve JAXBException.

               CZT codes with javax xml binding, which has been superceded by
               the Jakarta xml binding after Java 9.
               Need to replace deprecated modules with JAVA EE APIs
               Jakarta EE 8 (version 2.3.x) uses previous javax interface;
               whereas EE 9 (version 3.0.0) uses new jakarta api requiring 
               source changes:
                 import javax.xml.bind becomes import jakarta.xml.bind
               jaxb.api.version etc. are parameterised in the top level corejava
               See mvnrepository.com for the version numbering

               Generates ~/.m2/repository/org/jvnet/jaxb2/maven2/maven-jaxb2-plugins/0.8.2/
          -->

          <!-- jhr, the old API
          <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
          </dependency>
          -->
          <!-- the new API, See mvnrepository.com for the version numbering -->
          <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>${jaxb.api.version}</version>
          </dependency>

          <!-- the old runtime
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.3.0</version>
          </dependency>
          -->
          <!-- the new runtime, See mvnrepository.com for the version numbering -->
          <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <version>${jaxb.api.version}</version>
          </dependency>

          <!-- the old core
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>2.3.0</version>
          </dependency>
          -->
          <!-- the new core, See mvnrepository.com for the version numbering -->
          <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-core</artifactId>
            <version>${jaxb.core.version}</version>
          </dependency>

          <!-- the old XJC tool
          <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>2.3.0</version>
          </dependency>
          -->
          <!-- the new XJC tool, See mvnrepository.com for the version numbering -->
          <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-xjc</artifactId>
            <version>${jaxb.core.version}</version>
          </dependency>

          <!-- other build dependencies for Java 11 target
               See mvnrepository.com for the version numbering -->
          <dependency>
            <groupId>javax.activation</groupId>
            <artifactId>activation</artifactId>
            <version>${javax.activation.version}</version>
          </dependency>
        <!-- jhr end -->
        </dependencies>

        <executions>
          <execution>
            <id>generate-jaxb</id>
            <configuration>
              <schemaIncludes>
                <include>${zml.schema.name}</include>
              </schemaIncludes>
              <!-- jhr, here be where JAXB classes generated by XJC get located 
                   including those for the gnast visitor pattern construction
                   ...\corejava\corejava-z\target\generated-sources\jaxb\net\sourceforge\czt\z\jaxb\gen\
              -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <executions>
          <execution>
            <id>clean-extra-jaxb</id>
            <configuration>
              <filesets>
                <fileset>
                  <excludes>
                    <exclude>net/sourceforge/czt/${dialect}/jaxb/gen/*</exclude>
                  </excludes>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
      </plugin>

    </plugins>
  </build>
</project>
