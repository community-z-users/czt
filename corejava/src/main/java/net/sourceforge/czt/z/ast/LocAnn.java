
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.z.ast;

import net.sourceforge.czt.base.ast.*;

/**
 * Location annotations define the source-code location of a construct.
        The Line and Col numbers, if present, refer to an identifying
        token within the construct, such as the equality token of an
	equality predicate, or the opening brace of a set comprehension.
	The Line and Col numbers start from (0,0), so may need adjusting
	to give correct positions in various editors.
	The Start number, if present, gives the position of the start 
	of the construct from the beginning of the document (0 means
	the first character of the document), and the Length number gives
	the number of characters from the beginning of the construct to 
	the end.  The Length may be zero if the construct exists in
	one markup, but is not visible in another markup.
 *
 * @author Gnast version 0.1
 */
public interface LocAnn extends Ann
{

  /**
   * Returns the Loc element.
   *
   * @return the Loc element.
   */
  String getLoc();


  /**
   * Sets the Loc element.
   *
   * @param loc   the Loc element.
   * @see #getLoc
   */
  void setLoc(String loc);

  /**
   * Returns the Line element.
   *
   * @return the Line element.
   */
  java.math.BigInteger getLine();


  /**
   * Sets the Line element.
   *
   * @param line   the Line element.
   * @see #getLine
   */
  void setLine(java.math.BigInteger line);

  /**
   * Returns the Col element.
   *
   * @return the Col element.
   */
  java.math.BigInteger getCol();


  /**
   * Sets the Col element.
   *
   * @param col   the Col element.
   * @see #getCol
   */
  void setCol(java.math.BigInteger col);

  /**
   * Returns the Start element.
   *
   * @return the Start element.
   */
  java.math.BigInteger getStart();


  /**
   * Sets the Start element.
   *
   * @param start   the Start element.
   * @see #getStart
   */
  void setStart(java.math.BigInteger start);

  /**
   * Returns the Length element.
   *
   * @return the Length element.
   */
  java.math.BigInteger getLength();


  /**
   * Sets the Length element.
   *
   * @param length   the Length element.
   * @see #getLength
   */
  void setLength(java.math.BigInteger length);
  java.math.BigInteger getEnd();
  void setLine(int line);
  void setCol(int col);
  void setStart(int start);
  void setLength(int length);
}
