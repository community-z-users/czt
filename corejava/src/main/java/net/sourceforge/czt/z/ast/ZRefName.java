
/******************************************************************************
DO NOT EDIT THIS FILE!  THIS FILE WAS GENERATED BY GNAST
FROM THE TEMPLATE FILE AstInterface.vm.
ANY MODIFICATIONS TO THIS FILE WILL BE LOST UPON REGENERATION.

-------------------------------------------------------------------------------

Copyright 2003, 2004, 2005 Mark Utting
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
******************************************************************************/

package net.sourceforge.czt.z.ast;

import net.sourceforge.czt.base.ast.*;

/**
 * A Z referencing name.
        The Decl attribute of type IDREF points to the matching declaring name
        (DeclName), which may not be the nearest enclosing one.
 *
 * @author Gnast version 0.1
 */
public interface ZRefName extends RefName
{

  /**
   * Returns the Word element.
   *
   * @return the Word element.
   */
  String getWord();


  /**
   * Sets the Word element.
   *
   * @param word   the Word element.
   * @see #getWord
   */
  void setWord(String word);

  /**
   * Returns the StrokeList element.
   *
   * @return the StrokeList element.
   */
  StrokeList getStrokeList();


  /**
   * Sets the StrokeList element.
   *
   * @param strokeList   the StrokeList element.
   * @see #getStrokeList
   */
  void setStrokeList(StrokeList strokeList);

  /**
   * Returns the Decl element.
   *
   * @return the Decl element.
   */
  ZDeclName getDecl();


  /**
   * Sets the Decl element.
   *
   * @param decl   the Decl element.
   * @see #getDecl
   */
  void setDecl(ZDeclName decl);

  /**
   * Returns an OperatorName, if this name is an operator name,
   * <code>null</code> otherwise.
   */
  net.sourceforge.czt.z.util.OperatorName getOperatorName();

  /**
   * This is a convenience method.
   * It returns the ZStrokeList if ZStrokeList is an instance of
   * ZStrokeList and throws an UnsupportedAstClassException otherwise.
   */
  ZStrokeList getZStrokeList();
}
