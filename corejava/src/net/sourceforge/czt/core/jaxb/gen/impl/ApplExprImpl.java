//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.20 at 09:36:24 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class ApplExprImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl
    implements net.sourceforge.czt.core.jaxb.gen.ApplExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    protected java.lang.Boolean _Mixfix;
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.ApplExpr.class);
    }

    public java.lang.Boolean getMixfix() {
        if (_Mixfix == null) {
            return net.sourceforge.czt.core.jaxb.CztDatatypeConverter.parseBoolean(com.sun.xml.bind.DatatypeConverterImpl.installHook("false"));
        } else {
            return _Mixfix;
        }
    }

    public void setMixfix(java.lang.Boolean value) {
        _Mixfix = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeElementBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Mixfix!= null) {
            context.startAttribute("", "Mixfix");
            try {
                context.text(net.sourceforge.czt.core.jaxb.CztDatatypeConverter.printBoolean(((java.lang.Boolean) _Mixfix)));
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.core.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributeBody(context);
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.ApplExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp3\u0016H\u00a4ppsq\u0000~\u0000\u00000\u00d9\u0001\u0096ppsq\u0000~\u0000\u0000\u0018"
+"\u00cc\u00b2\u0013ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00c0b\u0090p"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00c0b\u0085sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00c0bdq\u0000~\u0000\u000fpsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00c0baq\u0000~"
+"\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u00000net.sourceforge.czt.core.jaxb.gen.TermA.An"
+"nsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ft\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\b\u0018\fO~ppsq\u0000~\u0000"
+"\b\u0017K\u00ed\u0002ppsq\u0000~\u0000\b\u0016\u008b\u008a\u0086ppsq\u0000~\u0000\b\u0015\u00cb(\nppsq\u0000~\u0000\b\u0015\n\u00c5\u008eppsq\u0000~\u0000\b\u0014Jc\u0012ppsq\u0000~\u0000"
+"\b\u0013\u008a\u0000\u0096ppsq\u0000~\u0000\b\u0012\u00c9\u009e\u001appsq\u0000~\u0000\b\u0012\t;\u009eppsq\u0000~\u0000\b\u0011H\u00d9\"ppsq\u0000~\u0000\b\u0010\u0088v\u00a6ppsq\u0000~\u0000"
+"\b\u000f\u00c8\u0014*ppsq\u0000~\u0000\b\u000f\u0007\u00b1\u00aeppsq\u0000~\u0000\b\u000eGO2ppsq\u0000~\u0000\b\r\u0086\u00ec\u00b6ppsq\u0000~\u0000\b\f\u00c6\u008a:ppsq\u0000~\u0000"
+"\b\f\u0006\'\u00beppsq\u0000~\u0000\b\u000bE\u00c5Bppsq\u0000~\u0000\b\n\u0085b\u00c6ppsq\u0000~\u0000\b\t\u00c5\u0000Jppsq\u0000~\u0000\b\t\u0004\u009d\u00ceppsq\u0000~\u0000"
+"\b\bD;Rppsq\u0000~\u0000\b\u0007\u0083\u00d8\u00d6ppsq\u0000~\u0000\b\u0006\u00c3vZppsq\u0000~\u0000\b\u0006\u0003\u0013\u00deppsq\u0000~\u0000\b\u0005B\u00b1bppsq\u0000~\u0000"
+"\b\u0004\u0082N\u00e6ppsq\u0000~\u0000\b\u0003\u00c1\u00ecjppsq\u0000~\u0000\b\u0003\u0001\u0089\u00eeppsq\u0000~\u0000\b\u0002A\'rppsq\u0000~\u0000\b\u0001\u0080\u00c4\u00f6ppsq\u0000~\u0000"
+"\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExp"
+"rElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015"
+"\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.core.j"
+"axb.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012"
+"\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.source"
+"forge.czt.core.jaxb.gen.HideExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000"
+"~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0b"
+"zpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.core.jaxb.gen.PowerExprq\u0000~\u0000#"
+"sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.PreEx"
+"prq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.core.jaxb.ge"
+"n.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge"
+".czt.core.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000"
+"\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"5net.sourceforge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000#s"
+"q\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb.gen.CompEx"
+"prq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb.ge"
+"n.PipeExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core"
+".jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge."
+"czt.core.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000"
+"\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourc"
+"eforge.czt.core.jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bop"
+"psq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net"
+".sourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000"
+"sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\n"
+"\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprEle"
+"mentq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0ba"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb."
+"gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.co"
+"re.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0b"
+"dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourcefor"
+"ge.czt.core.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq"
+"\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.so"
+"urceforge.czt.core.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~"
+"\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000-net.sourceforge.czt.core.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\n"
+"\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jaxb.gen.ForallExprq"
+"\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jaxb.gen.L"
+"ambdaExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core."
+"jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.cz"
+"t.core.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0"
+"bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourcefo"
+"rge.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0b"
+"oppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001n"
+"et.sourceforge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000"
+"\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen.CondExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.core.jaxb.g"
+"en.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.c"
+"zt.core.jaxb.gen.RefExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bop"
+"psq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net"
+".sourceforge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\b\u0018\fO~"
+"ppsq\u0000~\u0000\b\u0017K\u00ed\u0002ppsq\u0000~\u0000\b\u0016\u008b\u008a\u0086ppsq\u0000~\u0000\b\u0015\u00cb(\nppsq\u0000~\u0000\b\u0015\n\u00c5\u008eppsq\u0000~\u0000\b\u0014Jc\u0012"
+"ppsq\u0000~\u0000\b\u0013\u008a\u0000\u0096ppsq\u0000~\u0000\b\u0012\u00c9\u009e\u001appsq\u0000~\u0000\b\u0012\t;\u009eppsq\u0000~\u0000\b\u0011H\u00d9\"ppsq\u0000~\u0000\b\u0010\u0088v\u00a6"
+"ppsq\u0000~\u0000\b\u000f\u00c8\u0014*ppsq\u0000~\u0000\b\u000f\u0007\u00b1\u00aeppsq\u0000~\u0000\b\u000eGO2ppsq\u0000~\u0000\b\r\u0086\u00ec\u00b6ppsq\u0000~\u0000\b\f\u00c6\u008a:"
+"ppsq\u0000~\u0000\b\f\u0006\'\u00beppsq\u0000~\u0000\b\u000bE\u00c5Bppsq\u0000~\u0000\b\n\u0085b\u00c6ppsq\u0000~\u0000\b\t\u00c5\u0000Jppsq\u0000~\u0000\b\t\u0004\u009d\u00ce"
+"ppsq\u0000~\u0000\b\bD;Rppsq\u0000~\u0000\b\u0007\u0083\u00d8\u00d6ppsq\u0000~\u0000\b\u0006\u00c3vZppsq\u0000~\u0000\b\u0006\u0003\u0013\u00deppsq\u0000~\u0000\b\u0005B\u00b1b"
+"ppsq\u0000~\u0000\b\u0004\u0082N\u00e6ppsq\u0000~\u0000\b\u0003\u00c1\u00ecjppsq\u0000~\u0000\b\u0003\u0001\u0089\u00eeppsq\u0000~\u0000\b\u0002A\'rppsq\u0000~\u0000\b\u0001\u0080\u00c4\u00f6"
+"ppsq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000"
+"\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000Qq\u0000~\u0000#sq"
+"\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000Wq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0b"
+"dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000]q\u0000~\u0000#sq\u0000~\u0000\n"
+"\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000cq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000iq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bz"
+"pp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000oq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000uq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000s"
+"q\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001fq\u0000~\u0000{q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0081q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000"
+"\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"q\u0000~\u0000\u0087q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0b"
+"aq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u008dq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0b"
+"oppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000"
+"\u0093q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0099q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bopps"
+"q\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u009fq\u0000~"
+"\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00a5q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000"
+"\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00abq\u0000~\u0000#sq"
+"\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00b1q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0b"
+"dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00b7q\u0000~\u0000#sq\u0000~\u0000\n"
+"\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00bdq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c3q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bz"
+"pp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c9q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00cfq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000s"
+"q\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001fq\u0000~\u0000\u00d5q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00dbq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000"
+"\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"q\u0000~\u0000\u00e1q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0b"
+"aq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00e7q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0b"
+"oppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000"
+"\u00edq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00f3q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bopps"
+"q\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00f9q\u0000~"
+"\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00ffq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000"
+"\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001\u0005q\u0000~\u0000#sq"
+"\u0000~\u0000\b\u0002=G\tppsq\u0000~\u0000\u0015\u0002=F\u00feq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000"
+"\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u0018\"Mppsr\u0000$com."
+"sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
+"atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
+"type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
+".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~"
+"\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
+"sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u0001\u00d2q\u0000~\u0001\u00d1sq\u0000~\u0000\u001ft\u0000\u0006M"
+"ixfixt\u0000\u0000q\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHa"
+"sh;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8"
+"\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u00de[\u0000\u0005tablet\u0000![Lcom/sun/"
+"msv/grammar/Expression;xp\u0000\u0000\u0000\u00c5\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar."
+"Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppppppq\u0000~\u0000:q\u0000~\u0001\u0019ppppppppppp"
+"q\u0000~\u0000-q\u0000~\u0001\fppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000>q\u0000~\u0001\u001d"
+"pppppppppppq\u0000~\u00001q\u0000~\u0001\u0010ppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppp"
+"pppppq\u0000~\u0001!q\u0000~\u0000Bpppppppppppq\u0000~\u00005q\u0000~\u0001\u0014pppppppppppq\u0000~\u0000(q\u0000~\u0001\u0007ppp"
+"ppq\u0000~\u0001@q\u0000~\u0001;q\u0000~\u00016q\u0000~\u00011q\u0000~\u0001,q\u0000~\u0001\'q\u0000~\u0001\u0002q\u0000~\u0000\u00fcq\u0000~\u0000\u00f6q\u0000~\u0000\u00f0q\u0000~\u0000\u00eaq\u0000~"
+"\u0001:q\u0000~\u00015q\u0000~\u00010q\u0000~\u0001+q\u0000~\u0001&q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00f5q\u0000~\u0000\u00efq\u0000~\u0000\u00e9q\u0000~\u0000\u00e3q\u0000~\u0000\u00e4q\u0000~"
+"\u0000\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u00d1q\u0000~\u0000\u00d2q\u0000~\u0000\u00cbq\u0000~\u0000\u00ccq\u0000~\u0000\u00c5q\u0000~\u0000\u00c6q\u0000~\u0000\u00bfq\u0000~\u0000\u00c0q\u0000~"
+"\u0000\u00b9q\u0000~\u0000\u00baq\u0000~\u0000\u00b3q\u0000~\u0000Hq\u0000~\u0000Nq\u0000~\u0000Tq\u0000~\u0000Zq\u0000~\u0000`q\u0000~\u0000fq\u0000~\u0000\tq\u0000~\u0000lq\u0000~\u0000rq\u0000~"
+"\u0000xq\u0000~\u0000,q\u0000~\u0000\u0011q\u0000~\u0000Gq\u0000~\u0000Mq\u0000~\u0000Sq\u0000~\u0000Yq\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~"
+"\u0000}q\u0000~\u0000\u0083q\u0000~\u00009q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000~q\u0000~\u0000\u0084q\u0000~"
+"\u0000\u008aq\u0000~\u0000\u0090q\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u0014q\u0000~\u0001?q\u0000~\u0001Eq\u0000~\u0001Dq\u0000~"
+"\u0001Jq\u0000~\u0001Iq\u0000~\u0001Oq\u0000~\u0001Nq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0001Yq\u0000~\u0000=q\u0000~\u0001\u001cq\u0000~\u0001Xq\u0000~\u0001^q\u0000~\u0001]q\u0000~"
+"\u0001cq\u0000~\u0001bq\u0000~\u0001hq\u0000~\u0001gq\u0000~\u0001\u0018q\u0000~\u0001mq\u0000~\u0001lq\u0000~\u0001rq\u0000~\u00000q\u0000~\u0001qq\u0000~\u0001wq\u0000~\u0001vq\u0000~"
+"\u0001|q\u0000~\u0001{q\u0000~\u0001\u0081q\u0000~\u0001\u0080q\u0000~\u0001\u0086q\u0000~\u0001\u0085q\u0000~\u0001\u008bq\u0000~\u0001\u008aq\u0000~\u0001\u0090q\u0000~\u0001\u008fq\u0000~\u0001\u0095q\u0000~\u0001\u0094q\u0000~"
+"\u0001\u000fq\u0000~\u0001\u009aq\u0000~\u0001\u0099q\u0000~\u0001\u009fq\u0000~\u0001\u009eq\u0000~\u0001\u00a4q\u0000~\u0001\u00a3q\u0000~\u0001\u00a9q\u0000~\u0001\u00a8q\u0000~\u0001\u000bq\u0000~\u0001\u00aeq\u0000~\u0001\u00adq\u0000~"
+"\u0001\u00b3q\u0000~\u0001\u00b2q\u0000~\u0001\u00b8q\u0000~\u0001\u00b7q\u0000~\u0001\u00bdq\u0000~\u0001\u00bcq\u0000~\u0001\u00c2q\u0000~\u0001\u00c1ppppppq\u0000~\u0000Aq\u0000~\u0001 ppppppp"
+"ppppq\u0000~\u00004q\u0000~\u0001\u0013pppppppppppq\u0000~\u0000\'q\u0000~\u0001\u0006ppppppppppppppppppppppppp"
+"q\u0000~\u0001\u00c5pq\u0000~\u0001$q\u0000~\u0000Epppppppppppq\u0000~\u00008q\u0000~\u0001\u0017pppppppppppq\u0000~\u0000+q\u0000~\u0001\npp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000<q\u0000~\u0001\u001bpppppppppppq"
+"\u0000~\u0000/q\u0000~\u0001\u000epppppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppq\u0000~\u0000@q\u0000"
+"~\u0001\u001fpppppppppppq\u0000~\u00003q\u0000~\u0001\u0012pppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000\u0007pppq\u0000~\u0001#q\u0000~\u0000Dpppppppppppq\u0000~\u00007q\u0000~\u0001\u0016pppppppppppq\u0000~\u0000*q\u0000~\u0001\t"
+"ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000;q\u0000~\u0001\u001apppppppppp"
+"pq\u0000~\u0000.q\u0000~\u0001\rppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000?q\u0000~\u0001"
+"\u001epppppppppppq\u0000~\u00002q\u0000~\u0001\u0011pppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0001\"q\u0000~\u0000Cpppppppppppq\u0000~\u00006q\u0000~\u0001\u0015pppppppppppq\u0000~\u0000)q\u0000~\u0001\bpppppp"
+"ppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Mixfix = net.sourceforge.czt.core.jaxb.CztDatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Mixfix" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Mixfix" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText0(value);
                            state = 2;
                            return ;
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.ApplExprImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Mixfix");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText0(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
