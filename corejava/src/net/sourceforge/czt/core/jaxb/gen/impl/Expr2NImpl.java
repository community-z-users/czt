//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class Expr2NImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl
    implements net.sourceforge.czt.core.jaxb.gen.Expr2N, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.Expr2N.class);
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeElementBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributeBody(context);
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.Expr2N.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp>\u0080\u007f\u00e9ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001|\u00f6\u00eeppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6"
+"\u00e3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00d8pp\u0000s"
+"q\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|"
+"\u00f6\u00c2q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0001|\u00f6\u00bfq\u0000~\u0000\rpsr\u00002com.sun.msv.gramm"
+"ar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f"
+"\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramm"
+"ar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
+"Namet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u00000net.so"
+"urceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun"
+".com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001dt\u0000\u0004Annst\u0000\u001ehttp://czt.sourc"
+"eforge.net/zmlq\u0000~\u0000\u001csq\u0000~\u0000\u0006=\u0003\u0088\u00f6ppsq\u0000~\u0000\u0010=\u0003\u0088\u00ebq\u0000~\u0000\rpsq\u0000~\u0000\u0006=\u0003\u0088\u00e8q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0006;\u0086\u0092\u000eq\u0000~\u0000\rpsq\u0000~\u0000\u0006:\t\u009b4q\u0000~\u0000\rpsq\u0000~\u0000\u00068\u008c\u00a4Zq\u0000~\u0000\rpsq\u0000~\u0000\u00067\u000f\u00ad"
+"\u0080q\u0000~\u0000\rpsq\u0000~\u0000\u00065\u0092\u00b6\u00a6q\u0000~\u0000\rpsq\u0000~\u0000\u00064\u0015\u00bf\u00ccq\u0000~\u0000\rpsq\u0000~\u0000\u00062\u0098\u00c8\u00f2q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u00061\u001b\u00d2\u0018q\u0000~\u0000\rpsq\u0000~\u0000\u0006/\u009e\u00db>q\u0000~\u0000\rpsq\u0000~\u0000\u0006.!\u00e4dq\u0000~\u0000\rpsq\u0000~\u0000\u0006,\u00a4\u00ed\u008aq\u0000~\u0000\rps"
+"q\u0000~\u0000\u0006+\'\u00f6\u00b0q\u0000~\u0000\rpsq\u0000~\u0000\u0006)\u00aa\u00ff\u00d6q\u0000~\u0000\rpsq\u0000~\u0000\u0006(.\b\u00fcq\u0000~\u0000\rpsq\u0000~\u0000\u0006&\u00b1\u0012\"q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0006%4\u001bHq\u0000~\u0000\rpsq\u0000~\u0000\u0006#\u00b7$nq\u0000~\u0000\rpsq\u0000~\u0000\u0006\":-\u0094q\u0000~\u0000\rpsq\u0000~\u0000\u0006 \u00bd6"
+"\u00baq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u001f@?\u00e0q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u001d\u00c3I\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u001cFR,q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0006\u001a\u00c9[Rq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0019Ldxq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0017\u00cfm\u009eq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0016Rv\u00c4q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0006\u0014\u00d5\u007f\u00eaq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0013X\u0089\u0010q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0011\u00db\u00926q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0010^\u009b\\q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0006\u000e\u00e1\u00a4\u0082q\u0000~\u0000\rpsq\u0000~\u0000\u0006\rd\u00ad\u00a8q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000b\u00e7\u00b6\u00ceq\u0000~\u0000\rpsq\u0000~\u0000\u0006\nj\u00bf"
+"\u00f4q\u0000~\u0000\rpsq\u0000~\u0000\u0006\b\u00ed\u00c9\u001aq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0007p\u00d2@q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0005\u00f3\u00dbfq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0006\u0004v\u00e4\u008cq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0002\u00f9\u00ed\u00b2q\u0000~\u0000\rpsq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~"
+"\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00003net.sour"
+"ceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000"
+"~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.PreExprq\u0000~\u0000!s"
+"q\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rp"
+"q\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.core.jaxb.gen.Or"
+"Exprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013"
+"\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.j"
+"axb.gen.IffExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge"
+".czt.core.jaxb.gen.Qnt1ExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~"
+"\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000"
+"\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.LetExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8"
+"q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.core.jaxb.gen.Exists1Expr"
+"q\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bf"
+"q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.sourceforge.czt.core.jaxb."
+"gen.NumExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|"
+"\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.sourcefo"
+"rge.czt.core.jaxb.gen.QntExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq"
+"\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000"
+"~\u0000\u001dt\u00001net.sourceforge.czt.core.jaxb.gen.SchExpr2Elementq\u0000~\u0000!"
+"sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\r"
+"pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.core.jaxb.gen.E"
+"xistsExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.c"
+"ore.jaxb.gen.BindExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.ne"
+"t.sourceforge.czt.core.jaxb.gen.Expr2Elementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q"
+"\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.sourceforge.czt.core.jaxb.gen.Expr0NElemen"
+"tq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6"
+"\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+net.sourceforge.czt.core.jaxb"
+".gen.PowerExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge."
+"czt.core.jaxb.gen.SetCompExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6"
+"\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00004n"
+"et.sourceforge.czt.core.jaxb.gen.BindSelExprElementq\u0000~\u0000!sq\u0000~"
+"\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.sourceforge.czt.core.jaxb.gen.Expr2"
+"NElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00002net.sourceforge.czt.co"
+"re.jaxb.gen.DecorExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-ne"
+"t.sourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000"
+"~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.core.jaxb.gen.CompExprq\u0000~\u0000!"
+"sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\r"
+"pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.core.jaxb.gen.F"
+"orallExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.c"
+"ore.jaxb.gen.ProdExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000"
+"\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourc"
+"eforge.czt.core.jaxb.gen.ProjExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000"
+"\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001d"
+"t\u0000(net.sourceforge.czt.core.jaxb.gen.MuExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000"
+"~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000!s"
+"q\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rp"
+"q\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.core.jaxb.gen.Ex"
+"pr1Elementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt."
+"core.jaxb.gen.PipeExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~"
+"\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sour"
+"ceforge.czt.core.jaxb.gen.ApplExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000"
+"\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.SetExprq\u0000~\u0000!sq\u0000"
+"~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000"
+"~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.core.jaxb.gen.Lamb"
+"daExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~"
+"\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00005net.sourceforge.czt.core"
+".jaxb.gen.TupleSelExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6"
+"\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)n"
+"et.sourceforge.czt.core.jaxb.gen.AndExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\r"
+"p\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001csq\u0000~\u0000\u001dt\u00003net.sourceforge.czt.core.jaxb.gen.RenameExprElemen"
+"tq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6"
+"\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.core.jaxb"
+".gen.CondExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010"
+"\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.source"
+"forge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000"
+"sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001cs"
+"q\u0000~\u0000\u001dt\u00002net.sourceforge.czt.core.jaxb.gen.ThetaExprElementq\u0000"
+"~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000"
+"~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.sourceforge.czt.core.jaxb.ge"
+"n.RefExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforg"
+"e.czt.core.jaxb.gen.HideExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000"
+"~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~"
+"\u0000\u001dt\u00004net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~"
+"\u0000!sq\u0000~\u0000\b\u0001|\u00f6\u00d8q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0010\u0001|\u00f6\u00c2q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+net.sourceforge.czt.core.jaxb.gen"
+".TupleExprq\u0000~\u0000!q\u0000~\u0000\u001csr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001F[\u0000\u0005tablet\u0000![Lc"
+"om/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0080\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.g"
+"rammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffppq\u0000~\u0000Mpppq\u0000~\u0000Jpppq\u0000~\u0000Gpp"
+"pq\u0000~\u0000Dpppq\u0000~\u0000Apppq\u0000~\u0000>pppq\u0000~\u0000;pppq\u0000~\u00008pppq\u0000~\u00005pppq\u0000~\u00002pppq\u0000~"
+"\u0000/pppq\u0000~\u0000,pppq\u0000~\u0000)pppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppq\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq"
+"\u0000~\u0001\u0005q\u0000~\u0000\u00ffq\u0000~\u0000\u00f9q\u0000~\u0000\u00f3q\u0000~\u0001(q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\nq\u0000~\u0001\u0004q\u0000~\u0000\u00feq"
+"\u0000~\u0000\u00f8q\u0000~\u0000\u00f2q\u0000~\u0000\u00ecq\u0000~\u0000\u00edq\u0000~\u0000\u00e6q\u0000~\u0000\u00e7q\u0000~\u0000\u00e0q\u0000~\u0000\u00e1q\u0000~\u0000\u00daq\u0000~\u0000\u00dbq\u0000~\u0000\u00d4q\u0000~\u0000\u00d5q"
+"\u0000~\u0000\u00ceq\u0000~\u0000\u00cfq\u0000~\u0000\u00c8q\u0000~\u0000\u00c9q\u0000~\u0000\u00c2q\u0000~\u0000\u00c3q\u0000~\u0000\u00bcq\u0000~\u0000Fq\u0000~\u0000Iq\u0000~\u0000Lq\u0000~\u0000\u0012q\u0000~\u0000Qq"
+"\u0000~\u0000Wq\u0000~\u0000\u0007q\u0000~\u0000]q\u0000~\u0000cq\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u000fq\u0000~\u0000Pq\u0000~\u0000Vq\u0000~\u0000\\q"
+"\u0000~\u0000bq\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q"
+"\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000\u00abq\u0000~\u0000\u00b1q"
+"\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000~\u0000Cq\u0000~\u0000@q\u0000~\u0000=q\u0000~\u0000:q\u0000~\u00007q\u0000~\u00004q\u0000~\u00001q\u0000~\u0000.q\u0000~\u0000+q\u0000~\u0001.q"
+"\u0000~\u00015q\u0000~\u00014q\u0000~\u0001;q\u0000~\u0001:q\u0000~\u0000(q\u0000~\u0001Aq\u0000~\u0001@pppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppq\u0000~\u0000Npppq\u0000~\u0000Kpppq\u0000~\u0000Hpppq"
+"\u0000~\u0000Epppq\u0000~\u0000Bpppq\u0000~\u0000?pppq\u0000~\u0000<pppq\u0000~\u00009pppq\u0000~\u00006pppq\u0000~\u00003pppq\u0000~\u00000"
+"pppq\u0000~\u0000-pppq\u0000~\u0000*pppq\u0000~\u0000\'ppq\u0000~\u0000&ppppppppppq\u0000~\u0000%pppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
