//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class TupleExprImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl
    implements net.sourceforge.czt.core.jaxb.gen.TupleExpr, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "TupleExpr";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.TupleExpr.class);
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "TupleExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "TupleExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.TupleExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp>\u0080\u007f\u00f4p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004>\u0080\u007f\u00e9ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001|"
+"\u00f6\u00eeppsq\u0000~\u0000\u0000\u0001|\u00f6\u00e3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000s"
+"q\u0000~\u0000\u0000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.OneOrMoreExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003exp"
+"q\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0001|\u00f6\u00bfq\u0000~\u0000\u000epsr\u00002com."
+"sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com."
+"sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq"
+"\u0000~\u0000\u001at\u00000net.sourceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehtt"
+"p://czt.sourceforge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\n=\u0003\u0088\u00f6ppsq\u0000~\u0000\u0011=\u0003\u0088\u00ebq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\n=\u0003\u0088\u00e8q\u0000~\u0000\u000epsq\u0000~\u0000\n;\u0086\u0092\u000eq\u0000~\u0000\u000epsq\u0000~\u0000\n:\t\u009b4q\u0000~\u0000\u000epsq\u0000~\u0000\n8\u008c\u00a4Zq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\n7\u000f\u00ad\u0080q\u0000~\u0000\u000epsq\u0000~\u0000\n5\u0092\u00b6\u00a6q\u0000~\u0000\u000epsq\u0000~\u0000\n4\u0015\u00bf\u00ccq\u0000~\u0000\u000epsq\u0000~\u0000\n2\u0098"
+"\u00c8\u00f2q\u0000~\u0000\u000epsq\u0000~\u0000\n1\u001b\u00d2\u0018q\u0000~\u0000\u000epsq\u0000~\u0000\n/\u009e\u00db>q\u0000~\u0000\u000epsq\u0000~\u0000\n.!\u00e4dq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\n,\u00a4\u00ed\u008aq\u0000~\u0000\u000epsq\u0000~\u0000\n+\'\u00f6\u00b0q\u0000~\u0000\u000epsq\u0000~\u0000\n)\u00aa\u00ff\u00d6q\u0000~\u0000\u000epsq\u0000~\u0000\n(.\b\u00fcq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\n&\u00b1\u0012\"q\u0000~\u0000\u000epsq\u0000~\u0000\n%4\u001bHq\u0000~\u0000\u000epsq\u0000~\u0000\n#\u00b7$nq\u0000~\u0000\u000epsq\u0000~\u0000\n\":-\u0094q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\n \u00bd6\u00baq\u0000~\u0000\u000epsq\u0000~\u0000\n\u001f@?\u00e0q\u0000~\u0000\u000epsq\u0000~\u0000\n\u001d\u00c3I\u0006q\u0000~\u0000\u000epsq\u0000~\u0000\n\u001cF"
+"R,q\u0000~\u0000\u000epsq\u0000~\u0000\n\u001a\u00c9[Rq\u0000~\u0000\u000epsq\u0000~\u0000\n\u0019Ldxq\u0000~\u0000\u000epsq\u0000~\u0000\n\u0017\u00cfm\u009eq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\n\u0016Rv\u00c4q\u0000~\u0000\u000epsq\u0000~\u0000\n\u0014\u00d5\u007f\u00eaq\u0000~\u0000\u000epsq\u0000~\u0000\n\u0013X\u0089\u0010q\u0000~\u0000\u000epsq\u0000~\u0000\n\u0011\u00db\u00926q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\n\u0010^\u009b\\q\u0000~\u0000\u000epsq\u0000~\u0000\n\u000e\u00e1\u00a4\u0082q\u0000~\u0000\u000epsq\u0000~\u0000\n\rd\u00ad\u00a8q\u0000~\u0000\u000epsq\u0000~\u0000\n\u000b\u00e7\u00b6\u00ceq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\n\nj\u00bf\u00f4q\u0000~\u0000\u000epsq\u0000~\u0000\n\b\u00ed\u00c9\u001aq\u0000~\u0000\u000epsq\u0000~\u0000\n\u0007p\u00d2@q\u0000~\u0000\u000epsq\u0000~\u0000\n\u0005\u00f3"
+"\u00dbfq\u0000~\u0000\u000epsq\u0000~\u0000\n\u0004v\u00e4\u008cq\u0000~\u0000\u000epsq\u0000~\u0000\n\u0002\u00f9\u00ed\u00b2q\u0000~\u0000\u000epsq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000"
+"~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000"
+"\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen."
+"PreExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.cor"
+"e.jaxb.gen.OrExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6"
+"\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourcefor"
+"ge.czt.core.jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001ne"
+"t.sourceforge.czt.core.jaxb.gen.Qnt1ExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|"
+"\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.LetExprq\u0000"
+"~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.core.jaxb.ge"
+"n.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.c"
+"zt.core.jaxb.gen.NumExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001"
+"|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+"0net.sourceforge.czt.core.jaxb.gen.QntExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000"
+"\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.SchExpr"
+"2Elementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.co"
+"re.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~"
+"\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sour"
+"ceforge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000"
+"\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.core.jaxb.gen.Expr2Elementq\u0000~"
+"\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.core.jaxb.gen"
+".Expr0NElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge."
+"czt.core.jaxb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdp"
+"psq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net"
+".sourceforge.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~"
+"\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExprEle"
+"mentq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014"
+"\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.core.j"
+"axb.gen.Expr2NElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000"
+"\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourc"
+"eforge.czt.core.jaxb.gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000"
+"\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000"
+"\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen."
+"CompExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.co"
+"re.jaxb.gen.ForallExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~"
+"\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sour"
+"ceforge.czt.core.jaxb.gen.ProdExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~"
+"\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6"
+"\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.core.jaxb.gen.MuExprq\u0000~\u0000"
+"\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen."
+"NegExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.cor"
+"e.jaxb.gen.Expr1Elementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000"
+"~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sou"
+"rceforge.czt.core.jaxb.gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000"
+"~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprElementq\u0000~\u0000\"s"
+"q\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.Se"
+"tExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core."
+"jaxb.gen.LambdaExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001"
+"|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005net.sourcef"
+"orge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~"
+"\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.AndExprq\u0000~\u0000\"sq"
+"\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.core.jaxb.gen.Ren"
+"ameExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge."
+"czt.core.jaxb.gen.CondExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000"
+"\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u00000net.sourceforge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000\"sq\u0000~"
+"\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core.jaxb.gen.Theta"
+"ExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt"
+".core.jaxb.gen.RefExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6"
+"\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001n"
+"et.sourceforge.czt.core.jaxb.gen.HideExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001"
+"|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.tcoz.jaxb.gen.ChannelE"
+"xprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt."
+"core.jaxb.gen.TupleExprq\u0000~\u0000\"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\tTupleExprq\u0000~\u0000%sr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tt"
+"hresholdL\u0000\u0006parentq\u0000~\u0001I[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expre"
+"ssion;xp\u0000\u0000\u0000\u0080\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad"
+"\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffppq\u0000~\u0000Npppq\u0000~\u0000Kpppq\u0000~\u0000Hpppq\u0000~\u0000Epppq\u0000~\u0000Bpppq\u0000~\u0000?pp"
+"pq\u0000~\u0000<pppq\u0000~\u00009pppq\u0000~\u00006pppq\u0000~\u00003pppq\u0000~\u00000pppq\u0000~\u0000-pppq\u0000~\u0000*pppppp"
+"ppppppppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0000\u00faq\u0000~\u0000\u00f4q\u0000~\u0001)"
+"q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0000\u00ffq\u0000~\u0000\u00f9q\u0000~\u0000\u00f3q\u0000~\u0000\u00edq\u0000~\u0000\u00eeq\u0000~\u0000\u00e7"
+"q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq\u0000~\u0000\u00dcq\u0000~\u0000\u00d5q\u0000~\u0000\u00d6q\u0000~\u0000\u00cfq\u0000~\u0000\u00d0q\u0000~\u0000\u00c9q\u0000~\u0000\u00caq\u0000~\u0000\u00c3"
+"q\u0000~\u0000\u00c4q\u0000~\u0000\u00bdq\u0000~\u0000Gq\u0000~\u0000Jq\u0000~\u0000Mq\u0000~\u0000\u0013q\u0000~\u0000Rq\u0000~\u0000Xq\u0000~\u0000\u000bq\u0000~\u0000^q\u0000~\u0000dq\u0000~\u0000j"
+"q\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0010q\u0000~\u0000Qq\u0000~\u0000Wq\u0000~\u0000]q\u0000~\u0000cq\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{"
+"q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000\u00abq\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u0082q\u0000~\u0000\u0088"
+"q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000\u00b2q\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000Dq\u0000~\u0000Aq\u0000~\u0000>"
+"q\u0000~\u0000;q\u0000~\u00008q\u0000~\u00005q\u0000~\u00002q\u0000~\u0000/q\u0000~\u0000,q\u0000~\u0001/q\u0000~\u00016q\u0000~\u00015q\u0000~\u0001<q\u0000~\u0001;q\u0000~\u0000)"
+"q\u0000~\u0001Bq\u0000~\u0001Apppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppq\u0000~\u0000Opppq\u0000~\u0000Lpppq\u0000~\u0000Ipppq\u0000~\u0000Fpppq\u0000~\u0000Cpppq\u0000~\u0000@pppq"
+"\u0000~\u0000=pppq\u0000~\u0000:pppq\u0000~\u00007pppq\u0000~\u00004pppq\u0000~\u00001pppq\u0000~\u0000.pppq\u0000~\u0000+pppq\u0000~\u0000("
+"ppq\u0000~\u0000\'ppppppppppq\u0000~\u0000&pppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
