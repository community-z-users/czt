//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.28 at 04:14:13 NZDT 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class ProdTypeElementImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl
    implements net.sourceforge.czt.core.jaxb.gen.ProdTypeElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.ProdTypeElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "ProdType";
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "ProdType");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.ProdTypeElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\r\u00b8\u00c3\u0007p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\r\u00b8\u00c2\u00fcppsq\u0000~\u0000\u0007\n\u0093\u0000\u00f1ppsq\u0000~\u0000\u0007\b*\u009d\u001dppsq\u0000~\u0000\u0007\u0005\u00c29Wppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0003Y\u00d5\u0091ppsq\u0000~\u0000\u0000\u0003Y\u00d5\u0086sr\u0000\u0011java.l"
+"ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0003Y\u00d5{ppsq\u0000~\u0000\u0000\u0000{G%pp\u0000"
+"sq\u0000~\u0000\r\u0000{G\u001appsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000"
+"{G\u000fq\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003e"
+"xpq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000{G\fq\u0000~\u0000\u0011psr\u00002com.sun.msv.gram"
+"mar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000"
+"\u0010\u0001q\u0000~\u0000\u001bsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"
+"mar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001cq\u0000"
+"~\u0000!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u00000net.s"
+"ourceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+http://java.su"
+"n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\r\u0002\u00de\u008eQppsq\u0000~\u0000\u0018\u0002\u00de\u008eFq\u0000~\u0000\u0011psr\u0000"
+"\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/"
+"datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/"
+"StringPair;xq\u0000~\u0000\u0004\u0001d\u00b9\u00c6ppsr\u0000\"com.sun.msv.datatype.xsd.QnameTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
+"datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
+"/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePro"
+"cessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.White"
+"SpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressio"
+"n$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0011psr\u0000\u001bcom.sun.ms"
+"v.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fnamespaceURI"
+"q\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLS"
+"chema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.ne"
+"t/zmlq\u0000~\u0000!sq\u0000~\u0000\r\u0002hc\u00c1ppsq\u0000~\u0000\r\u0001\u00ed\u001c\u009appsq\u0000~\u0000\r\u0001q\u00d5sppsq\u0000~\u0000\r\u0000\u00f6\u008eLppsq"
+"\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sourceforge.czt.core.jaxb.gen.SchemaT"
+"ypeElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~"
+"\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00001net.sourceforge.czt.core"
+".jaxb.gen.ProdTypeElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000"
+"\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00002net.sourc"
+"eforge.czt.core.jaxb.gen.GivenTypeElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%pp\u0000s"
+"q\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq"
+"\u0000~\u0000\"t\u00000net.sourceforge.czt.core.jaxb.gen.GenTypeElementq\u0000~\u0000&"
+"sq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00002net.sourceforge.czt.core.jaxb.gen.Power"
+"TypeElementq\u0000~\u0000&sq\u0000~\u0000\r\u0002hc\u00c1ppsq\u0000~\u0000\r\u0001\u00ed\u001c\u009appsq\u0000~\u0000\r\u0001q\u00d5sppsq\u0000~\u0000\r\u0000\u00f6"
+"\u008eLppsq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011"
+"pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Kq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000"
+"~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Qq\u0000~\u0000&"
+"sq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Wq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000"
+"{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000]q\u0000~\u0000&sq\u0000~"
+"\u0000\u0000\u0000{G%pp\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000cq\u0000~\u0000&sq\u0000~\u0000\r\u0002hc\u00cfppsq\u0000~\u0000\u0015\u0002hc\u00c4q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0002h"
+"c\u00c1q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0001\u00ed\u001c\u009aq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0001q\u00d5sq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0000\u00f6\u008eLq\u0000~\u0000\u0011psq\u0000~"
+"\u0000\u0000\u0000{G%q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Kq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000"
+"~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Qq\u0000~\u0000&"
+"sq\u0000~\u0000\u0000\u0000{G%q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011"
+"pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000Wq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000{G\u001ap"
+"psq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000]q"
+"\u0000~\u0000&sq\u0000~\u0000\u0000\u0000{G%q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000{G\u001appsq\u0000~\u0000\u0015\u0000{G\u000fq\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000{G\fq"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000cq\u0000~\u0000&q\u0000~\u0000!sq\u0000~\u0000\r\u0003%\u00c2\u0006ppsq\u0000~\u0000\u0018\u0003"
+"%\u00c1\u00fbq\u0000~\u0000\u0011pq\u0000~\u0000,sq\u0000~\u0000\"q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\bProdTypeq\u0000~\u0000Asr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\t"
+"thresholdL\u0000\u0006parentq\u0000~\u0000\u00a6[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expr"
+"ession;xp\u0000\u0000\u00006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]"
+"\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppq\u0000~\u0000\u0017q\u0000~\u0000Hq\u0000~\u0000Nq\u0000~\u0000Tq\u0000~\u0000Zq\u0000~\u0000`q\u0000~\u0000jq\u0000~"
+"\u0000oq\u0000~\u0000tq\u0000~\u0000yq\u0000~\u0000~q\u0000~\u0000\u0014q\u0000~\u0000Gq\u0000~\u0000Mq\u0000~\u0000Sq\u0000~\u0000Yq\u0000~\u0000\'q\u0000~\u0000_q\u0000~\u0000iq\u0000~"
+"\u0000nq\u0000~\u0000sq\u0000~\u0000xq\u0000~\u0000}q\u0000~\u0000\u0089q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u0097q\u0000~"
+"\u0000\u009dq\u0000~\u0000\u009cppq\u0000~\u0000\nppq\u0000~\u0000\tq\u0000~\u0000\u000bpppppppppppppq\u0000~\u0000\u0012ppq\u0000~\u0000Eq\u0000~\u0000\fq\u0000~\u0000"
+"gq\u0000~\u0000\u0086pppppppppppppppq\u0000~\u0000\u000eppppppppppppppq\u0000~\u0000Dq\u0000~\u0000fq\u0000~\u0000\u0085ppppp"
+"ppppppppppppppppppppppppppq\u0000~\u0000Cq\u0000~\u0000eq\u0000~\u0000\u0084ppppppppppppppppppp"
+"ppppppppppppq\u0000~\u0000Bq\u0000~\u0000dq\u0000~\u0000\u0083q\u0000~\u0000\u0082ppppppppppq\u0000~\u0000\u0081ppppppq\u0000~\u0000\u00a0p"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("ProdType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchemaType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("GivenType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("GenType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Type" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Type" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("ProdType" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeImpl)net.sourceforge.czt.core.jaxb.gen.impl.ProdTypeElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
