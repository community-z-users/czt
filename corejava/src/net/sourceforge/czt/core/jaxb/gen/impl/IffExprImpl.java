//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.25 at 04:40:49 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class IffExprImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl
    implements net.sourceforge.czt.core.jaxb.gen.IffExpr, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "IffExpr";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.IffExpr.class);
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "IffExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "IffExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.IffExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xpct]\u0090p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004ct]\u0085ppsq\u0000~\u0000\u00072~\b\"ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u0087\u00b2\u00bfppsq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00b4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsr\u0000 com.sun.msv.grammar."
+"OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsr\u0000 com.sun.msv.grammar.Att"
+"ributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0001\u0087\u00b2\u0090q\u0000"
+"~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNa"
+"meClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespa"
+"ceURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u00000net.sourceforge.czt.core.jaxb.gen.TermA.A"
+"nnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ft"
+"\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u000b0\u00f6U^ppsq\u0000~"
+"\u0000\u000b/n\u00a2\u00b3ppsq\u0000~\u0000\u000b-\u00e6\u00f0\bppsq\u0000~\u0000\u000b,_=]ppsq\u0000~\u0000\u000b*\u00d7\u008a\u00b2ppsq\u0000~\u0000\u000b)O\u00d8\u0007ppsq\u0000~"
+"\u0000\u000b\'\u00c8%\\ppsq\u0000~\u0000\u000b&@r\u00b1ppsq\u0000~\u0000\u000b$\u00b8\u00c0\u0006ppsq\u0000~\u0000\u000b#1\r[ppsq\u0000~\u0000\u000b!\u00a9Z\u00b0ppsq\u0000~"
+"\u0000\u000b !\u00a8\u0005ppsq\u0000~\u0000\u000b\u001e\u0099\u00f5Zppsq\u0000~\u0000\u000b\u001d\u0012B\u00afppsq\u0000~\u0000\u000b\u001b\u008a\u0090\u0004ppsq\u0000~\u0000\u000b\u001a\u0002\u00ddYppsq\u0000~"
+"\u0000\u000b\u0018{*\u00aeppsq\u0000~\u0000\u000b\u0016\u00f3x\u0003ppsq\u0000~\u0000\u000b\u0015k\u00c5Xppsq\u0000~\u0000\u000b\u0013\u00e4\u0012\u00adppsq\u0000~\u0000\u000b\u0012\\`\u0002ppsq\u0000~"
+"\u0000\u000b\u0010\u00d4\u00adWppsq\u0000~\u0000\u000b\u000fL\u00fa\u00acppsq\u0000~\u0000\u000b\r\u00c5H\u0001ppsq\u0000~\u0000\u000b\f=\u0095Vppsq\u0000~\u0000\u000b\n\u00b5\u00e2\u00abppsq\u0000~"
+"\u0000\u000b\t.0\u0000ppsq\u0000~\u0000\u000b\u0007\u00a6}Uppsq\u0000~\u0000\u000b\u0006\u001e\u00ca\u00aappsq\u0000~\u0000\u000b\u0004\u0097\u0017\u00ffppsq\u0000~\u0000\u000b\u0003\u000feTppsq\u0000~"
+"\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.core.jaxb.gen.BindSelEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.core."
+"jaxb.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000"
+"\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourc"
+"eforge.czt.core.jaxb.gen.HideExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq"
+"\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087"
+"\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.core.jaxb.gen.PowerExprq\u0000~\u0000"
+"#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.PreE"
+"xprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.core.jaxb.g"
+"en.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforg"
+"e.czt.core.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b"
+"\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u00005net.sourceforge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000#"
+"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb.gen.CompE"
+"xprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb.g"
+"en.PipeExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.cor"
+"e.jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge"
+".czt.core.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~"
+"\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sour"
+"ceforge.czt.core.jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009e"
+"ppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-ne"
+"t.sourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp"
+"\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000"
+"\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2"
+"\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb"
+".gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.c"
+"ore.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087"
+"\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourcefo"
+"rge.czt.core.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009epps"
+"q\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.s"
+"ourceforge.czt.core.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000"
+"~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000-net.sourceforge.czt.core.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000"
+"\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jaxb.gen.ForallExpr"
+"q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jaxb.gen."
+"LambdaExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core"
+".jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.c"
+"zt.core.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001"
+"\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourcef"
+"orge.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087"
+"\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001"
+"net.sourceforge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000"
+"\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen.CondExprEle"
+"mentq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.core.jaxb."
+"gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge."
+"czt.core.jaxb.gen.RefExprElementq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009e"
+"ppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000ne"
+"t.sourceforge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\u000b0\u00f6U"
+"^ppsq\u0000~\u0000\u000b/n\u00a2\u00b3ppsq\u0000~\u0000\u000b-\u00e6\u00f0\bppsq\u0000~\u0000\u000b,_=]ppsq\u0000~\u0000\u000b*\u00d7\u008a\u00b2ppsq\u0000~\u0000\u000b)O\u00d8"
+"\u0007ppsq\u0000~\u0000\u000b\'\u00c8%\\ppsq\u0000~\u0000\u000b&@r\u00b1ppsq\u0000~\u0000\u000b$\u00b8\u00c0\u0006ppsq\u0000~\u0000\u000b#1\r[ppsq\u0000~\u0000\u000b!\u00a9Z"
+"\u00b0ppsq\u0000~\u0000\u000b !\u00a8\u0005ppsq\u0000~\u0000\u000b\u001e\u0099\u00f5Zppsq\u0000~\u0000\u000b\u001d\u0012B\u00afppsq\u0000~\u0000\u000b\u001b\u008a\u0090\u0004ppsq\u0000~\u0000\u000b\u001a\u0002\u00dd"
+"Yppsq\u0000~\u0000\u000b\u0018{*\u00aeppsq\u0000~\u0000\u000b\u0016\u00f3x\u0003ppsq\u0000~\u0000\u000b\u0015k\u00c5Xppsq\u0000~\u0000\u000b\u0013\u00e4\u0012\u00adppsq\u0000~\u0000\u000b\u0012\\`"
+"\u0002ppsq\u0000~\u0000\u000b\u0010\u00d4\u00adWppsq\u0000~\u0000\u000b\u000fL\u00fa\u00acppsq\u0000~\u0000\u000b\r\u00c5H\u0001ppsq\u0000~\u0000\u000b\f=\u0095Vppsq\u0000~\u0000\u000b\n\u00b5\u00e2"
+"\u00abppsq\u0000~\u0000\u000b\t.0\u0000ppsq\u0000~\u0000\u000b\u0007\u00a6}Uppsq\u0000~\u0000\u000b\u0006\u001e\u00ca\u00aappsq\u0000~\u0000\u000b\u0004\u0097\u0017\u00ffppsq\u0000~\u0000\u000b\u0003\u000fe"
+"Tppsq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000Kq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~"
+"\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000Qq\u0000~\u0000#s"
+"q\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000Wq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087"
+"\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000]q\u0000~\u0000#sq\u0000~\u0000"
+"\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000cq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000iq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2"
+"\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000oq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000uq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000"
+"sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001fq\u0000~\u0000{q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0081q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~"
+"\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001fq\u0000~\u0000\u0087q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087"
+"\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u008dq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087"
+"\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~"
+"\u0000\u0093q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0099q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009epp"
+"sq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u009fq\u0000"
+"~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00a5q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~"
+"\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00abq\u0000~\u0000#s"
+"q\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00b1q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087"
+"\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00b7q\u0000~\u0000#sq\u0000~\u0000"
+"\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00bdq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c3q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2"
+"\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c9q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00cfq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000"
+"sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001fq\u0000~\u0000\u00d5q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00dbq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~"
+"\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001fq\u0000~\u0000\u00e1q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087"
+"\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00e7q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087"
+"\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~"
+"\u0000\u00edq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00f3q\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009epp"
+"sq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00f9q\u0000"
+"~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00ffq\u0000~\u0000#sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\u000b\u0001\u0087\u00b2\u009eppsq\u0000~"
+"\u0000\u0012\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001\u0005q\u0000~\u0000#s"
+"q\u0000~\u0000\u001ft\u0000\u0007IffExprq\u0000~\u0000&sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$C"
+"losedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHas"
+"h\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u00c8[\u0000\u0005tablet\u0000![Lc"
+"om/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00c3\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.g"
+"rammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffppppppppppppppq\u0000~\u00008q\u0000~\u0001\u0017p"
+"pppppppppppppq\u0000~\u0000)q\u0000~\u0001\bpppppppppppppppppppppppppppppppq\u0000~\u0000:q"
+"\u0000~\u0001\u0019ppppppppppppppq\u0000~\u0000+q\u0000~\u0001\npppppppppppppppppppppppppppppppq"
+"\u0000~\u0000<q\u0000~\u0001\u001bppppppppppppppq\u0000~\u0000-q\u0000~\u0001\fppppppppppppppppppppppppppp"
+"ppppq\u0000~\u0000>q\u0000~\u0001\u001dppppppppppppppq\u0000~\u0000/q\u0000~\u0001\u000epppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000@q\u0000~\u0001\u001fppppppppppppppq\u0000~\u00001q\u0000~\u0001\u0010ppppppppppppppppp"
+"ppppppppppppppq\u0000~\u0001!q\u0000~\u0000Bppppppppppppppq\u0000~\u00003q\u0000~\u0001\u0012pppppppppppp"
+"pppppppppppppppppppq\u0000~\u0001#q\u0000~\u0000Dppppppppppppppq\u0000~\u00005q\u0000~\u0001\u0014ppppppp"
+"ppq\u0000~\u0001@q\u0000~\u0001;q\u0000~\u00016q\u0000~\u00011q\u0000~\u0001,q\u0000~\u0001\'q\u0000~\u0001\u0002q\u0000~\u0000\u00fcq\u0000~\u0000\u00f6q\u0000~\u0000\u00f0q\u0000~\u0000\u00eaq\u0000~"
+"\u0001:q\u0000~\u00015q\u0000~\u00010q\u0000~\u0001+q\u0000~\u0001&q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00f5q\u0000~\u0000\u00efq\u0000~\u0000\u00e9q\u0000~\u0000\u00e3q\u0000~\u0000\u00e4q\u0000~"
+"\u0000\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u00d1q\u0000~\u0000\u00d2q\u0000~\u0000\u00cbq\u0000~\u0000\nq\u0000~\u0000\u00ccq\u0000~\u0000\u00c5q\u0000~\u0000\u00c6q\u0000~\u0000\u00bfq\u0000~"
+"\u0000\u00c0q\u0000~\u0000\u00b9q\u0000~\u0000\u00baq\u0000~\u0000\u00b3q\u0000~\u0000\u0014q\u0000~\u0000Hq\u0000~\u0000Nq\u0000~\u0000Tq\u0000~\u0000Zq\u0000~\u0000\fq\u0000~\u0000`q\u0000~\u0000fq\u0000~"
+"\u0000lq\u0000~\u0000rq\u0000~\u0000\u0011q\u0000~\u0000Gq\u0000~\u0000Mq\u0000~\u0000Sq\u0000~\u0000Yq\u0000~\u0000(q\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000kq\u0000~\u0000qq\u0000~"
+"\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000xq\u0000~\u0000~q\u0000~"
+"\u0000\u0084q\u0000~\u0000\u008aq\u0000~\u0000\u0090q\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u00007q\u0000~\u0001?q\u0000~\u0001Eq\u0000~"
+"\u0001Dq\u0000~\u0001Jq\u0000~\u0001Iq\u0000~\u0001Oq\u0000~\u00009q\u0000~\u0001Nq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0001Yq\u0000~\u0001Xq\u0000~\u0001^q\u0000~\u0001]q\u0000~"
+"\u0001cq\u0000~\u0001bq\u0000~\u0001hq\u0000~\u0001gq\u0000~\u0001\u0018q\u0000~\u0001mq\u0000~\u0001lq\u0000~\u0001rq\u0000~\u0000*q\u0000~\u0001qq\u0000~\u0001\u0016q\u0000~\u0001wq\u0000~"
+"\u0001vq\u0000~\u0001|q\u0000~\u0001{q\u0000~\u0001\u0081q\u0000~\u0001\u0080q\u0000~\u0001\u0086q\u0000~\u0001\u0085q\u0000~\u0001\u008bq\u0000~\u0001\u008aq\u0000~\u0001\u0090q\u0000~\u0001\u008fq\u0000~\u0001\u0095q\u0000~"
+"\u0001\u0094q\u0000~\u0001\u009aq\u0000~\u0001\u0099q\u0000~\u0001\u009fq\u0000~\u0001\u009eq\u0000~\u0001\u00a4q\u0000~\u0001\u00a3q\u0000~\u0001\u00a9q\u0000~\u0001\u00a8q\u0000~\u0001\u00aeq\u0000~\u0001\u00adq\u0000~\u0001\u00b3q\u0000~"
+"\u0001\u00b2q\u0000~\u0001\tq\u0000~\u0001\u00b8q\u0000~\u0001\u00b7q\u0000~\u0001\u00bdq\u0000~\u0000;q\u0000~\u0001\u001aq\u0000~\u0001\u00bcq\u0000~\u0001\u0007q\u0000~\u0001\u00c2q\u0000~\u0001\u00c1q\u0000~\u0000\tppp"
+"ppppppq\u0000~\u0000,q\u0000~\u0001\u000bpppppppppppppppppppppppppppppppq\u0000~\u0000=q\u0000~\u0001\u001cppp"
+"pppppppppppq\u0000~\u0000.q\u0000~\u0001\rpppppppppppppppppppppppppppppppq\u0000~\u0000?q\u0000~"
+"\u0001\u001eppppppppppppppq\u0000~\u00000q\u0000~\u0001\u000fpppppppppppppppppppppppppppppppq\u0000~"
+"\u0000Aq\u0000~\u0001 ppppppppppppppq\u0000~\u00002q\u0000~\u0001\u0011ppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0001\"q\u0000~\u0000Cppppppppppppppq\u0000~\u00004q\u0000~\u0001\u0013pppppppppppppppppppppppp"
+"pppppppq\u0000~\u0001$q\u0000~\u0000Eppppppppppppppq\u0000~\u00006q\u0000~\u0001\u0015ppppppppppppppq\u0000~\u0000\'"
+"q\u0000~\u0001\u0006ppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2Impl)net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
