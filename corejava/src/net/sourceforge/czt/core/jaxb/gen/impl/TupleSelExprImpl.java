//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.25 at 03:03:07 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class TupleSelExprImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.core.jaxb.gen.TupleSelExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    protected java.lang.Integer _Select;
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.TupleSelExpr.class);
    }

    public java.lang.Integer getSelect() {
        return _Select;
    }

    public void setSelect(java.lang.Integer value) {
        _Select = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeElementBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startAttribute("", "Select");
        try {
            context.text(net.sourceforge.czt.core.jaxb.CztDatatypeConverter.printInteger(((java.lang.Integer) _Select)));
        } catch (java.lang.Exception e) {
            net.sourceforge.czt.core.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        super.serializeAttributes(context);
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributeBody(context);
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.TupleSelExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp*\u00f11\u001bppsq\u0000~\u0000\u0000)C\u00c6\u00e3ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001@\u001d`ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001@\u001dUsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001@\u001d4q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001@\u001d1q\u0000~\u0000\u000epsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u00000net.sourceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+htt"
+"p://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp"
+"://czt.sourceforge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u0007(\u0003\u00a9~ppsq\u0000~\u0000\u0007&\u00c3\u008c2ppsq\u0000~\u0000"
+"\u0007%\u0083n\u00e6ppsq\u0000~\u0000\u0007$CQ\u009appsq\u0000~\u0000\u0007#\u00034Nppsq\u0000~\u0000\u0007!\u00c3\u0017\u0002ppsq\u0000~\u0000\u0007 \u0082\u00f9\u00b6ppsq\u0000~\u0000"
+"\u0007\u001fB\u00dcjppsq\u0000~\u0000\u0007\u001e\u0002\u00bf\u001eppsq\u0000~\u0000\u0007\u001c\u00c2\u00a1\u00d2ppsq\u0000~\u0000\u0007\u001b\u0082\u0084\u0086ppsq\u0000~\u0000\u0007\u001aBg:ppsq\u0000~\u0000"
+"\u0007\u0019\u0002I\u00eeppsq\u0000~\u0000\u0007\u0017\u00c2,\u00a2ppsq\u0000~\u0000\u0007\u0016\u0082\u000fVppsq\u0000~\u0000\u0007\u0015A\u00f2\nppsq\u0000~\u0000\u0007\u0014\u0001\u00d4\u00beppsq\u0000~\u0000"
+"\u0007\u0012\u00c1\u00b7rppsq\u0000~\u0000\u0007\u0011\u0081\u009a&ppsq\u0000~\u0000\u0007\u0010A|\u00dappsq\u0000~\u0000\u0007\u000f\u0001_\u008eppsq\u0000~\u0000\u0007\r\u00c1BBppsq\u0000~\u0000"
+"\u0007\f\u0081$\u00f6ppsq\u0000~\u0000\u0007\u000bA\u0007\u00aappsq\u0000~\u0000\u0007\n\u0000\u00ea^ppsq\u0000~\u0000\u0007\b\u00c0\u00cd\u0012ppsq\u0000~\u0000\u0007\u0007\u0080\u00af\u00c6ppsq\u0000~\u0000"
+"\u0007\u0006@\u0092zppsq\u0000~\u0000\u0007\u0005\u0000u.ppsq\u0000~\u0000\u0007\u0003\u00c0W\u00e2ppsq\u0000~\u0000\u0007\u0002\u0080:\u0096ppsq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~"
+"\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExprElementq\u0000~\u0000"
+"\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core.jaxb.gen.Deco"
+"rExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.co"
+"re.jaxb.gen.HideExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000"
+"~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sou"
+"rceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@"
+"\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+"
+"net.sourceforge.czt.core.jaxb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp"
+"\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.PreExprq\u0000~\u0000\"sq\u0000~\u0000"
+"\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.core.jaxb.gen.RenameExpr"
+"Elementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001"
+"@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core.ja"
+"xb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001"
+"@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005net.sourcef"
+"orge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000"
+"sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.CompExprq\u0000~\u0000\"sq\u0000~\u0000"
+"\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.PipeExprq\u0000"
+"~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.Pr"
+"ojExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@"
+"\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jax"
+"b.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.c"
+"ore.jaxb.gen.OrExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge"
+".czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?pp"
+"sq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net."
+"sourceforge.czt.core.jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000"
+"\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprElementq\u0000~\u0000\"sq\u0000"
+"~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.ProdExpr"
+"q\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.core.jaxb.gen."
+"TupleExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core."
+"jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.cz"
+"t.core.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~"
+"\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sour"
+"ceforge.czt.core.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000"
+"\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u0000,net.sourceforge.czt.core.jaxb.gen.ForallExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@"
+"\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core.jaxb.gen.LambdaExprq\u0000~"
+"\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.Let"
+"Exprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.core.jaxb."
+"gen.MuExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.core"
+".jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d"
+"4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourcefor"
+"ge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007"
+"\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et"
+"\u00001net.sourceforge.czt.core.jaxb.gen.CondExprElementq\u0000~\u0000\"sq\u0000~"
+"\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb.gen.NumExprEl"
+"ementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d"
+"1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb"
+".gen.RefExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge"
+".czt.core.jaxb.gen.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0014\u0001\u00adj3ppsr\u0000\u001bcom.su"
+"n.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatyp"
+"e/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringP"
+"air;xq\u0000~\u0000\u0003\u0001\u0011\u00c4\u0000ppsr\u0000,com.sun.msv.datatype.xsd.PositiveInteger"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k"
+"\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl"
+";xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.su"
+"n.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq"
+"\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u000fpositiveIntegersr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000*com.sun.msv.datatype.xsd.MinIn"
+"clusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.m"
+"sv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000x"
+"r\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fi"
+"sFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0001\rL\u0000\fconcreteT"
+"ypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~"
+"\u0000\u001fxq\u0000~\u0001\u0010ppq\u0000~\u0001\u0017\u0000\u0000sr\u0000/com.sun.msv.datatype.xsd.NonNegativeInt"
+"egerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0001\u000bq\u0000~\u0001\u0013t\u0000\u0012nonNegativeIntegerq\u0000~\u0001\u0017sq\u0000~"
+"\u0001\u0018ppq\u0000~\u0001\u0017\u0000\u0000sq\u0000~\u0001\u000bq\u0000~\u0001\u0013t\u0000\u0007integerq\u0000~\u0001\u0017sr\u0000,com.sun.msv.datatyp"
+"e.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv."
+"datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq"
+"\u0000~\u0001\u001cppq\u0000~\u0001\u0017\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0001\u000eq\u0000~\u0001\u0013t\u0000\u0007decimalq\u0000~\u0001\u0017q\u0000~\u0001)t\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0001#"
+"t\u0000\fminInclusivesr\u0000)com.sun.msv.datatype.xsd.IntegerValueType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\u001fxr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u0001"
+"0q\u0000~\u0001 q\u0000~\u0001,sq\u0000~\u0001-t\u0000\u00011sr\u00000com.sun.msv.grammar.Expression$Null"
+"SetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util"
+".StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fx"
+"pq\u0000~\u0001\u0014q\u0000~\u0001\u0013sq\u0000~\u0000\u001et\u0000\u0006Selectt\u0000\u0000sr\u0000\"com.sun.msv.grammar.Express"
+"ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
+"ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
+"ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001;[\u0000\u0005ta"
+"blet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000d\u0000\u0000\u0000rpur\u0000![Lcom."
+"sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppq\u0000~\u0000Dpppq\u0000~"
+"\u0000\u0005ppq\u0000~\u0000Bppppppq\u0000~\u0000@ppppppq\u0000~\u0000>ppppppq\u0000~\u0000<ppppppq\u0000~\u0000:ppppppq"
+"\u0000~\u00008ppppppq\u0000~\u00006ppppppq\u0000~\u00004ppppppq\u0000~\u00002ppppppq\u0000~\u00000ppppppq\u0000~\u0000.p"
+"pppppq\u0000~\u0000,ppppppq\u0000~\u0000*ppppppq\u0000~\u0000(ppppppq\u0000~\u0000&ppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u00b3q\u0000~\u0000\u00adq\u0000~\u0000\u00a7q\u0000"
+"~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000wq\u0000~\u0000\u00acq\u0000~\u0000\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000"
+"~\u0000\u0094q\u0000~\u0000\u008eq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000~\u0000|q\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000jq\u0000~\u0000dq\u0000~\u0000^q\u0000~\u0000Xq\u0000~\u0000Rq\u0000"
+"~\u0000Lq\u0000~\u0000Fq\u0000~\u0000\u0010q\u0000~\u0000qq\u0000~\u0000kq\u0000~\u0000eq\u0000~\u0000_q\u0000~\u0000Yq\u0000~\u0000Sq\u0000~\u0000Aq\u0000~\u0000Mq\u0000~\u0000Gq\u0000"
+"~\u0000\u0013q\u0000~\u0000Cq\u0000~\u0000\u00b2q\u0000~\u0000\u00b9q\u0000~\u0000?q\u0000~\u0000\bq\u0000~\u0000\u00b8q\u0000~\u0000\u00bfq\u0000~\u0000\u00beq\u0000~\u0000\u00c5q\u0000~\u0000\u00c4q\u0000~\u0000=q\u0000"
+"~\u0000\u00cbq\u0000~\u0000\u00caq\u0000~\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u00d7q\u0000~\u0000\u00d6q\u0000~\u0000;q\u0000~\u0000\u00ddq\u0000~\u0000\u00dcq\u0000~\u0000\u00e3q\u0000~\u0000\u00e2q\u0000~\u0000\u00e9q\u0000"
+"~\u0000\u00e8q\u0000~\u00009q\u0000~\u0000\u00efq\u0000~\u0000\u00eeq\u0000~\u0000\u00f5q\u0000~\u0000\u00f4q\u0000~\u0000\u00fbq\u0000~\u0000\u00faq\u0000~\u00007q\u0000~\u0001\u0001q\u0000~\u0001\u0000ppppq\u0000~"
+"\u00005ppppppq\u0000~\u00003ppppppq\u0000~\u00001ppppppq\u0000~\u0000/ppppppq\u0000~\u0000-ppppppq\u0000~\u0000+ppp"
+"pppq\u0000~\u0000)ppppppq\u0000~\u0000\'pppppppppppppppppppppppppppppppq\u0000~\u0000\u0006ppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Select");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Select = net.sourceforge.czt.core.jaxb.CztDatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Select");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Select" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Select" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Select");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText0(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Select");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText0(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                        case  1 :
                            eatText0(value);
                            state = 2;
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
