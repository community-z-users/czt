//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.20 at 09:36:24 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class CondExprImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl
    implements net.sourceforge.czt.core.jaxb.gen.CondExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Expr = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.core.jaxb.gen.Pred _Pred;
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.CondExpr.class);
    }

    public java.util.List getExpr() {
        return _Expr;
    }

    public net.sourceforge.czt.core.jaxb.gen.Pred getPred() {
        return _Pred;
    }

    public void setPred(net.sourceforge.czt.core.jaxb.gen.Pred value) {
        _Pred = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeElementBody(context);
        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred));
        while (idx1 != len1) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeAttributes(context);
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred));
        while (idx1 != len1) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeAttributeBody(context);
        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred));
        while (idx1 != len1) {
            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeURIs(context);
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred));
        while (idx1 != len1) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.CondExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp9\u00dd\u009fippsq\u0000~\u0000\u0000!\u00d1O\u00e6ppsq\u0000~\u0000\u0000\t"
+"\u00c5\u0000cppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00c0b\u0090p"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00c0b\u0085sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00c0bdq\u0000~\u0000\u000fpsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00c0baq\u0000~"
+"\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u00000net.sourceforge.czt.core.jaxb.gen.TermA.An"
+"nsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ft\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\b\t\u0004\u009d\u00ceppsq\u0000~\u0000"
+"\b\bD;Rppsq\u0000~\u0000\b\u0007\u0083\u00d8\u00d6ppsq\u0000~\u0000\b\u0006\u00c3vZppsq\u0000~\u0000\b\u0006\u0003\u0013\u00deppsq\u0000~\u0000\b\u0005B\u00b1bppsq\u0000~\u0000"
+"\b\u0004\u0082N\u00e6ppsq\u0000~\u0000\b\u0003\u00c1\u00ecjppsq\u0000~\u0000\b\u0003\u0001\u0089\u00eeppsq\u0000~\u0000\b\u0002A\'rppsq\u0000~\u0000\b\u0001\u0080\u00c4\u00f6ppsq\u0000~\u0000"
+"\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.core.jaxb.gen.FalsePredq"
+"\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.core.jaxb.gen.T"
+"ruePredq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000"
+"\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.core.ja"
+"xb.gen.AndPredElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0b"
+"dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourcefor"
+"ge.czt.core.jaxb.gen.ImpliesPredq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bo"
+"ppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)ne"
+"t.sourceforge.czt.core.jaxb.gen.IffPredq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000"
+"~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000(net.sourceforge.czt.core.jaxb.gen.OrPredq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bz"
+"pp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jaxb.gen.ExistsPredq\u0000~\u0000#"
+"sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.core.jaxb.gen.Exist"
+"s1Predq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0"
+"baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jax"
+"b.gen.ForallPredq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.cz"
+"t.core.jaxb.gen.ExprPredElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bop"
+"psq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net"
+".sourceforge.czt.core.jaxb.gen.MemPredElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bz"
+"pp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.core.jaxb.gen.NegPredElementq"
+"\u0000~\u0000#sq\u0000~\u0000\b\u0018\fO~ppsq\u0000~\u0000\b\u0017K\u00ed\u0002ppsq\u0000~\u0000\b\u0016\u008b\u008a\u0086ppsq\u0000~\u0000\b\u0015\u00cb(\nppsq\u0000~\u0000\b\u0015\n"
+"\u00c5\u008eppsq\u0000~\u0000\b\u0014Jc\u0012ppsq\u0000~\u0000\b\u0013\u008a\u0000\u0096ppsq\u0000~\u0000\b\u0012\u00c9\u009e\u001appsq\u0000~\u0000\b\u0012\t;\u009eppsq\u0000~\u0000\b\u0011H"
+"\u00d9\"ppsq\u0000~\u0000\b\u0010\u0088v\u00a6ppsq\u0000~\u0000\b\u000f\u00c8\u0014*ppsq\u0000~\u0000\b\u000f\u0007\u00b1\u00aeppsq\u0000~\u0000\b\u000eGO2ppsq\u0000~\u0000\b\r\u0086"
+"\u00ec\u00b6ppsq\u0000~\u0000\b\f\u00c6\u008a:ppsq\u0000~\u0000\b\f\u0006\'\u00beppsq\u0000~\u0000\b\u000bE\u00c5Bppsq\u0000~\u0000\b\n\u0085b\u00c6ppsq\u0000~\u0000\b\t\u00c5"
+"\u0000Jppsq\u0000~\u0000\b\t\u0004\u009d\u00ceppsq\u0000~\u0000\b\bD;Rppsq\u0000~\u0000\b\u0007\u0083\u00d8\u00d6ppsq\u0000~\u0000\b\u0006\u00c3vZppsq\u0000~\u0000\b\u0006\u0003"
+"\u0013\u00deppsq\u0000~\u0000\b\u0005B\u00b1bppsq\u0000~\u0000\b\u0004\u0082N\u00e6ppsq\u0000~\u0000\b\u0003\u00c1\u00ecjppsq\u0000~\u0000\b\u0003\u0001\u0089\u00eeppsq\u0000~\u0000\b\u0002A"
+"\'rppsq\u0000~\u0000\b\u0001\u0080\u00c4\u00f6ppsq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.cor"
+"e.jaxb.gen.BindSelExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bopps"
+"q\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.s"
+"ourceforge.czt.core.jaxb.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bz"
+"pp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen.HideExprElement"
+"q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen."
+"NegExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000"
+"\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.core.ja"
+"xb.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.cz"
+"t.core.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000"
+"\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourcef"
+"orge.czt.core.jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq"
+"\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u00002net.sourceforge.czt.core.jaxb.gen.ThetaExprElementq\u0000~\u0000"
+"#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005net.sourceforge.czt.core.jaxb.gen.Tupl"
+"eSelExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt"
+".core.jaxb.gen.CompExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000"
+"\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourcef"
+"orge.czt.core.jaxb.gen.PipeExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bop"
+"psq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net"
+".sourceforge.czt.core.jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000"
+"~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0b"
+"zpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.core.jaxb.gen.OrExprq\u0000~\u0000#sq\u0000"
+"~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.core.jaxb.gen.ImpliesE"
+"xprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.g"
+"en.IffExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core"
+".jaxb.gen.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000"
+"\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourc"
+"eforge.czt.core.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0b"
+"oppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+n"
+"et.sourceforge.czt.core.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000"
+"sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.core.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\n"
+"\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core.jaxb.gen.ExistsExprq"
+"\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.core.jaxb.gen.E"
+"xists1Exprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.core"
+".jaxb.gen.ForallExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bd"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforg"
+"e.czt.core.jaxb.gen.LambdaExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bopp"
+"sq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net."
+"sourceforge.czt.core.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000"
+"\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000(net.sourceforge.czt.core.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp"
+"\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000#s"
+"q\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen.BindEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core."
+"jaxb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012"
+"\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.source"
+"forge.czt.core.jaxb.gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~"
+"\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u00000net.sourceforge.czt.core.jaxb.gen.RefExprElementq\u0000~\u0000#sq\u0000"
+"~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.core.jaxb.gen.SchExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\b\u0018\fO~ppsq\u0000~\u0000\b\u0017K\u00ed\u0002ppsq\u0000~\u0000\b\u0016\u008b\u008a\u0086ppsq\u0000~\u0000\b\u0015\u00cb(\npps"
+"q\u0000~\u0000\b\u0015\n\u00c5\u008eppsq\u0000~\u0000\b\u0014Jc\u0012ppsq\u0000~\u0000\b\u0013\u008a\u0000\u0096ppsq\u0000~\u0000\b\u0012\u00c9\u009e\u001appsq\u0000~\u0000\b\u0012\t;\u009epps"
+"q\u0000~\u0000\b\u0011H\u00d9\"ppsq\u0000~\u0000\b\u0010\u0088v\u00a6ppsq\u0000~\u0000\b\u000f\u00c8\u0014*ppsq\u0000~\u0000\b\u000f\u0007\u00b1\u00aeppsq\u0000~\u0000\b\u000eGO2pps"
+"q\u0000~\u0000\b\r\u0086\u00ec\u00b6ppsq\u0000~\u0000\b\f\u00c6\u008a:ppsq\u0000~\u0000\b\f\u0006\'\u00beppsq\u0000~\u0000\b\u000bE\u00c5Bppsq\u0000~\u0000\b\n\u0085b\u00c6pps"
+"q\u0000~\u0000\b\t\u00c5\u0000Jppsq\u0000~\u0000\b\t\u0004\u009d\u00ceppsq\u0000~\u0000\b\bD;Rppsq\u0000~\u0000\b\u0007\u0083\u00d8\u00d6ppsq\u0000~\u0000\b\u0006\u00c3vZpps"
+"q\u0000~\u0000\b\u0006\u0003\u0013\u00deppsq\u0000~\u0000\b\u0005B\u00b1bppsq\u0000~\u0000\b\u0004\u0082N\u00e6ppsq\u0000~\u0000\b\u0003\u00c1\u00ecjppsq\u0000~\u0000\b\u0003\u0001\u0089\u00eepps"
+"q\u0000~\u0000\b\u0002A\'rppsq\u0000~\u0000\b\u0001\u0080\u00c4\u00f6ppsq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u009eq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0b"
+"zpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00a4q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00aaq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000"
+"sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001fq\u0000~\u0000\u00b0q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00b6q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~"
+"\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001fq\u0000~\u0000\u00bcq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0"
+"baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c2q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0"
+"boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~"
+"\u0000\u00c8q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00ceq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bopp"
+"sq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00d4q\u0000"
+"~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00daq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~"
+"\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00e0q\u0000~\u0000#s"
+"q\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00e6q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0"
+"bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00ecq\u0000~\u0000#sq\u0000~\u0000"
+"\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00f2q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00f8q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0b"
+"zpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00feq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001\u0004q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000"
+"sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001fq\u0000~\u0001\nq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001\u0010q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~"
+"\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001fq\u0000~\u0001\u0016q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0"
+"baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001\u001cq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0"
+"boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~"
+"\u0001\"q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001(q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0bopp"
+"sq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001.q\u0000"
+"~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u00014q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~"
+"\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001:q\u0000~\u0000#s"
+"q\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001@q\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0"
+"bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001Fq\u0000~\u0000#sq\u0000~\u0000"
+"\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001Lq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0bzpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001Rq\u0000~\u0000#sq\u0000~\u0000\n\u0000\u00c0b"
+"zpp\u0000sq\u0000~\u0000\b\u0000\u00c0boppsq\u0000~\u0000\u0012\u0000\u00c0bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0000\u00c0baq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0001Xq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Cl"
+"osedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash"
+"\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0002\u0019[\u0000\u0005tablet\u0000![Lco"
+"m/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00e7\u0000\u0000\u0001\u00ccpur\u0000![Lcom.sun.msv.gr"
+"ammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0005\u00ffpppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0001`q\u0000~\u0000\u0081pppppppppq\u0000~\u0001uq\u0000~\u0000"
+"\u0096q\u0000~\u0000/pppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0001\\q\u0000~\u0000}pppppppppq\u0000~\u0001qq\u0000~\u0000+q\u0000~\u0000\u0092ppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001mq\u0000~\u0000\'q\u0000~\u0000\u008e"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppq\u0000~\u0001iq\u0000~\u0000\u008apppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppq\u0000~\u0001eq\u0000~\u0000\u0086ppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001aq\u0000~\u0000\u0082pppp"
+"pppppq\u0000~\u0001vq\u0000~\u0000\u0097q\u0000~\u00000pppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppq\u0000~\u0001]q\u0000~\u0000~pppppppppq\u0000~\u0001rq\u0000~\u0000,q\u0000~\u0000\u0093ppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001Yq\u0000~"
+"\u0000zpppppppppq\u0000~\u0001nq\u0000~\u0000(q\u0000~\u0000\u008fpppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppq\u0000~\u0001jq\u0000~\u0000\u008bpppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001fq\u0000"
+"~\u0000\u0087ppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppq\u0000~\u0001bq\u0000~\u0000\u0083pppppppppq\u0000~\u0001wq\u0000~\u0000\u0098q\u0000~\u00001pppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001^q\u0000~\u0000\u007fppppppp"
+"ppq\u0000~\u0001sq\u0000~\u0000\u0094q\u0000~\u0000-ppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppq\u0000~\u0001Zq\u0000~\u0000{pppppppppq\u0000~\u0001oq\u0000~\u0000)q\u0000~\u0000\u0090pppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005p"
+"q\u0000~\u0001kq\u0000~\u0000\u008cpppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppq\u0000~\u0001gq\u0000~\u0000\u0088ppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppq\u0000~\u0002\u0015q\u0000~\u0002\u0010q\u0000~\u0002\u000bq\u0000~\u0002\u0006q\u0000~\u0002\u0001q\u0000~\u0001\u00fcq\u0000~"
+"\u0001\u00f7q\u0000~\u0001\u00f2q\u0000~\u0001\u00edq\u0000~\u0001\u00e8q\u0000~\u0001\u00e3q\u0000~\u0002\u0014q\u0000~\u0002\u000fq\u0000~\u0002\nq\u0000~\u0002\u0005q\u0000~\u0002\u0000q\u0000~\u0001\u00fbq\u0000~\u0001\u00f6q\u0000~"
+"\u0001\u00f1q\u0000~\u0001\u00ecq\u0000~\u0001\u00e7q\u0000~\u0001\u00e2q\u0000~\u0001\u00ddq\u0000~\u0001\u00deq\u0000~\u0001\u00d8q\u0000~\u0001\u00d9q\u0000~\u0001\u00d3q\u0000~\u0001\u00d4q\u0000~\u0001\u00ceq\u0000~\u0001\u00cfq\u0000~"
+"\u0001\u00c9q\u0000~\u0001\u00caq\u0000~\u0001\u00c4q\u0000~\u0001\u00c5q\u0000~\u0001\u00bfq\u0000~\u0001\u00c0q\u0000~\u0001\u00baq\u0000~\u0001\u00bbq\u0000~\u0001\u00b5q\u0000~\u0001\u00b6q\u0000~\u0001\u00b0q\u0000~\u0001\u00b1q\u0000~"
+"\u0001\u00abq\u0000~\u0001\u00acq\u0000~\u0001\u00a6q\u0000~\u0001\u00a7q\u0000~\u0001\u00a1q\u0000~\u0001\u00a2q\u0000~\u0001\u009cq\u0000~\u0001\u009dq\u0000~\u0001\u0097q\u0000~\u0001\u0098q\u0000~\u0001\u0092q\u0000~\u0001\u0093q\u0000~"
+"\u0001\u008dq\u0000~\u0001\u008eq\u0000~\u0001\u0088q\u0000~\u0001\u0089q\u0000~\u0001\u0083q\u0000~\u0001\u0084q\u0000~\u0001~q\u0000~\u0001\u007fq\u0000~\u0001yq\u0000~\u0001zq\u0000~\u0001Tq\u0000~\u0001Uq\u0000~"
+"\u0001Nq\u0000~\u0001Oq\u0000~\u0001Hq\u0000~\u0001Iq\u0000~\u0001Bq\u0000~\u0001Cq\u0000~\u0001<q\u0000~\u0001=q\u0000~\u00016q\u0000~\u00017q\u0000~\u00010q\u0000~\u0000\u0014q\u0000~"
+"\u0000\u00bfq\u0000~\u0000\u00b9q\u0000~\u0000\u00b3q\u0000~\u0000\u00adq\u0000~\u0000\u00a7q\u0000~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000jq\u0000~\u0000\u00b8q\u0000~\u0000\u00b2q\u0000~"
+"\u0000\u00acq\u0000~\u0000\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000~\u0000uq\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000Wq\u0000~\u0000Qq\u0000~\u0000Kq\u0000~"
+"\u0000Eq\u0000~\u0000?q\u0000~\u00009q\u0000~\u00003q\u0000~\u0000\u0011q\u0000~\u0000dq\u0000~\u0000^q\u0000~\u0000Xq\u0000~\u0000Rq\u0000~\u0000\tq\u0000~\u0000Lq\u0000~\u0000Fq\u0000~"
+"\u0000@q\u0000~\u0000:q\u0000~\u00004q\u0000~\u0000\u00beq\u0000~\u0000\u00c5q\u0000~\u0000\u00c4q\u0000~\u0000\u00cbq\u0000~\u0000\u00caq\u0000~\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u00d7q\u0000~\u0000\u00d6q\u0000~"
+"\u0000\u00ddq\u0000~\u0000\u00dcq\u0000~\u0000\u00e3q\u0000~\u0000\u00e2q\u0000~\u0000\u00e9q\u0000~\u0000\u00e8q\u0000~\u0000\u00efq\u0000~\u0000\u00eeq\u0000~\u0000\u00f4q\u0000~\u0000\u00faq\u0000~\u0001\u0000q\u0000~\u0001\u0006q\u0000~"
+"\u0001\fq\u0000~\u0001\u0012q\u0000~\u0001\u0018q\u0000~\u0001\u001eq\u0000~\u0001$q\u0000~\u0001*q\u0000~\u0000\u00f5q\u0000~\u0000\u00fbq\u0000~\u0001\u0001q\u0000~\u0001\u0007q\u0000~\u0001\rq\u0000~\u0001\u0013q\u0000~"
+"\u0001\u0019q\u0000~\u0001\u001fq\u0000~\u0001%q\u0000~\u0001[q\u0000~\u0000|q\u0000~\u0001+q\u0000~\u00011q\u0000~\u0001tq\u0000~\u0000\u0095q\u0000~\u0000.q\u0000~\u0001cq\u0000~\u0000\u0084q\u0000~"
+"\u0001_q\u0000~\u0000\u0080q\u0000~\u0001pq\u0000~\u0000*q\u0000~\u0000\u0091pppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0001lq\u0000~\u0000\u008dpppppppppppppppppppp"
+"pppq\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001hq\u0000"
+"~\u0000\u0089ppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppq\u0000~\u0001dq\u0000~\u0000\u0085ppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FalsePredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TruePredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1PredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MemPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred = ((net.sourceforge.czt.core.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  2 :
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.CondExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
