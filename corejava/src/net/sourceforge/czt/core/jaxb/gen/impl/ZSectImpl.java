//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class ZSectImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.SectImpl
    implements net.sourceforge.czt.core.jaxb.gen.ZSect, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Parent = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _Para = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.ZSect.class);
    }

    public java.util.List getParent() {
        return _Parent;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public java.util.List getPara() {
        return _Para;
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Parent.size();
        int idx3 = 0;
        final int len3 = _Para.size();
        super.serializeElementBody(context);
        context.startElement("http://czt.sourceforge.net/zml", "Name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name));
        } catch (java.lang.Exception e) {
            net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Parent");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_2 ++)));
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_3 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)));
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.Para) {
                if (_Para.get(idx3) instanceof javax.xml.bind.Element) {
                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                } else {
                    context.startElement("http://czt.sourceforge.net/zml", "Para");
                    int idx_4 = idx3;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx_4 ++)));
                    context.endNamespaceDecls();
                    int idx_5 = idx3;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx_5 ++)));
                    context.endAttributes();
                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                    context.endElement();
                }
            } else {
                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.FreeParaElement) {
                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                } else {
                    if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.ConjParaElement) {
                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                    } else {
                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.OptempParaElement) {
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                        } else {
                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.UnparsedParaElement) {
                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                            } else {
                                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.GivenParaElement) {
                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                } else {
                                    if (_Para.get(idx3) instanceof net.sourceforge.czt.oz.jaxb.gen.ClassParaElement) {
                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                    } else {
                                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.NarrParaElement) {
                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                        } else {
                                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.AxParaElement) {
                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                            } else {
                                                throw new org.xml.sax.SAXException("type mismatch error");
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Parent.size();
        int idx3 = 0;
        final int len3 = _Para.size();
        super.serializeAttributes(context);
        while (idx3 != len3) {
            if (!(_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.Para)) {
                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.FreeParaElement) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                } else {
                    if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.ConjParaElement) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                    } else {
                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.OptempParaElement) {
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                        } else {
                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.UnparsedParaElement) {
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                            } else {
                                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.GivenParaElement) {
                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                } else {
                                    if (_Para.get(idx3) instanceof net.sourceforge.czt.oz.jaxb.gen.ClassParaElement) {
                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                    } else {
                                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.NarrParaElement) {
                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                        } else {
                                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.AxParaElement) {
                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                            } else {
                                                throw new org.xml.sax.SAXException("type mismatch error");
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Parent.size();
        int idx3 = 0;
        final int len3 = _Para.size();
        super.serializeAttributeBody(context);
        context.startElement("http://czt.sourceforge.net/zml", "Name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name));
        } catch (java.lang.Exception e) {
            net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Parent");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_2 ++)));
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_3 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)));
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.Para) {
                if (_Para.get(idx3) instanceof javax.xml.bind.Element) {
                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                } else {
                    context.startElement("http://czt.sourceforge.net/zml", "Para");
                    int idx_4 = idx3;
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx_4 ++)));
                    context.endNamespaceDecls();
                    int idx_5 = idx3;
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx_5 ++)));
                    context.endAttributes();
                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                    context.endElement();
                }
            } else {
                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.FreeParaElement) {
                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                } else {
                    if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.ConjParaElement) {
                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                    } else {
                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.OptempParaElement) {
                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                        } else {
                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.UnparsedParaElement) {
                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                            } else {
                                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.GivenParaElement) {
                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                } else {
                                    if (_Para.get(idx3) instanceof net.sourceforge.czt.oz.jaxb.gen.ClassParaElement) {
                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                    } else {
                                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.NarrParaElement) {
                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                        } else {
                                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.AxParaElement) {
                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                            } else {
                                                throw new org.xml.sax.SAXException("type mismatch error");
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Parent.size();
        int idx3 = 0;
        final int len3 = _Para.size();
        super.serializeURIs(context);
        while (idx3 != len3) {
            if (!(_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.Para)) {
                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.FreeParaElement) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                } else {
                    if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.ConjParaElement) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                    } else {
                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.OptempParaElement) {
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                        } else {
                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.UnparsedParaElement) {
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                            } else {
                                if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.GivenParaElement) {
                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                } else {
                                    if (_Para.get(idx3) instanceof net.sourceforge.czt.oz.jaxb.gen.ClassParaElement) {
                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                    } else {
                                        if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.NarrParaElement) {
                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                        } else {
                                            if (_Para.get(idx3) instanceof net.sourceforge.czt.core.jaxb.gen.AxParaElement) {
                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)));
                                            } else {
                                                throw new org.xml.sax.SAXException("type mismatch error");
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.ZSect.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0011ry\u00c2ppsq\u0000~\u0000\u0000\u0005\u008a\u00c2\u00e1ppsq\u0000~\u0000\u0000\u0002"
+"\u0090\u00d5\u0011ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001|\u00f6\u00eep"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00e3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u00000net.sourceforge.czt.core.jaxb.gen.TermA.An"
+"nsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ft\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\n\u0001\u0013\u00de\u001epp\u0000sr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003\u0001\u0013\u00de\u0013q\u0000~\u0000\u000fpsr\u0000#com.sun.msv.datatype.xsd.Strin"
+"gType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.m"
+"sv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun"
+".msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000"
+"\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNa"
+"meq\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000\u001ft\u0000\u0004Nameq\u0000~\u0000&sq\u0000"
+"~\u0000\b\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000\u0012\u0002\u00f9\u00ed\u00c0q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001|\u00f6\u00e3q\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\n\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.core.jaxb.gen.Parentq"
+"\u0000~\u0000#sq\u0000~\u0000\u001ft\u0000\u0006Parentq\u0000~\u0000&sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001"
+"|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourcef"
+"orge.czt.core.jaxb.gen.ParentElementq\u0000~\u0000#q\u0000~\u0000\u001esq\u0000~\u0000\b\u000b\u00e7\u00b6\u00dcppsq"
+"\u0000~\u0000\u0012\u000b\u00e7\u00b6\u00d1q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u000b\u00e7\u00b6\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\b\nj\u00bf\u00f4q\u0000~\u0000\u000fpsq\u0000~\u0000\b\b\u00ed\u00c9\u001aq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\b\u0007p\u00d2@q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0005\u00f3\u00dbfq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0004v\u00e4\u008cq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0002\u00f9\u00ed\u00b2"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6"
+"\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb"
+".gen.FreeParaElementq\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012"
+"\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.source"
+"forge.czt.core.jaxb.gen.ConjParaElementq\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp"
+"\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.core.jaxb.gen.OptempParaElement"
+"q\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bf"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005net.sourceforge.czt.core.jaxb."
+"gen.UnparsedParaElementq\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000"
+"~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sou"
+"rceforge.czt.core.jaxb.gen.GivenParaElementq\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000"
+"~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.oz.jaxb.gen.ClassParaElemen"
+"tq\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6"
+"\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb"
+".gen.NarrParaElementq\u0000~\u0000#sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012"
+"\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.source"
+"forge.czt.core.jaxb.gen.AxParaElementq\u0000~\u0000#q\u0000~\u0000\u001esr\u0000\"com.sun.m"
+"sv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/m"
+"sv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramm"
+"ar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL"
+"\u0000\u0006parentq\u0000~\u0000\u0089[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000"
+"\u0000\u0000&\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000"
+"\u0000\u00bfpq\u0000~\u0000Opppppppppppppq\u0000~\u0000Tpppppppppppppppppppppppppppq\u0000~\u0000Wpp"
+"ppppppppq\u0000~\u0000?ppq\u0000~\u0000>ppq\u0000~\u0000Rpppppppq\u0000~\u0000=pppppppppppppppppppq\u0000"
+"~\u0000Upppppq\u0000~\u0000\u0014q\u0000~\u0000Cq\u0000~\u0000Kq\u0000~\u0000Zq\u0000~\u0000`q\u0000~\u0000fq\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000~q\u0000"
+"~\u0000\u0084q\u0000~\u0000\u0011q\u0000~\u0000Bq\u0000~\u0000Jq\u0000~\u0000Yq\u0000~\u0000\u0007q\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000"
+"~\u0000\u0083ppppppppppppppppq\u0000~\u0000Sppppq\u0000~\u0000\tppppppppppppppppppppppq\u0000~\u0000V"
+"ppppppppppppppppq\u0000~\u0000Qppq\u0000~\u0000Pq\u0000~\u0000\u0006pppppq\u0000~\u0000\u0005pp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 2;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SectImpl)net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.SectImpl)net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  10 :
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ConjParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OptempParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.UnparsedParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NarrParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ConjParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OptempParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.UnparsedParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NarrParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 7;
                        continue outer;
                    case  9 :
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.SectImpl)net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl.class), 9, ___uri, ___local, ___qname)));
                        return ;
                    case  10 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  5 :
                        _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 7;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.SectImpl)net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl.class), 9, ___uri, ___local, ___qname)));
                        return ;
                    case  10 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  5 :
                        _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 7;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.SectImpl)net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl.class), 9, ___uri, ___local, ___qname)));
                        return ;
                    case  10 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  5 :
                        _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            state = 7;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.SectImpl)net.sourceforge.czt.core.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  8 :
                            _Para.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl.class), 9, value)));
                            return ;
                        case  2 :
                            eatText0(value);
                            state = 3;
                            return ;
                        case  10 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  5 :
                            _Parent.add(((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.ParentImpl.class), 6, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText0(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
