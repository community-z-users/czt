//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.25 at 03:03:07 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class ConstDeclImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl
    implements net.sourceforge.czt.core.jaxb.gen.ConstDecl, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.core.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.core.jaxb.gen.DeclName _DeclName;
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.ConstDecl.class);
    }

    public net.sourceforge.czt.core.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.core.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.DeclName getDeclName() {
        return _DeclName;
    }

    public void setDeclName(net.sourceforge.czt.core.jaxb.gen.DeclName value) {
        _DeclName = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeElementBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _DeclName));
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endElement();
        }
        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributeBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _DeclName));
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endElement();
        }
        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.ConstDecl.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp+\u00c4\u0001\u0089ppsq\u0000~\u0000\u0000\u0003\u00c0X\u0006ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001@\u001d`ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001@\u001dUsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001@\u001d4q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001@\u001d1q\u0000~\u0000\u000epsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u00000net.sourceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+htt"
+"p://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp"
+"://czt.sourceforge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u0007\u0002\u0080:\u00a1ppsq\u0000~\u0000\t\u0001@\u001dUpp\u0000sq\u0000~"
+"\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.DeclNameq"
+"\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\bDeclNameq\u0000~\u0000%sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d"
+"4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourcefor"
+"ge.czt.core.jaxb.gen.DeclNameElementq\u0000~\u0000\"sq\u0000~\u0000\u0007(\u0003\u00a9~ppsq\u0000~\u0000\u0007&"
+"\u00c3\u008c2ppsq\u0000~\u0000\u0007%\u0083n\u00e6ppsq\u0000~\u0000\u0007$CQ\u009appsq\u0000~\u0000\u0007#\u00034Nppsq\u0000~\u0000\u0007!\u00c3\u0017\u0002ppsq\u0000~\u0000\u0007 "
+"\u0082\u00f9\u00b6ppsq\u0000~\u0000\u0007\u001fB\u00dcjppsq\u0000~\u0000\u0007\u001e\u0002\u00bf\u001eppsq\u0000~\u0000\u0007\u001c\u00c2\u00a1\u00d2ppsq\u0000~\u0000\u0007\u001b\u0082\u0084\u0086ppsq\u0000~\u0000\u0007\u001a"
+"Bg:ppsq\u0000~\u0000\u0007\u0019\u0002I\u00eeppsq\u0000~\u0000\u0007\u0017\u00c2,\u00a2ppsq\u0000~\u0000\u0007\u0016\u0082\u000fVppsq\u0000~\u0000\u0007\u0015A\u00f2\nppsq\u0000~\u0000\u0007\u0014"
+"\u0001\u00d4\u00beppsq\u0000~\u0000\u0007\u0012\u00c1\u00b7rppsq\u0000~\u0000\u0007\u0011\u0081\u009a&ppsq\u0000~\u0000\u0007\u0010A|\u00dappsq\u0000~\u0000\u0007\u000f\u0001_\u008eppsq\u0000~\u0000\u0007\r"
+"\u00c1BBppsq\u0000~\u0000\u0007\f\u0081$\u00f6ppsq\u0000~\u0000\u0007\u000bA\u0007\u00aappsq\u0000~\u0000\u0007\n\u0000\u00ea^ppsq\u0000~\u0000\u0007\b\u00c0\u00cd\u0012ppsq\u0000~\u0000\u0007\u0007"
+"\u0080\u00af\u00c6ppsq\u0000~\u0000\u0007\u0006@\u0092zppsq\u0000~\u0000\u0007\u0005\u0000u.ppsq\u0000~\u0000\u0007\u0003\u00c0W\u00e2ppsq\u0000~\u0000\u0007\u0002\u0080:\u0096ppsq\u0000~\u0000\t\u0001"
+"@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@"
+"\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core.jax"
+"b.gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@"
+"\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourcefo"
+"rge.czt.core.jaxb.gen.HideExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000"
+"\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u0000)net.sourceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJp"
+"p\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.core.jaxb.gen.PowerExprq\u0000~\u0000\"sq"
+"\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.PreExpr"
+"q\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.core.jaxb.gen."
+"RenameExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.c"
+"zt.core.jaxb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d"
+"?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005n"
+"et.sourceforge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000"
+"~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.CompExpr"
+"q\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen."
+"PipeExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014"
+"\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.j"
+"axb.gen.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.cz"
+"t.core.jaxb.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001"
+"@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourcef"
+"orge.czt.core.jaxb.gen.OrExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?pps"
+"q\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.s"
+"ourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq"
+"\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@"
+"\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprEleme"
+"ntq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.ge"
+"n.ProdExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.core"
+".jaxb.gen.TupleExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge"
+".czt.core.jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~"
+"\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sour"
+"ceforge.czt.core.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007"
+"\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et"
+"\u0000-net.sourceforge.czt.core.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@"
+"\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core.jaxb.gen.ForallExprq\u0000~"
+"\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core.jaxb.gen.Lam"
+"bdaExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001"
+"@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.ja"
+"xb.gen.LetExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt."
+"core.jaxb.gen.MuExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforg"
+"e.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?p"
+"psq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net"
+".sourceforge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001d"
+"Jpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.CondExprElemen"
+"tq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb.gen"
+".NumExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?ppsq\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt"
+".core.jaxb.gen.RefExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001@\u001dJpp\u0000sq\u0000~\u0000\u0007\u0001@\u001d?pps"
+"q\u0000~\u0000\u0011\u0001@\u001d4q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001@\u001d1q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.s"
+"ourceforge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000\"sr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthreshold"
+"L\u0000\u0006parentq\u0000~\u0001\u0016[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp"
+"\u0000\u0000\u0000i\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000"
+"\u0000\u0001\u007fpppppq\u0000~\u0000Tppppppq\u0000~\u0000Rpppq\u0000~\u0000&ppq\u0000~\u0000Pppppppq\u0000~\u0000Nppppppq\u0000~\u0000"
+"Lppppppq\u0000~\u0000Jppppppq\u0000~\u0000Hppppppq\u0000~\u0000Fppppppq\u0000~\u0000Dppppppq\u0000~\u0000Bpppp"
+"ppq\u0000~\u0000@ppppppq\u0000~\u0000>ppppppq\u0000~\u0000<ppppppq\u0000~\u0000:ppppppq\u0000~\u00008ppppppq\u0000~"
+"\u00006pppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000\u00b7q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000\u0099q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~"
+"\u0000\u00b0q\u0000~\u0000\u00aaq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000\u0098q\u0000~\u0000\u0092q\u0000~\u0000\u008cq\u0000~\u0000\u0086q\u0000~\u0000\u0080q\u0000~\u0000zq\u0000~\u0000tq\u0000~\u0000nq\u0000~"
+"\u0000hq\u0000~\u0000bq\u0000~\u0000\\q\u0000~\u0000Vq\u0000~\u00001q\u0000~\u0000)q\u0000~\u0000\u0010q\u0000~\u0000uq\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~"
+"\u0000Wq\u0000~\u0000Qq\u0000~\u00002q\u0000~\u0000*q\u0000~\u0000\u0013q\u0000~\u0000Sq\u0000~\u0000\u00b6q\u0000~\u0000\u00bdq\u0000~\u0000Oq\u0000~\u0000\bq\u0000~\u0000\u00bcq\u0000~\u0000\u00c3q\u0000~"
+"\u0000\u00c2q\u0000~\u0000\u00c9q\u0000~\u0000\u00c8q\u0000~\u0000Mq\u0000~\u0000\u00cfq\u0000~\u0000\u00ceq\u0000~\u0000\u00d5q\u0000~\u0000\u00d4q\u0000~\u0000\u00dbq\u0000~\u0000\u00daq\u0000~\u0000Kq\u0000~\u0000\u00e1q\u0000~"
+"\u0000\u00e0q\u0000~\u0000\u00e7q\u0000~\u0000\u00e6q\u0000~\u0000\u00edq\u0000~\u0000\u00ecq\u0000~\u0000Iq\u0000~\u0000\u0006q\u0000~\u0000\u00f3q\u0000~\u0000\u00f2q\u0000~\u0000\u00f9q\u0000~\u0000\u00f8q\u0000~\u0000\u00ffq\u0000~"
+"\u0000Gq\u0000~\u0000\u00feq\u0000~\u0001\u0005q\u0000~\u0001\u0004q\u0000~\u0001\u000bq\u0000~\u0001\nq\u0000~\u0001\u0011q\u0000~\u0000Eq\u0000~\u0001\u0010pppppq\u0000~\u0000Cppppppq\u0000"
+"~\u0000Appppppq\u0000~\u0000?ppppppq\u0000~\u0000=ppppppq\u0000~\u0000;ppppppq\u0000~\u00009ppppppq\u0000~\u00007pp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppp"
+"pppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "------");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
