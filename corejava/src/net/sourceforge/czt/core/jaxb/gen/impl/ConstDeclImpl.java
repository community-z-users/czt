//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class ConstDeclImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl
    implements net.sourceforge.czt.core.jaxb.gen.ConstDecl, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.core.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.core.jaxb.gen.DeclName _DeclName;
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.ConstDecl.class);
    }

    public net.sourceforge.czt.core.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.core.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.DeclName getDeclName() {
        return _DeclName;
    }

    public void setDeclName(net.sourceforge.czt.core.jaxb.gen.DeclName value) {
        _DeclName = value;
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeElementBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _DeclName));
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endElement();
        }
        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                context.endElement();
            }
        } else {
            if (_Expr instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
            } else {
                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                } else {
                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                    } else {
                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                        } else {
                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                            } else {
                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                } else {
                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                    } else {
                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                        } else {
                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                            } else {
                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                } else {
                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                    } else {
                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                        } else {
                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                            } else {
                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                } else {
                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                    } else {
                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                        } else {
                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                            } else {
                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                } else {
                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                    } else {
                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                        } else {
                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                            } else {
                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                } else {
                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                    } else {
                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                        } else {
                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                            } else {
                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                } else {
                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                    } else {
                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                        } else {
                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                            } else {
                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                } else {
                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                            } else {
                                                                                                                                                                                throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (!(_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr)) {
            if (_Expr instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
            } else {
                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                } else {
                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                    } else {
                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                        } else {
                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                            } else {
                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                } else {
                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                    } else {
                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                        } else {
                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                            } else {
                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                } else {
                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                    } else {
                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                        } else {
                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                            } else {
                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                } else {
                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                    } else {
                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                        } else {
                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                            } else {
                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                } else {
                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                    } else {
                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                        } else {
                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                            } else {
                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                } else {
                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                    } else {
                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                        } else {
                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                            } else {
                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                } else {
                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                    } else {
                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                        } else {
                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                            } else {
                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                } else {
                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                            } else {
                                                                                                                                                                                throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributeBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _DeclName));
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _DeclName));
            context.endElement();
        }
        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr));
                context.endElement();
            }
        } else {
            if (_Expr instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
            } else {
                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                } else {
                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                    } else {
                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                        } else {
                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                            } else {
                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                } else {
                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                    } else {
                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                        } else {
                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                            } else {
                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                } else {
                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                    } else {
                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                        } else {
                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                            } else {
                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                } else {
                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                    } else {
                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                        } else {
                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                            } else {
                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                } else {
                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                    } else {
                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                        } else {
                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                            } else {
                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                } else {
                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                    } else {
                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                        } else {
                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                            } else {
                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                } else {
                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                    } else {
                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                        } else {
                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                            } else {
                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                } else {
                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                            } else {
                                                                                                                                                                                throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (!(_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr)) {
            if (_Expr instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
            } else {
                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                } else {
                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                    } else {
                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                        } else {
                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                            } else {
                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                } else {
                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                    } else {
                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                        } else {
                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                            } else {
                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                } else {
                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                    } else {
                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                        } else {
                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                            } else {
                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                } else {
                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                    } else {
                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                        } else {
                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                            } else {
                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                } else {
                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                    } else {
                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                        } else {
                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                            } else {
                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                } else {
                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                    } else {
                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                        } else {
                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                            } else {
                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                } else {
                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                    } else {
                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                        } else {
                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                            } else {
                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                } else {
                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr));
                                                                                                                                                                            } else {
                                                                                                                                                                                throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.ConstDecl.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpAzm\u009dppsq\u0000~\u0000\u0000\u0004v\u00e4\u00b0ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001|\u00f6\u00eeppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00e3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001|\u00f6\u00bfq\u0000~\u0000\u000epsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u00000net.sourceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+htt"
+"p://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp"
+"://czt.sourceforge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u0007\u0002\u00f9\u00ed\u00bdppsq\u0000~\u0000\t\u0001|\u00f6\u00e3pp\u0000sq\u0000~"
+"\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.DeclNameq"
+"\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\bDeclNameq\u0000~\u0000%sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6"
+"\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourcefor"
+"ge.czt.core.jaxb.gen.DeclNameElementq\u0000~\u0000\"sq\u0000~\u0000\u0007=\u0003\u0088\u00e8ppsq\u0000~\u0000\u0007;"
+"\u0086\u0092\u000eppsq\u0000~\u0000\u0007:\t\u009b4ppsq\u0000~\u0000\u00078\u008c\u00a4Zppsq\u0000~\u0000\u00077\u000f\u00ad\u0080ppsq\u0000~\u0000\u00075\u0092\u00b6\u00a6ppsq\u0000~\u0000\u00074"
+"\u0015\u00bf\u00ccppsq\u0000~\u0000\u00072\u0098\u00c8\u00f2ppsq\u0000~\u0000\u00071\u001b\u00d2\u0018ppsq\u0000~\u0000\u0007/\u009e\u00db>ppsq\u0000~\u0000\u0007.!\u00e4dppsq\u0000~\u0000\u0007,"
+"\u00a4\u00ed\u008appsq\u0000~\u0000\u0007+\'\u00f6\u00b0ppsq\u0000~\u0000\u0007)\u00aa\u00ff\u00d6ppsq\u0000~\u0000\u0007(.\b\u00fcppsq\u0000~\u0000\u0007&\u00b1\u0012\"ppsq\u0000~\u0000\u0007%"
+"4\u001bHppsq\u0000~\u0000\u0007#\u00b7$nppsq\u0000~\u0000\u0007\":-\u0094ppsq\u0000~\u0000\u0007 \u00bd6\u00bappsq\u0000~\u0000\u0007\u001f@?\u00e0ppsq\u0000~\u0000\u0007\u001d"
+"\u00c3I\u0006ppsq\u0000~\u0000\u0007\u001cFR,ppsq\u0000~\u0000\u0007\u001a\u00c9[Rppsq\u0000~\u0000\u0007\u0019Ldxppsq\u0000~\u0000\u0007\u0017\u00cfm\u009eppsq\u0000~\u0000\u0007\u0016"
+"Rv\u00c4ppsq\u0000~\u0000\u0007\u0014\u00d5\u007f\u00eappsq\u0000~\u0000\u0007\u0013X\u0089\u0010ppsq\u0000~\u0000\u0007\u0011\u00db\u00926ppsq\u0000~\u0000\u0007\u0010^\u009b\\ppsq\u0000~\u0000\u0007\u000e"
+"\u00e1\u00a4\u0082ppsq\u0000~\u0000\u0007\rd\u00ad\u00a8ppsq\u0000~\u0000\u0007\u000b\u00e7\u00b6\u00ceppsq\u0000~\u0000\u0007\nj\u00bf\u00f4ppsq\u0000~\u0000\u0007\b\u00ed\u00c9\u001appsq\u0000~\u0000\u0007\u0007"
+"p\u00d2@ppsq\u0000~\u0000\u0007\u0005\u00f3\u00dbfppsq\u0000~\u0000\u0007\u0004v\u00e4\u008cppsq\u0000~\u0000\u0007\u0002\u00f9\u00ed\u00b2ppsq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007"
+"\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et"
+"\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000\"sq"
+"\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.PreExpr"
+"q\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.core.jaxb.gen."
+"OrExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|"
+"\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jax"
+"b.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.c"
+"ore.jaxb.gen.Qnt1ExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq"
+"\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.so"
+"urceforge.czt.core.jaxb.gen.LetExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001"
+"|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+"-net.sourceforge.czt.core.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6"
+"\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb.gen.NumExprElement"
+"q\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb.gen."
+"QntExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt."
+"core.jaxb.gen.SchExpr2Elementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdpps"
+"q\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.s"
+"ourceforge.czt.core.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000"
+"~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000\"s"
+"q\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.core.jaxb.gen.Expr2E"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|"
+"\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.core.jax"
+"b.gen.Expr0NElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge"
+".czt.core.jaxb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq"
+"\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.so"
+"urceforge.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000"
+"~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExprElementq\u0000~"
+"\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.core.jaxb.gen.Exp"
+"r2NElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core"
+".jaxb.gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~"
+"\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sour"
+"ceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000"
+"\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u0000*net.sourceforge.czt.core.jaxb.gen.CompExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8"
+"pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core.jaxb.gen.ForallExprq\u0000~\u0000\""
+"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.ProdE"
+"xprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.g"
+"en.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.cor"
+"e.jaxb.gen.MuExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.c"
+"zt.core.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011"
+"\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.source"
+"forge.czt.core.jaxb.gen.Expr1Elementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007"
+"\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et"
+"\u0000*net.sourceforge.czt.core.jaxb.gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprElementq"
+"\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.S"
+"etExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|"
+"\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core.jax"
+"b.gen.LambdaExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005net.sourceforge.cz"
+"t.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001"
+"|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+")net.sourceforge.czt.core.jaxb.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000"
+"sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001et\u00003net.sourceforge.czt.core.jaxb.gen.RenameExprElementq"
+"\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.C"
+"ondExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt."
+"core.jaxb.gen.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq"
+"\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.so"
+"urceforge.czt.core.jaxb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb.gen.RefExprElementq\u0000"
+"~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.core.jaxb.gen.Hi"
+"deExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.t"
+"coz.jaxb.gen.ChannelExprElementq\u0000~\u0000\"sq\u0000~\u0000\t\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0007\u0001|\u00f6\u00cdp"
+"psq\u0000~\u0000\u0011\u0001|\u00f6\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001|\u00f6\u00bfq\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net"
+".sourceforge.czt.core.jaxb.gen.TupleExprq\u0000~\u0000\"sr\u0000\"com.sun.msv"
+".grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv"
+"/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar"
+".ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006"
+"parentq\u0000~\u0001U[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000"
+"\u0084\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ff"
+"ppq\u0000~\u0000\\pppq\u0000~\u0000Ypppq\u0000~\u0000Vpppq\u0000~\u0000Spppq\u0000~\u0000Ppppq\u0000~\u0000Mpppq\u0000~\u0000Jpppq\u0000"
+"~\u0000Gpppq\u0000~\u0000Dpppq\u0000~\u0000Aq\u0000~\u0000\u0006ppq\u0000~\u0000>pppq\u0000~\u0000;pppq\u0000~\u00008ppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u00012q\u0000~\u0001,q"
+"\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\bq\u0000~\u0001\u0002q\u0000~\u0000\u00fcq\u0000~\u0000\u00f6q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq"
+"\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00f5q\u0000~\u0000\u00efq\u0000~\u0000\u00f0q\u0000~\u0000\u00e9q\u0000~\u0000\u00eaq\u0000~\u0000\u00e3q"
+"\u0000~\u0000\u00e4q\u0000~\u0000\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u00d1q\u0000~\u0000\u00d2q\u0000~\u0000\u00cbq\u0000~\u0000\u00ccq\u0000~\u0000\u00c5q\u0000~\u0000\u00c6q\u0000~\u0000\u00bfq"
+"\u0000~\u0000Uq\u0000~\u0000Xq\u0000~\u0000[q\u0000~\u0000\u0013q\u0000~\u0000*q\u0000~\u00002q\u0000~\u0000\bq\u0000~\u0000`q\u0000~\u0000fq\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq"
+"\u0000~\u0000~q\u0000~\u0000\u0010q\u0000~\u0000)q\u0000~\u00001q\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q"
+"\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u0084q\u0000~\u0000\u008aq\u0000~\u0000\u0090q\u0000~\u0000\u0096q"
+"\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~\u0000Rq\u0000~\u0000Oq\u0000~\u0000Lq\u0000~\u0000Iq\u0000~\u0000Fq"
+"\u0000~\u0000Cq\u0000~\u0000@q\u0000~\u0000=q\u0000~\u00011q\u0000~\u00018q\u0000~\u00017q\u0000~\u0000:q\u0000~\u0001>q\u0000~\u0001=q\u0000~\u0001Dq\u0000~\u0001Cq\u0000~\u0001Jq"
+"\u0000~\u0001Iq\u0000~\u00007q\u0000~\u0001Pq\u0000~\u0001Oppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppq\u0000~\u0000]pppq\u0000~\u0000Zpppq\u0000~\u0000Wppq\u0000~\u0000&q\u0000~\u0000Tpppq\u0000~\u0000Qppp"
+"q\u0000~\u0000Npppq\u0000~\u0000Kpppq\u0000~\u0000Hpppq\u0000~\u0000Epppq\u0000~\u0000Bpppq\u0000~\u0000?pppq\u0000~\u0000<pppq\u0000~\u0000"
+"9pppq\u0000~\u00006ppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Qnt1ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.QntExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr1ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.core.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _DeclName = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  6 :
                            _Expr = ((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 7, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
