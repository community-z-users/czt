//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.20 at 09:36:24 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class RefExprElementImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl
    implements net.sourceforge.czt.core.jaxb.gen.RefExprElement, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "RefExpr";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.RefExprElement.class);
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "RefExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "RefExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.RefExprElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u001c\u00b5\u0013[p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u001c\u00b5\u0013Pppsq\u0000~\u0000\u0007\u001aMw\'ppsq\u0000~\u0000\u0007\u0002A\'\u0096ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0000\u00c0b\u0090ppsq\u0000~\u0000\u0000\u0000\u00c0b\u0085sr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0000\u00c0bzpp\u0000sq\u0000~\u0000\f\u0000\u00c0boppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000\u00c0bdq\u0000~\u0000\u0010psr\u0000 com.sun.msv"
+".grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001"
+"xq\u0000~\u0000\u0004\u0000\u00c0baq\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u00000net.sourceforge.czt.core.jaxb"
+".gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~"
+"\u0000\f\u0001\u0080\u00c5\u0001ppsq\u0000~\u0000\u0000\u0000\u00c0b\u0085pp\u0000sq\u0000~\u0000\u0000\u0000\u00c0bzpp\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000"
+"\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.cz"
+"t.core.jaxb.gen.RefNameq\u0000~\u0000$sq\u0000~\u0000 t\u0000\u0007RefNameq\u0000~\u0000\'sq\u0000~\u0000\u0000\u0000\u00c0bzp"
+"p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000"
+"\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.RefNameElementq\u0000"
+"~\u0000$sq\u0000~\u0000\f\u0018\fO\u008cppsq\u0000~\u0000\u0013\u0018\fO\u0081q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0018\fO~q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0017K\u00ed\u0002q\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\u0016\u008b\u008a\u0086q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0015\u00cb(\nq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0015\n\u00c5\u008eq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0014Jc"
+"\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0013\u008a\u0000\u0096q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0012\u00c9\u009e\u001aq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0012\t;\u009eq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\u0011H\u00d9\"q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0010\u0088v\u00a6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000f\u00c8\u0014*q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000f\u0007\u00b1\u00aeq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u000eGO2q\u0000~\u0000\u0010psq\u0000~\u0000\f\r\u0086\u00ec\u00b6q\u0000~\u0000\u0010psq\u0000~\u0000\f\f\u00c6\u008a:q\u0000~\u0000\u0010psq\u0000~\u0000\f\f\u0006\'\u00beq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\u000bE\u00c5Bq\u0000~\u0000\u0010psq\u0000~\u0000\f\n\u0085b\u00c6q\u0000~\u0000\u0010psq\u0000~\u0000\f\t\u00c5\u0000Jq\u0000~\u0000\u0010psq\u0000~\u0000\f\t\u0004\u009d"
+"\u00ceq\u0000~\u0000\u0010psq\u0000~\u0000\f\bD;Rq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0007\u0083\u00d8\u00d6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0006\u00c3vZq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\u0006\u0003\u0013\u00deq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0005B\u00b1bq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004\u0082N\u00e6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0003\u00c1\u00ecjq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u0003\u0001\u0089\u00eeq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0002A\'rq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0001\u0080\u00c4\u00f6q\u0000~\u0000\u0010psq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExprEle"
+"mentq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016"
+"\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00002net.sourceforge.czt.core.j"
+"axb.gen.DecorExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq"
+"\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.so"
+"urceforge.czt.core.jaxb.gen.HideExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000"
+"~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000$s"
+"q\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010p"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge.czt.core.jaxb.gen.Po"
+"werExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000"
+"~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.cor"
+"e.jaxb.gen.PreExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0"
+"bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourcefo"
+"rge.czt.core.jaxb.gen.RenameExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p"
+"\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u00002net.sourceforge.czt.core.jaxb.gen.ThetaExprElementq"
+"\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq"
+"\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00005net.sourceforge.czt.core.jaxb.g"
+"en.TupleSelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~"
+"\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sour"
+"ceforge.czt.core.jaxb.gen.CompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~"
+"\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000*net.sourceforge.czt.core.jaxb.gen.PipeExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0b"
+"zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.core.jaxb.gen.ProjExprq\u0000"
+"~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000"
+"~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.core.jaxb.ge"
+"n.AndExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.c"
+"ore.jaxb.gen.OrExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000"
+"\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourcef"
+"orge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~"
+"\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000)net.sourceforge.czt.core.jaxb.gen.IffExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bz"
+"q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000"
+"\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprEle"
+"mentq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016"
+"\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.core.j"
+"axb.gen.ProdExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bd"
+"q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforg"
+"e.czt.core.jaxb.gen.TupleExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0b"
+"oppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)n"
+"et.sourceforge.czt.core.jaxb.gen.SetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010"
+"p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000"
+"\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.core.jaxb.gen.ExistsExprq\u0000~\u0000$s"
+"q\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010p"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.core.jaxb.gen.Ex"
+"ists1Exprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.c"
+"ore.jaxb.gen.ForallExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000"
+"~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sou"
+"rceforge.czt.core.jaxb.gen.LambdaExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000s"
+"q\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000)net.sourceforge.czt.core.jaxb.gen.LetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000"
+"\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.core.jaxb.gen.MuExprq\u0000"
+"~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000"
+"~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.core.jaxb.ge"
+"n.SetCompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.c"
+"zt.core.jaxb.gen.BindExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f"
+"\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t"
+"\u00001net.sourceforge.czt.core.jaxb.gen.CondExprElementq\u0000~\u0000$sq\u0000~"
+"\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.NumEx"
+"prElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0boppsq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.c"
+"ore.jaxb.gen.RefExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000\u00c0bzq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u00c0bop"
+"psq\u0000~\u0000\u0013\u0000\u00c0bdq\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0000\u00c0baq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net"
+".sourceforge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000$q\u0000~\u0000\u001fsq\u0000~\u0000"
+"\f\u0002g\u009c$ppsq\u0000~\u0000\u0016\u0002g\u009c\u0019q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000"
+"\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0001\u0018\"Mppsr\u0000$com.sun"
+".msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.data"
+"type.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatyp"
+"e.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XS"
+"DatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L"
+"\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor"
+";xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0007booleansr\u00005com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,"
+"com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000"
+"0com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000"
+"\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u0001&q\u0000~\u0001%sq\u0000~\u0000 t\u0000\u0006Mixf"
+"ixt\u0000\u0000q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0007RefExprq\u0000~\u0000\'sr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u00014[\u0000\u0005"
+"tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000m\u0000\u0000\u0000rpur\u0000![Lco"
+"m.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppppppp"
+"pppppppq\u0000~\u0000Epppq\u0000~\u0000Rppppppppppppppppppppppq\u0000~\u0000=pppq\u0000~\u0000Jpppq\u0000"
+"~\u0000Wppppppppppppppppppppppq\u0000~\u0000Bpppq\u0000~\u0000Oppppppppq\u0000~\u0000\u000bppppppppp"
+"ppppq\u0000~\u0000:ppq\u0000~\u00009q\u0000~\u0000Gpppq\u0000~\u0000Tpppppq\u0000~\u00008ppq\u0000~\u0000\u0015q\u0000~\u0000\u00bbq\u0000~\u0000\u00b5q\u0000~\u0000"
+"\u00afq\u0000~\u0000\u00a9q\u0000~\u0000\u00a3q\u0000~\u0000\u009dq\u0000~\u0000\u0097q\u0000~\u0000\u0091q\u0000~\u0000\u008bq\u0000~\u0000\u0085q\u0000~\u0000\u00b4q\u0000~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000"
+"\u009cq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000Lq\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000rq\u0000~\u0000lq\u0000~\u0000fq\u0000~\u0000`q\u0000~\u0000"
+"Zq\u0000~\u00003q\u0000~\u0000+q\u0000~\u0000\u0012q\u0000~\u0000\u007fq\u0000~\u0000yq\u0000~\u0000sq\u0000~\u0000mq\u0000~\u0000gq\u0000~\u0000aq\u0000~\u0000[q\u0000~\u00004q\u0000~\u0000"
+",q\u0000~\u0000\u00baq\u0000~\u0000\u00c1q\u0000~\u0000\u00c0q\u0000~\u0000\u00c7q\u0000~\u0000\rq\u0000~\u0000\u00c6q\u0000~\u0000\u00cdq\u0000~\u0000\u00ccq\u0000~\u0000\u00d3q\u0000~\u0000Qq\u0000~\u0000\u00d2q\u0000~\u0000"
+"\u00d9q\u0000~\u0000\u00d8q\u0000~\u0000Dq\u0000~\u0000\u00dfq\u0000~\u0000\u00deq\u0000~\u0000\u00e5q\u0000~\u0000\u00e4q\u0000~\u0000\u00ebq\u0000~\u0000\u00eaq\u0000~\u0000\u00f1q\u0000~\u0000\u00f0q\u0000~\u0000\u00f7q\u0000~\u0000"
+"\u00f6q\u0000~\u0000?q\u0000~\u0000\u00fdq\u0000~\u0000\u00fcq\u0000~\u0001\u0003q\u0000~\u0001\u0002q\u0000~\u0001\tq\u0000~\u0001\bq\u0000~\u0001\u000fq\u0000~\u0000<q\u0000~\u0001\u000eq\u0000~\u0001\u0015q\u0000~\u0001"
+"\u0014q\u0000~\u0000Iq\u0000~\u0001\u0019ppq\u0000~\u0000Vpppppppppppppq\u0000~\u0000\nppppppppq\u0000~\u0000Apppq\u0000~\u0000Nppp"
+"pppppppppppppppppppppppq\u0000~\u0000Fpppq\u0000~\u0000Sppppppppppppppppppppppq\u0000"
+"~\u0000>pppq\u0000~\u0000Kpppq\u0000~\u0000Xppppppppppq\u0000~\u0000(pppppppppppq\u0000~\u0000Cpppq\u0000~\u0000Ppp"
+"ppppppppppppppppppppq\u0000~\u0000;pppq\u0000~\u0000Hpppq\u0000~\u0000Uppppppppppppppppppp"
+"pppq\u0000~\u0000@pppq\u0000~\u0000Mppq\u0000~\u0000\tpp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Mixfix" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "Mixfix");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
