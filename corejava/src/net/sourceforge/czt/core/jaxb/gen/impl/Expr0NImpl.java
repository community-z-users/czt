//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.25 at 04:40:49 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class Expr0NImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl
    implements net.sourceforge.czt.core.jaxb.gen.Expr0N, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Expr = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.Expr0N.class);
    }

    public java.util.List getExpr() {
        return _Expr;
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeElementBody(context);
        while (idx1 != len1) {
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeAttributes(context);
        while (idx1 != len1) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeAttributeBody(context);
        while (idx1 != len1) {
            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        super.serializeURIs(context);
        while (idx1 != len1) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.Expr0N.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp2~\b0ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u0087\u00b2\u00bfppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0087\u00b2"
+"\u00b4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9pp\u0000s"
+"q\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0087"
+"\u00b2\u0093q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003ex"
+"pq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpsr\u00002com.sun.msv.gramm"
+"ar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f"
+"\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom"
+".sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramm"
+"ar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocal"
+"Namet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u00000net.so"
+"urceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun"
+".com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001dt\u0000\u0004Annst\u0000\u001ehttp://czt.sourc"
+"eforge.net/zmlq\u0000~\u0000\u001csq\u0000~\u0000\u00060\u00f6Ulppsq\u0000~\u0000\u00100\u00f6Uaq\u0000~\u0000\rpsq\u0000~\u0000\u00060\u00f6U^q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0006/n\u00a2\u00b3q\u0000~\u0000\rpsq\u0000~\u0000\u0006-\u00e6\u00f0\bq\u0000~\u0000\rpsq\u0000~\u0000\u0006,_=]q\u0000~\u0000\rpsq\u0000~\u0000\u0006*\u00d7\u008a"
+"\u00b2q\u0000~\u0000\rpsq\u0000~\u0000\u0006)O\u00d8\u0007q\u0000~\u0000\rpsq\u0000~\u0000\u0006\'\u00c8%\\q\u0000~\u0000\rpsq\u0000~\u0000\u0006&@r\u00b1q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0006$\u00b8\u00c0\u0006q\u0000~\u0000\rpsq\u0000~\u0000\u0006#1\r[q\u0000~\u0000\rpsq\u0000~\u0000\u0006!\u00a9Z\u00b0q\u0000~\u0000\rpsq\u0000~\u0000\u0006 !\u00a8\u0005q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0006\u001e\u0099\u00f5Zq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u001d\u0012B\u00afq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u001b\u008a\u0090\u0004q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u001a\u0002\u00ddYq\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0006\u0018{*\u00aeq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0016\u00f3x\u0003q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0015k\u00c5Xq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0013\u00e4\u0012"
+"\u00adq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0012\\`\u0002q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0010\u00d4\u00adWq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000fL\u00fa\u00acq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0006\r\u00c5H\u0001q\u0000~\u0000\rpsq\u0000~\u0000\u0006\f=\u0095Vq\u0000~\u0000\rpsq\u0000~\u0000\u0006\n\u00b5\u00e2\u00abq\u0000~\u0000\rpsq\u0000~\u0000\u0006\t.0\u0000q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0006\u0007\u00a6}Uq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0006\u001e\u00ca\u00aaq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0004\u0097\u0017\u00ffq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0003\u000feTq\u0000~"
+"\u0000\rpsq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000"
+"~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00004net.sourceforge.czt.core.jaxb.ge"
+"n.BindSelExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010"
+"\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00002net.source"
+"forge.czt.core.jaxb.gen.DecorExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\r"
+"p\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.core.jaxb.gen.HideExprElementq"
+"\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q"
+"\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.g"
+"en.NegExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+net.sourceforge.czt."
+"core.jaxb.gen.PowerExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000"
+"~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sou"
+"rceforge.czt.core.jaxb.gen.PreExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~"
+"\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000"
+"\u001dt\u00003net.sourceforge.czt.core.jaxb.gen.RenameExprElementq\u0000~\u0000!"
+"sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\r"
+"pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00002net.sourceforge.czt.core.jaxb.gen.T"
+"hetaExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00005net.sourceforge"
+".czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000"
+"sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001cs"
+"q\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.core.jaxb.gen.CompExprq\u0000~\u0000!sq\u0000~\u0000"
+"\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000"
+"\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.core.jaxb.gen.PipeEx"
+"prq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087"
+"\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.core.jax"
+"b.gen.ProjExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge."
+"czt.core.jaxb.gen.AndExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009epps"
+"q\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.s"
+"ourceforge.czt.core.jaxb.gen.OrExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000"
+"~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~"
+"\u0000\u001dt\u0000-net.sourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000!sq\u0000~\u0000"
+"\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000"
+"\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.IffExp"
+"rq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2"
+"\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.core.jaxb"
+".gen.ApplExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010"
+"\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.source"
+"forge.czt.core.jaxb.gen.ProdExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006"
+"\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt"
+"\u0000+net.sourceforge.czt.core.jaxb.gen.TupleExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9"
+"q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.SetExprq\u0000~\u0000"
+"!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000"
+"\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.core.jaxb.gen."
+"ExistsExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt."
+"core.jaxb.gen.Exists1Exprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009epps"
+"q\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net.s"
+"ourceforge.czt.core.jaxb.gen.ForallExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp"
+"\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001c"
+"sq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.core.jaxb.gen.LambdaExprq\u0000~\u0000!sq"
+"\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.core.jaxb.gen.Let"
+"Exprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013"
+"\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.core.j"
+"axb.gen.MuExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge."
+"czt.core.jaxb.gen.SetCompExprq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2"
+"\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001n"
+"et.sourceforge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001"
+"\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q"
+"\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.core.jaxb.gen.CondExpr"
+"Elementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000"
+"~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.sourceforge.czt.cor"
+"e.jaxb.gen.NumExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009epps"
+"q\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.s"
+"ourceforge.czt.core.jaxb.gen.RefExprElementq\u0000~\u0000!sq\u0000~\u0000\b\u0001\u0087\u00b2\u00a9q\u0000"
+"~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0010\u0001\u0087\u00b2\u0093q\u0000~\u0000\rpsq\u0000~\u0000\u0013\u0001\u0087\u00b2\u0090q\u0000~\u0000\rpq\u0000~\u0000\u0016q\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000net.sourceforge.czt.core.jaxb.gen.SchExprElemen"
+"tq\u0000~\u0000!q\u0000~\u0000\u001csr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash"
+";xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c"
+"\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u0007[\u0000\u0005tablet\u0000![Lcom/sun/ms"
+"v/grammar/Expression;xp\u0000\u0000\u0000e\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Ex"
+"pression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppq\u0000~\u0000.pppppppppppppq\u0000~\u00001pp"
+"pppppppppppq\u0000~\u00004pppppppppppppq\u0000~\u00007pppppppppppppq\u0000~\u0000:pppppppp"
+"pppppq\u0000~\u0000=pppppppppppppq\u0000~\u0000@pppppq\u0000~\u0000\u00b4q\u0000~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000\u009cq\u0000"
+"~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000\u00adq\u0000~\u0000\u00a7q\u0000~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000"
+"~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000wq\u0000~\u0000qq\u0000~\u0000kq\u0000~\u0000eq\u0000~\u0000_q\u0000~\u0000Yq\u0000~\u0000Sq\u0000~\u0000Mq\u0000~\u0000Gq\u0000"
+"~\u0000\u000fq\u0000~\u0000rq\u0000~\u0000lq\u0000~\u0000fq\u0000~\u0000`q\u0000~\u0000Zq\u0000~\u0000Tq\u0000~\u0000Nq\u0000~\u0000Hq\u0000~\u0000\u0012q\u0000~\u0000Cq\u0000~\u0000\u00b3q\u0000"
+"~\u0000\u00baq\u0000~\u0000\u00b9q\u0000~\u0000\u00c0q\u0000~\u0000\u0007q\u0000~\u0000\u00bfq\u0000~\u0000\u00c6q\u0000~\u0000\u00c5q\u0000~\u0000\u00ccq\u0000~\u0000\u00cbq\u0000~\u00000q\u0000~\u0000\u00d2q\u0000~\u0000\u00d1q\u0000"
+"~\u0000\u00d8q\u0000~\u0000\u00d7q\u0000~\u0000\u00deq\u0000~\u0000\u00ddq\u0000~\u0000-q\u0000~\u0000\u00e4q\u0000~\u0000\u00e3q\u0000~\u0000\u00eaq\u0000~\u00003q\u0000~\u0000\u00e9q\u0000~\u0000\u00f0q\u0000~\u0000\u00efq\u0000"
+"~\u0000*q\u0000~\u0000\u00f6q\u0000~\u0000\u00f5q\u0000~\u0000\u00fcq\u0000~\u0000\u00fbq\u0000~\u0001\u0002q\u0000~\u0001\u0001q\u0000~\u0000\'q\u0000~\u0000&q\u0000~\u0000%q\u0000~\u00006ppppppp"
+"ppppppq\u0000~\u00009pppppppppppppq\u0000~\u0000<pppppppppppppq\u0000~\u0000?ppppppppppppp"
+"q\u0000~\u0000Bppppppppppq\u0000~\u0000)ppq\u0000~\u0000Eppppppppppq\u0000~\u0000,ppppppppppq\u0000~\u0000\u0005ppq"
+"\u0000~\u0000/pppppppppppppq\u0000~\u00002pppppppppppppq\u0000~\u00005pppppppppppppq\u0000~\u00008pp"
+"pppppppppppq\u0000~\u0000;pppppppppppppq\u0000~\u0000>pppppppppppppq\u0000~\u0000Apppppppp"
+"ppq\u0000~\u0000(ppq\u0000~\u0000Dppppppppppq\u0000~\u0000+pppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "---");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 2;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.core.jaxb.gen.impl.Expr0NImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            state = 2;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
