//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.28 at 04:14:13 NZDT 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class AndPredImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl
    implements net.sourceforge.czt.core.jaxb.gen.AndPred, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    protected java.lang.String _Op;
    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.AndPred.class);
    }

    public java.lang.String getOp() {
        if (_Op == null) {
            return "And";
        } else {
            return _Op;
        }
    }

    public void setOp(java.lang.String value) {
        _Op = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Op!= null) {
            context.startAttribute("", "Op");
            try {
                context.text(((java.lang.String) _Op), "Op");
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.core.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.AndPred.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0016\u00be\u001anppsq\u0000~\u0000\u0000\u00137\u00f1<ppsq\u0000~\u0000\u0000\u000b"
+"\u0083~\u00c9ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00cf\fVp"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00cf\fKsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0003\u00cf\f@ppsq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000{G\u000fq\u0000~\u0000\u000fpsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bx"
+"q\u0000~\u0000\u0003\u0000{G\fq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u00000net.sourceforge.czt.core.jaxb."
+"gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elem"
+"entssq\u0000~\u0000\b\u0003S\u00c5\u0016ppsq\u0000~\u0000\u0016\u0003S\u00c5\u000bq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001d\u00b9\u00c6ppsr"
+"\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.m"
+"sv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv."
+"datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype"
+".xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNam"
+"eq\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpacePr"
+"ocessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com"
+".sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000"
+"\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\b\u0007\u00b4rnppsq\u0000"
+"~\u0000\b\u00079+Gppsq\u0000~\u0000\b\u0006\u00bd\u00e4 ppsq\u0000~\u0000\b\u0006B\u009c\u00f9ppsq\u0000~\u0000\b\u0005\u00c7U\u00d2ppsq\u0000~\u0000\b\u0005L\u000e\u00abppsq\u0000"
+"~\u0000\b\u0004\u00d0\u00c7\u0084ppsq\u0000~\u0000\b\u0004U\u0080]ppsq\u0000~\u0000\b\u0003\u00da96ppsq\u0000~\u0000\b\u0003^\u00f2\u000fppsq\u0000~\u0000\b\u0002\u00e3\u00aa\u00e8ppsq\u0000"
+"~\u0000\b\u0002hc\u00c1ppsq\u0000~\u0000\b\u0001\u00ed\u001c\u009appsq\u0000~\u0000\b\u0001q\u00d5sppsq\u0000~\u0000\b\u0000\u00f6\u008eLppsq\u0000~\u0000\n\u0000{G%pp\u0000sq"
+"\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000,net.sourceforge.czt.core.jaxb.gen.ExistsPredq\u0000~\u0000$sq\u0000~\u0000"
+"\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.core.jaxb.gen.ForallPred"
+"q\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen."
+"MemPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt."
+"core.jaxb.gen.TruePredq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{"
+"G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourcefo"
+"rge.czt.zpatt.jaxb.gen.JokerPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000"
+"~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~"
+"\u0000 t\u0000)net.sourceforge.czt.core.jaxb.gen.IffPredq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G"
+"%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.core.jaxb.gen.ImpliesPredq\u0000~"
+"\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.Qnt"
+"PredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.cor"
+"e.jaxb.gen.FactElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{"
+"G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourcefo"
+"rge.czt.core.jaxb.gen.Exists1Predq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G"
+"\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(n"
+"et.sourceforge.czt.core.jaxb.gen.OrPredq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000"
+"~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~"
+"\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.AndPredElementq\u0000~\u0000$sq"
+"\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.NegPred"
+"Elementq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000"
+"{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.core.ja"
+"xb.gen.Pred2Elementq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge"
+".czt.core.jaxb.gen.FalsePredq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq"
+"\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.so"
+"urceforge.czt.core.jaxb.gen.ExprPredElementq\u0000~\u0000$sq\u0000~\u0000\b\u0007\u00b4rnpp"
+"sq\u0000~\u0000\b\u00079+Gppsq\u0000~\u0000\b\u0006\u00bd\u00e4 ppsq\u0000~\u0000\b\u0006B\u009c\u00f9ppsq\u0000~\u0000\b\u0005\u00c7U\u00d2ppsq\u0000~\u0000\b\u0005L\u000e\u00abpp"
+"sq\u0000~\u0000\b\u0004\u00d0\u00c7\u0084ppsq\u0000~\u0000\b\u0004U\u0080]ppsq\u0000~\u0000\b\u0003\u00da96ppsq\u0000~\u0000\b\u0003^\u00f2\u000fppsq\u0000~\u0000\b\u0002\u00e3\u00aa\u00e8pp"
+"sq\u0000~\u0000\b\u0002hc\u00c1ppsq\u0000~\u0000\b\u0001\u00ed\u001c\u009appsq\u0000~\u0000\b\u0001q\u00d5sppsq\u0000~\u0000\b\u0000\u00f6\u008eLppsq\u0000~\u0000\n\u0000{G%pp"
+"\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 q\u0000~\u0000Tq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000Zq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000"
+"~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~"
+"\u0000 q\u0000~\u0000`q\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000"
+"{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000fq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000"
+"{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000"
+"~\u0000lq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000rq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001ap"
+"psq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000xq"
+"\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000~q\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000"
+"~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u0084q\u0000~\u0000$"
+"sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u008aq\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000"
+"{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u0090q\u0000~\u0000$sq\u0000~"
+"\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u0096q\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u009cq\u0000~\u0000$sq\u0000~\u0000\n\u0000{"
+"G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u00a2q\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u00a8q\u0000~\u0000$sq\u0000~\u0000\n\u0000{G%pp"
+"\u0000sq\u0000~\u0000\b\u0000{G\u001appsq\u0000~\u0000\u0013\u0000{G\u000fq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000{G\fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 q\u0000~\u0000\u00aeq\u0000~\u0000$sq\u0000~\u0000\b\u0003\u0086)-ppsq\u0000~\u0000\u0016\u0003\u0086)\"q\u0000~\u0000\u000fpsq\u0000~\u0000\'\u0001\u00e3\u00d2Zppsr\u0000)"
+"com.sun.msv.datatype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006value"
+"st\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWith"
+"ValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd."
+"DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheck"
+"FlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L"
+"\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tf"
+"acetNameq\u0000~\u0000!xq\u0000~\u0000.q\u0000~\u0000?t\u0000\u0002Opsr\u00005com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004\u0000\u0000sr\u0000#com.sun.msv"
+".datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000,q\u0000~"
+"\u00001t\u0000\u0006stringq\u0000~\u0001\u001a\u0001q\u0000~\u0001\u001ct\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085"
+"\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0002NLt\u0000\u0003Andt\u0000\u0004Semit\u0000\u0005Chainxq\u0000~\u00007sq\u0000~"
+"\u00008q\u0000~\u0001\u0018q\u0000~\u0000?sq\u0000~\u0000 t\u0000\u0002Opt\u0000\u0000q\u0000~\u0000\u001fsr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001*[\u0000\u0005"
+"tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000g\u0000\u0000\u0000rpur\u0000![Lco"
+"m.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppppppp"
+"pppq\u0000~\u0000Eq\u0000~\u0000\u00b4pppppppppppppppppppq\u0000~\u0000Mq\u0000~\u0000\u00bcpppppppppppppppppq"
+"\u0000~\u0000Bq\u0000~\u0000\u00b1pppppppppppppppppppq\u0000~\u0000Jq\u0000~\u0000\u00b9pppppppppppppppppppppp"
+"ppppq\u0000~\u0000%ppppppppppq\u0000~\u0000\u00c5q\u0000~\u0000Gq\u0000~\u0000\u00c0q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000\u0099q\u0000~\u0000\u0093q"
+"\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000\u00c4q\u0000~\u0000\u00bfq\u0000~\u0000\u00aaq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000\u0098q\u0000~\u0000\u0092q\u0000~\u0000\u008cq\u0000~\u0000\u0086q"
+"\u0000~\u0000\u0080q\u0000~\u0000zq\u0000~\u0000tq\u0000~\u0000nq\u0000~\u0000hq\u0000~\u0000bq\u0000~\u0000\\q\u0000~\u0000Vq\u0000~\u0000Pq\u0000~\u0000\u0012q\u0000~\u0000{q\u0000~\u0000uq"
+"\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000Wq\u0000~\u0000Qq\u0000~\u0000\u0015q\u0000~\u0000\u00caq\u0000~\u0000\u00c9q\u0000~\u0000Dq\u0000~\u0000\u00cfq\u0000~\u0000\u00ceq"
+"\u0000~\u0000\u00d4q\u0000~\u0000\u00d3q\u0000~\u0000\u00d9q\u0000~\u0000\u00d8q\u0000~\u0000\u00deq\u0000~\u0000\u00ddq\u0000~\u0000\u00e3q\u0000~\u0000\u00e2q\u0000~\u0000\u00e8q\u0000~\u0000\u00e7q\u0000~\u0000\u00b6q\u0000~\u0000\u00edq"
+"\u0000~\u0000\u00ecq\u0000~\u0000\u00f2q\u0000~\u0000\u00f1q\u0000~\u0000\u00f7q\u0000~\u0000\u00f6q\u0000~\u0000\u00b3q\u0000~\u0000Lq\u0000~\u0000\u00bbq\u0000~\u0000\u00fcq\u0000~\u0000\u00fbq\u0000~\u0001\u0001q\u0000~\u0001\u0000q"
+"\u0000~\u0001\u0006q\u0000~\u0001\u0005q\u0000~\u0001\u000bq\u0000~\u0001\nq\u0000~\u0000\u0005ppppq\u0000~\u0000\u0006pppq\u0000~\u0000Aq\u0000~\u0000\u00b0pppppppppppppp"
+"pppppq\u0000~\u0000Iq\u0000~\u0000\u00b8ppppppppppppq\u0000~\u0000\u0007ppppppppppppppppq\u0000~\u0000\u0010ppppppp"
+"pq\u0000~\u0000Fq\u0000~\u0000\u00b5pppppppppppq\u0000~\u0000\tpppppppq\u0000~\u0000Nq\u0000~\u0000\u00bdpppppppppppppppp"
+"pq\u0000~\u0000Cq\u0000~\u0000\u00b2ppq\u0000~\u0001\u000eppppppppppppppppq\u0000~\u0000Kq\u0000~\u0000\u00bapppppppppppppppp"
+"pq\u0000~\u0000@q\u0000~\u0000\u00afpppppppppppppppppppq\u0000~\u0000Hq\u0000~\u0000\u00b7pppppppppppppppppppp"
+"p"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Op");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Op = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Op");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Op" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Op");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  2 :
                        if (("Op" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.core.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Op");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
