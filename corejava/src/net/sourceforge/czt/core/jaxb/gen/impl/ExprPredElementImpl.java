//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.08.25 at 04:40:49 NZST 
//


package net.sourceforge.czt.core.jaxb.gen.impl;

public class ExprPredElementImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl
    implements net.sourceforge.czt.core.jaxb.gen.ExprPredElement, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.core.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.core.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "ExprPred";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.core.jaxb.gen.ExprPredElement.class);
    }

    public net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "ExprPred");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBody(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "ExprPred");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeURIs(net.sourceforge.czt.core.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.core.jaxb.gen.ExprPredElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp2~\b-p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u00042~\b\"ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u0087"
+"\u00b2\u00bfppsq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00b4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000s"
+"q\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsr\u0000 com.sun.msv.grammar.OneOrMoreExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003exp"
+"q\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epsr\u00002com."
+"sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com."
+"sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq"
+"\u0000~\u0000\u001at\u00000net.sourceforge.czt.core.jaxb.gen.TermA.AnnsTypet\u0000+ht"
+"tp://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehtt"
+"p://czt.sourceforge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\n0\u00f6U^ppsq\u0000~\u0000\n/n\u00a2\u00b3ppsq\u0000~"
+"\u0000\n-\u00e6\u00f0\bppsq\u0000~\u0000\n,_=]ppsq\u0000~\u0000\n*\u00d7\u008a\u00b2ppsq\u0000~\u0000\n)O\u00d8\u0007ppsq\u0000~\u0000\n\'\u00c8%\\ppsq\u0000~"
+"\u0000\n&@r\u00b1ppsq\u0000~\u0000\n$\u00b8\u00c0\u0006ppsq\u0000~\u0000\n#1\r[ppsq\u0000~\u0000\n!\u00a9Z\u00b0ppsq\u0000~\u0000\n !\u00a8\u0005ppsq\u0000~"
+"\u0000\n\u001e\u0099\u00f5Zppsq\u0000~\u0000\n\u001d\u0012B\u00afppsq\u0000~\u0000\n\u001b\u008a\u0090\u0004ppsq\u0000~\u0000\n\u001a\u0002\u00ddYppsq\u0000~\u0000\n\u0018{*\u00aeppsq\u0000~"
+"\u0000\n\u0016\u00f3x\u0003ppsq\u0000~\u0000\n\u0015k\u00c5Xppsq\u0000~\u0000\n\u0013\u00e4\u0012\u00adppsq\u0000~\u0000\n\u0012\\`\u0002ppsq\u0000~\u0000\n\u0010\u00d4\u00adWppsq\u0000~"
+"\u0000\n\u000fL\u00fa\u00acppsq\u0000~\u0000\n\r\u00c5H\u0001ppsq\u0000~\u0000\n\f=\u0095Vppsq\u0000~\u0000\n\n\u00b5\u00e2\u00abppsq\u0000~\u0000\n\t.0\u0000ppsq\u0000~"
+"\u0000\n\u0007\u00a6}Uppsq\u0000~\u0000\n\u0006\u001e\u00ca\u00aappsq\u0000~\u0000\n\u0004\u0097\u0017\u00ffppsq\u0000~\u0000\n\u0003\u000feTppsq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000"
+"~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u00004net.sourceforge.czt.core.jaxb.gen.BindSelExprElementq\u0000~"
+"\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core.jaxb.gen.Dec"
+"orExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.c"
+"ore.jaxb.gen.HideExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq"
+"\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.so"
+"urceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001"
+"\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+"+net.sourceforge.czt.core.jaxb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9p"
+"p\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.PreExprq\u0000~\u0000\"sq\u0000~"
+"\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.core.jaxb.gen.RenameExp"
+"rElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014"
+"\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.core.j"
+"axb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011"
+"\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005net.source"
+"forge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp"
+"\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.CompExprq\u0000~\u0000\"sq\u0000~"
+"\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.PipeExprq"
+"\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.P"
+"rojExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001"
+"\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.ja"
+"xb.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt."
+"core.jaxb.gen.OrExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforg"
+"e.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009ep"
+"psq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net"
+".sourceforge.czt.core.jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~"
+"\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u00001net.sourceforge.czt.core.jaxb.gen.ApplExprElementq\u0000~\u0000\"sq"
+"\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.core.jaxb.gen.ProdExp"
+"rq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.core.jaxb.gen"
+".TupleExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core"
+".jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.c"
+"zt.core.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000"
+"~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sou"
+"rceforge.czt.core.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~"
+"\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u0000,net.sourceforge.czt.core.jaxb.gen.ForallExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001"
+"\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.core.jaxb.gen.LambdaExprq\u0000"
+"~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.core.jaxb.gen.Le"
+"tExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2"
+"\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.core.jaxb"
+".gen.MuExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.cor"
+"e.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087"
+"\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourcefo"
+"rge.czt.core.jaxb.gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000"
+"\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u00001net.sourceforge.czt.core.jaxb.gen.CondExprElementq\u0000~\u0000\"sq\u0000"
+"~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jaxb.gen.NumExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087"
+"\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.core.jax"
+"b.gen.RefExprElementq\u0000~\u0000\"sq\u0000~\u0000\u0000\u0001\u0087\u00b2\u00a9pp\u0000sq\u0000~\u0000\n\u0001\u0087\u00b2\u009eppsq\u0000~\u0000\u0011\u0001\u0087\u00b2\u0093"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0014\u0001\u0087\u00b2\u0090q\u0000~\u0000\u000epq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforg"
+"e.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\u001et\u0000\bExprPredq\u0000~\u0000"
+"%sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTabl"
+"et\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com"
+".sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005coun"
+"tI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\b[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/"
+"Expression;xp\u0000\u0000\u0000c\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d6"
+"8D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppq\u0000~\u0000-pppppppppppppq\u0000~\u00000pppppppppppp"
+"pq\u0000~\u00003pppppppppppppq\u0000~\u00006pppppppppppppq\u0000~\u00009pppppppppppppq\u0000~\u0000<"
+"pppppppppppppq\u0000~\u0000?pppppq\u0000~\u0000\u00b3q\u0000~\u0000\u00adq\u0000~\u0000\u00a7q\u0000~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000"
+"~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000wq\u0000~\u0000\u00acq\u0000~\u0000\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000~\u0000\u0094q\u0000~\u0000\u008eq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000"
+"~\u0000|q\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000jq\u0000~\u0000dq\u0000~\u0000^q\u0000~\u0000Xq\u0000~\u0000Rq\u0000~\u0000Lq\u0000~\u0000Fq\u0000~\u0000\u0010q\u0000~\u0000qq\u0000"
+"~\u0000kq\u0000~\u0000eq\u0000~\u0000_q\u0000~\u0000Yq\u0000~\u0000Sq\u0000~\u0000Mq\u0000~\u0000Gq\u0000~\u0000\u0013q\u0000~\u0000Bq\u0000~\u0000\u00b2q\u0000~\u0000\u00b9q\u0000~\u0000\u00b8q\u0000"
+"~\u0000\u00bfq\u0000~\u0000\u000bq\u0000~\u0000\u00beq\u0000~\u0000\u00c5q\u0000~\u0000\u00c4q\u0000~\u0000\u00cbq\u0000~\u0000\u00caq\u0000~\u0000/q\u0000~\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u00d7q\u0000~\u0000\u00d6q\u0000"
+"~\u0000\u00ddq\u0000~\u0000\u00dcq\u0000~\u0000,q\u0000~\u0000\u00e3q\u0000~\u0000\u00e2q\u0000~\u0000\u00e9q\u0000~\u00002q\u0000~\u0000\u00e8q\u0000~\u0000\u00efq\u0000~\u0000\u00eeq\u0000~\u0000)q\u0000~\u0000\u00f5q\u0000"
+"~\u0000\u00f4q\u0000~\u0000\u00fbq\u0000~\u0000\u00faq\u0000~\u0001\u0001q\u0000~\u0001\u0000q\u0000~\u0000&ppq\u0000~\u00005pppppppppppppq\u0000~\u00008ppppppp"
+"ppppppq\u0000~\u0000;pppppppppppppq\u0000~\u0000>pppppppppppppq\u0000~\u0000Appppppppppq\u0000~"
+"\u0000(ppq\u0000~\u0000Dpppppppq\u0000~\u0000\tppq\u0000~\u0000+pppppppppppppq\u0000~\u0000.pppppppppppppq"
+"\u0000~\u00001pppppppppppppq\u0000~\u00004pppppppppppppq\u0000~\u00007pppppppppppppq\u0000~\u0000:pp"
+"pppppppppppq\u0000~\u0000=pppppppppppppq\u0000~\u0000@ppppppppppq\u0000~\u0000\'ppq\u0000~\u0000Cpppp"
+"ppppppq\u0000~\u0000*pppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.core.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.core.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredImpl)net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
