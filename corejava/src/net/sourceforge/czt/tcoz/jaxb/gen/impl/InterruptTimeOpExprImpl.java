//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.03.03 at 09:16:01 GMT 
//


package net.sourceforge.czt.tcoz.jaxb.gen.impl;

public class InterruptTimeOpExprImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl
    implements net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.oz.jaxb.gen.OpExpr _NormalOp;
    protected net.sourceforge.czt.z.jaxb.gen.Expr1 _IntOrTimeout;
    protected net.sourceforge.czt.oz.jaxb.gen.OpExpr _HandlerOp;
    public final static java.lang.Class version = (net.sourceforge.czt.tcoz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExpr.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.OpExpr getNormalOp() {
        return _NormalOp;
    }

    public void setNormalOp(net.sourceforge.czt.oz.jaxb.gen.OpExpr value) {
        _NormalOp = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr1 getIntOrTimeout() {
        return _IntOrTimeout;
    }

    public void setIntOrTimeout(net.sourceforge.czt.z.jaxb.gen.Expr1 value) {
        _IntOrTimeout = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.OpExpr getHandlerOp() {
        return _HandlerOp;
    }

    public void setHandlerOp(net.sourceforge.czt.oz.jaxb.gen.OpExpr value) {
        _HandlerOp = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/tcoz", "NormalOp");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _NormalOp), "NormalOp");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _NormalOp), "NormalOp");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _NormalOp), "NormalOp");
        context.endElement();
        context.startElement("http://czt.sourceforge.net/tcoz", "IntOrTimeout");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _IntOrTimeout), "IntOrTimeout");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _IntOrTimeout), "IntOrTimeout");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _IntOrTimeout), "IntOrTimeout");
        context.endElement();
        context.startElement("http://czt.sourceforge.net/tcoz", "HandlerOp");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _HandlerOp), "HandlerOp");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _HandlerOp), "HandlerOp");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _HandlerOp), "HandlerOp");
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen.Term"
+"A.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~"
+"\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.dataty"
+"pe.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Buil"
+"tinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concret"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet"
+"\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://"
+"www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.or"
+"g/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sou"
+"rceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000"
+"\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.c"
+"zt.oz.jaxb.gen.OpExprq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000"
+"\u001fsq\u0000~\u0000 t\u0000\bNormalOpt\u0000\u001fhttp://czt.sourceforge.net/tcozsq\u0000~\u0000\npp"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000$net.sourceforge.czt.z.jaxb.gen.Expr1q\u0000~\u0000$sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\fIntOrTimeoutq\u0000~\u0000Lsq\u0000~"
+"\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000Gq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u0000\tHandlerOpq\u0000~\u0000Lsr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/"
+"msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0014\u0001pq\u0000~\u0000%q\u0000~\u0000Hq\u0000~\u0000Uq\u0000~\u0000`q\u0000~\u0000\u0012"
+"q\u0000~\u0000Cq\u0000~\u0000Pq\u0000~\u0000\\q\u0000~\u0000\tq\u0000~\u0000\u0007q\u0000~\u0000\u0010q\u0000~\u0000Aq\u0000~\u0000Nq\u0000~\u0000Zq\u0000~\u0000\u0006q\u0000~\u0000\u0005q\u0000~\u0000\u0015"
+"q\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000]x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _HandlerOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _HandlerOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("NormalOp" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("IntOrTimeout" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _NormalOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _NormalOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  7 :
                        if (("HandlerOp" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("HandlerOp" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  5 :
                        _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("NormalOp" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  8 :
                        _HandlerOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _NormalOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        if (("IntOrTimeout" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _HandlerOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _NormalOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _HandlerOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        _NormalOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            revertToParentFromText(value);
                            return ;
                        case  5 :
                            _IntOrTimeout = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl.class), 6, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  8 :
                            _HandlerOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 9, value));
                            return ;
                        case  2 :
                            _NormalOp = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OpExprImpl.class), 3, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
