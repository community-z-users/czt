//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.06.09 at 01:28:31 NZST 
//


package net.sourceforge.czt.tcoz.jaxb.gen.impl;

public class EventImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.tcoz.jaxb.gen.Event, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.RefName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.tcoz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.Event.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.RefName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.RefName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/tcoz", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.Event.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpJ\u00bd\u00f3Mppsq\u0000~\u0000\u0000\b\u00d1\u00dcHppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u00050<jppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u00050<_sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u00050<Tppsq\u0000~\u0000\t\u0001w\u00061pp\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001w\u0006\u001bq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001w\u0006\u0018q\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0003\u00b96\u001ep"
+"psq\u0000~\u0000\u0015\u0003\u00b96\u0013q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00f6\u00ef\u0011ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\t\u0003\u00a1\u009f\u00d9pp\u0000sq\u0000~\u0000\u0000\u0003\u00a1\u009f\u00ceppsq\u0000~\u0000"
+"\t\u0001w\u00061pp\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.RefNameq\u0000~\u0000#s"
+"q\u0000~\u0000\u0007\u0002*\u0099\u0098ppsq\u0000~\u0000\u0015\u0002*\u0099\u008dq\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000\u0004Namet\u0000\u001fhttp://czt.sourceforge.net/tcozsq\u0000~\u0000\u0007A\u00ec\u0017\u0000ppsq\u0000~\u0000\u0007A\u00ec"
+"\u0016\u00f5q\u0000~\u0000\u000epsq\u0000~\u0000\u0007@u\u0010\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007>\u00fe\n\u008fq\u0000~\u0000\u000epsq\u0000~\u0000\u0007=\u0087\u0004\\q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0007<\u000f\u00fe)q\u0000~\u0000\u000epsq\u0000~\u0000\u0007:\u0098\u00f7\u00f6q\u0000~\u0000\u000epsq\u0000~\u0000\u00079!\u00f1\u00c3q\u0000~\u0000\u000epsq\u0000~\u0000\u00077\u00aa\u00eb\u0090q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u000763\u00e5]q\u0000~\u0000\u000epsq\u0000~\u0000\u00074\u00bc\u00df*q\u0000~\u0000\u000epsq\u0000~\u0000\u00073E\u00d8\u00f7q\u0000~\u0000\u000epsq\u0000~\u0000\u00071\u00ce\u00d2\u00c4q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u00070W\u00cc\u0091q\u0000~\u0000\u000epsq\u0000~\u0000\u0007.\u00e0\u00c6^q\u0000~\u0000\u000epsq\u0000~\u0000\u0007-i\u00c0+q\u0000~\u0000\u000epsq\u0000~\u0000\u0007+\u00f2"
+"\u00b9\u00f8q\u0000~\u0000\u000epsq\u0000~\u0000\u0007*{\u00b3\u00c5q\u0000~\u0000\u000epsq\u0000~\u0000\u0007)\u0004\u00ad\u0092q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\'\u008d\u00a7_q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0007&\u0016\u00a1,q\u0000~\u0000\u000epsq\u0000~\u0000\u0007$\u009f\u009a\u00f9q\u0000~\u0000\u000epsq\u0000~\u0000\u0007#(\u0094\u00c6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007!\u00b1\u008e\u0093q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0007 :\u0088`q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u001e\u00c3\u0082-q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u001dL{\u00faq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u001b\u00d5u\u00c7q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0007\u001a^o\u0094q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0018\u00e7iaq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0017pc.q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0015\u00f9"
+"\\\u00fbq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0014\u0082V\u00c8q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0013\u000bP\u0095q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0011\u0094Jbq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0007\u0010\u001dD/q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u000e\u00a6=\u00fcq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\r/7\u00c9q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u000b\u00b81\u0096q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0007\nA+cq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\b\u00ca%0q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0007S\u001e\u00fdq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0005\u00dc\u0018\u00caq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0007\u0004e\u0012\u0097q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0002\u00ee\fdq\u0000~\u0000\u000epsq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001"
+"w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"/net.sourceforge.czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001"
+"w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001"
+"w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb."
+"gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt"
+".z.jaxb.gen.ImpliesExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000"
+"~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sou"
+"rceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq"
+"\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0001"
+"w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~"
+"\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.Se"
+"tExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jax"
+"b.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~"
+"\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sour"
+"ceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007"
+"\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z"
+".jaxb.gen.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&pps"
+"q\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.s"
+"ourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000"
+"\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000*net.sourceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061"
+"q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.ja"
+"xb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~"
+"\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sour"
+"ceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w"
+"\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000."
+"net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u0006"
+"1q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jax"
+"b.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge"
+".czt.z.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~"
+"\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sour"
+"ceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w"
+"\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000."
+"net.sourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u0006"
+"1q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElement"
+"q\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen"
+".OrExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.j"
+"axb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001b"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforg"
+"e.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w"
+"\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)"
+"net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000"
+"\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfEx"
+"prq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w"
+"\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.g"
+"en.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006"
+"\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourcefor"
+"ge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000"
+"\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000"
+"~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00007net.sourceforge.czt.oz.jaxb.gen.PromotedAttrExp"
+"rElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.z."
+"jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&pp"
+"sq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net."
+"sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.RefE"
+"xprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt."
+"z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001"
+"w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourcef"
+"orge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&"
+"ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004ne"
+"t.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000#sq\u0000~\u0000"
+"\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001bq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jax"
+"b.gen.ForallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001w\u00061q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001w\u0006&ppsq\u0000~\u0000\u0012\u0001w\u0006\u001b"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001w\u0006\u0018q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforg"
+"e.czt.z.jaxb.gen.NegExprq\u0000~\u0000#q\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar.Ex"
+"pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
+"pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
+"Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u0089"
+"[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0092\u0000\u0000\u0000\u00e6pur\u0000!["
+"Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppq\u0000~\u0000"
+"hppppppppq\u0000~\u0000Uppppppppppppppppppppppppppppq\u0000~\u0000mppppppppq\u0000~\u0000Z"
+"ppppppppppppppppppppppppppppq\u0000~\u0000rppppppppq\u0000~\u0000_pppppppppppppp"
+"ppppppppppppppq\u0000~\u0000wppppppppq\u0000~\u0000dppppppppq\u0000~\u0000Qppppppppppppppp"
+"pppppppppppppq\u0000~\u0000ippppppppq\u0000~\u0000Vppppppppppppppppppppppppppppq"
+"\u0000~\u0000nppppppppq\u0000~\u0000[ppppppppppppppppppppppppppppq\u0000~\u0000sppppppppq\u0000"
+"~\u0000`pppppppppppppppppppppppq\u0000~\u0000@ppppq\u0000~\u0000xppppppppq\u0000~\u0000eppppppp"
+"pq\u0000~\u0000Rppppppppppppppppppppppppppppq\u0000~\u0000jppppppppq\u0000~\u0000Wpppppppp"
+"ppppppppppppppppppppq\u0000~\u0000oppppppppq\u0000~\u0000\\pppppppppppppppppppppp"
+"ppppppq\u0000~\u0000tpppq\u0000~\u0000\u0005ppppq\u0000~\u0000apppppppq\u0000~\u0000\u000fq\u0000~\u0000Nppppppppppq\u0000~\u0000M"
+"q\u0000~\u0000Gpppppppq\u0000~\u0000yq\u0000~\u0000\bpppppppq\u0000~\u0000fppppppppq\u0000~\u0000Sppppppppppppp"
+"pppppppppppppppq\u0000~\u0000kppppppppq\u0000~\u0000Xppppppppppppppppppppppppppp"
+"pq\u0000~\u0000pppppppppq\u0000~\u0000]ppppppppppppppppppppppppppppq\u0000~\u0000upppppppp"
+"q\u0000~\u0000bppppq\u0000~\u0000$pq\u0000~\u0001Hq\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018"
+"q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001Gq\u0000~\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011"
+"q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0001\u0006q\u0000~\u0000\u00ffq\u0000~\u0001\u0000q\u0000~\u0000\u00f9q\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq\u0000~\u0000gq\u0000~\u0000\u00ee"
+"q\u0000~\u0000\u00e7q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq\u0000~\u0000\u00dcq\u0000~\u0000\u0014q\u0000~\u0000Cq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008e"
+"q\u0000~\u0000\u0094q\u0000~\u0000\u0011q\u0000~\u0000Bq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000\u00ab"
+"q\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000~\u0000\u00c3q\u0000~\u0000\u00c9q\u0000~\u0000\u00cfq\u0000~\u0000\u00d5q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000\u00b2"
+"q\u0000~\u0000lq\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u00c4q\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0000\u00d6q\u0000~\u0001Nq\u0000~\u0001Mq\u0000~\u0000Yq\u0000~\u0001Tq\u0000~\u0001S"
+"q\u0000~\u0001Zq\u0000~\u0001Yq\u0000~\u0001`q\u0000~\u0001_q\u0000~\u0000Tq\u0000~\u0001fq\u0000~\u0001eq\u0000~\u0001lq\u0000~\u0001kq\u0000~\u0001rq\u0000~\u0001qq\u0000~\u0001x"
+"q\u0000~\u0001wq\u0000~\u0001~q\u0000~\u0001}q\u0000~\u0000Oq\u0000~\u0001\u0084q\u0000~\u0001\u0083ppppppppq\u0000~\u0000qppppppppq\u0000~\u0000^pppp"
+"ppppppppppppppppppppppppq\u0000~\u0000vppppppppq\u0000~\u0000cq\u0000~\u0000\u0006pppppppq\u0000~\u0000Pp"
+"pppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 5;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 5;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        state = 5;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            state = 5;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  6 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, value));
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
