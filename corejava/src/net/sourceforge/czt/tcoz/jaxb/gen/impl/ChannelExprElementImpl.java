//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.11.04 at 10:24:55 GMT 
//


package net.sourceforge.czt.tcoz.jaxb.gen.impl;

public class ChannelExprElementImpl
    extends net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl
    implements net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.tcoz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/tcoz";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "ChannelExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/tcoz", "ChannelExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0014\u00b2\u00b4\u00dcp"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0014\u00b2\u00b4\u00d1ppsq\u0000~\u0000\u0007\u0013\u0094g\u0000ppsq\u0000~\u0000\u0007\u000f\u009a1\u00a4ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u00a0\u0014\u00cappsq\u0000~\u0000\u0000\u0001\u00a0\u0014\u00bfsr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0001\u00a0\u0014\u00b4ppsq\u0000~\u0000\u0000\u0000O\u0083zpp\u0000sq\u0000~\u0000\f\u0000O\u0083opp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000O\u0083dq\u0000~\u0000\u0010psr\u0000"
+" com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tna"
+"meClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000O\u0083aq\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expressi"
+"on$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 c"
+"om.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gr"
+"ammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.s"
+"un.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljav"
+"a/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000-net.sourceforge.c"
+"zt.z.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\f\u0001P\u00915ppsq\u0000~\u0000\u0017\u0001P\u0091*q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0004\u0000\u00ec\u00cf\u00f7ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\""
+"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~"
+"\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq"
+"\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000"
+"\f\r\u00fa\u001c\u00d5ppsq\u0000~\u0000\f\r\u00fa\u001c\u00caq\u0000~\u0000\u0010psq\u0000~\u0000\f\r\u00aa\u0099Nq\u0000~\u0000\u0010psq\u0000~\u0000\f\r[\u0015\u00d2q\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\r\u000b\u0092Vq\u0000~\u0000\u0010psq\u0000~\u0000\f\f\u00bc\u000e\u00daq\u0000~\u0000\u0010psq\u0000~\u0000\f\fl\u008b^q\u0000~\u0000\u0010psq\u0000~\u0000\f\f\u001d\u0007\u00e2q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u000b\u00cd\u0084fq\u0000~\u0000\u0010psq\u0000~\u0000\f\u000b~\u0000\u00eaq\u0000~\u0000\u0010psq\u0000~\u0000\f\u000b.}nq\u0000~\u0000\u0010psq\u0000~\u0000\f\n\u00de\u00f9\u00f2q\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\n\u008fvvq\u0000~\u0000\u0010psq\u0000~\u0000\f\n?\u00f2\u00faq\u0000~\u0000\u0010psq\u0000~\u0000\f\t\u00f0o~q\u0000~\u0000\u0010psq\u0000~\u0000\f\t\u00a0\u00ec"
+"\u0002q\u0000~\u0000\u0010psq\u0000~\u0000\f\tQh\u0086q\u0000~\u0000\u0010psq\u0000~\u0000\f\t\u0001\u00e5\nq\u0000~\u0000\u0010psq\u0000~\u0000\f\b\u00b2a\u008eq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\bb\u00de\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\f\b\u0013Z\u0096q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0007\u00c3\u00d7\u001aq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0007tS\u009eq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u0007$\u00d0\"q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0006\u00d5L\u00a6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0006\u0085\u00c9*q\u0000~\u0000\u0010psq\u0000~\u0000\f\u00066E\u00aeq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\u0005\u00e6\u00c22q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0005\u0097>\u00b6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0005G\u00bb:q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004\u00f87"
+"\u00beq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004\u00a8\u00b4Bq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004Y0\u00c6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004\t\u00adJq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\u0003\u00ba)\u00ceq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0003j\u00a6Rq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0003\u001b\"\u00d6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0002\u00cb\u009fZq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u0002|\u001b\u00deq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0002,\u0098bq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0001\u00dd\u0014\u00e6q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0001\u008d\u0091jq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\u0001>\r\u00eeq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0000\u00ee\u008arq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0000\u009f\u0006\u00f6q\u0000~\u0000\u0010psq\u0000~\u0000\u0000\u0000O\u0083"
+"zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExpr"
+"Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000"
+"~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.j"
+"axb.gen.HideExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000"
+"~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sou"
+"rceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000"
+"O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000"
+"0net.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000"
+"\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~"
+"\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~"
+"\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.Co"
+"mpExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~"
+"\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourceforge.czt.oz.j"
+"axb.gen.PolyExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083d"
+"q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00001net.sourceforg"
+"e.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000"
+"~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~"
+"\u0000!t\u0000/net.sourceforge.czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000%sq\u0000"
+"~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000"
+"~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsE"
+"xprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000"
+"O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000%net.sourceforge.czt.z.jaxb."
+"gen.MuExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010p"
+"sq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt."
+"z.jaxb.gen.CondExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083opp"
+"sq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net."
+"sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000"
+"\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~"
+"\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000"
+"%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000"
+"\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.Sch"
+"Expr2Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000"
+"\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000,net.sourceforge.cz"
+"t.z.jaxb.gen.Expr2NElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083opp"
+"sq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net."
+"sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq"
+"\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000"
+"~\u0000!t\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000%sq\u0000~\u0000\u0000"
+"\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExpr"
+"q\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083a"
+"q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000/net.sourceforge.czt.z.jaxb.gen"
+".DecorExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083"
+"dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00004net.sourcefor"
+"ge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p"
+"\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 "
+"sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000"
+"O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprEl"
+"ementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourceforge.czt.z.jax"
+"b.gen.TupleExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq"
+"\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+net.sourceforge"
+".czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083o"
+"ppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.ne"
+"t.sourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq"
+"\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001e"
+"q\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElement"
+"q\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083a"
+"q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00002net.sourceforge.czt.z.jaxb.gen"
+".TupleSelExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014"
+"\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.source"
+"forge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f"
+"\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t"
+"\u00007net.sourceforge.czt.oz.jaxb.gen.PromotedAttrExprElementq\u0000~"
+"\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~"
+"\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.Se"
+"tExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourceforge.czt.oz.ja"
+"xb.gen.SelfExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq"
+"\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge"
+".czt.z.jaxb.gen.LambdaExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083opp"
+"sq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000,net."
+"sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010"
+"p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000"
+" sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000%sq\u0000~\u0000\u0000"
+"\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000"
+"%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000"
+"\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.Iff"
+"Exprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017"
+"\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb"
+".gen.NegExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000"
+"\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.cz"
+"t.z.jaxb.gen.Exists1Exprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq"
+"\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.so"
+"urceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p"
+"\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 "
+"sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O"
+"\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000"
+"~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprEleme"
+"ntq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O"
+"\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.g"
+"en.ProdExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083oppsq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010"
+"psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt"
+".z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000O\u0083zq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000O\u0083op"
+"psq\u0000~\u0000\u0014\u0000O\u0083dq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000O\u0083aq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net"
+".sourceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\u0000\u0003\u00fa5Wp"
+"p\u0000sq\u0000~\u0000\u0007\u0003\u00fa5Lppsq\u0000~\u0000(\u0001\u00f5\u00baeppsr\u0000)com.sun.msv.datatype.xsd.Enume"
+"rationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun"
+".msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000"
+"\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000"
+"\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv"
+"/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/"
+"datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\"xq\u0000~\u0000/t\u0000\u001fhttp://c"
+"zt.sourceforge.net/tcozt\u0000\u000bChannelTypesr\u00005com.sun.msv.datatyp"
+"e.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005\u0000\u0000sr\u0000#com"
+".sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidx"
+"q\u0000~\u0000-q\u0000~\u00002t\u0000\u0006stringq\u0000~\u0001\u0089\u0001q\u0000~\u0001\u008bt\u0000\u000benumerationsr\u0000\u0011java.util.Ha"
+"shSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0006Sensort\u0000\bActuatort\u0000\u0004Chanx"
+"q\u0000~\u00008sq\u0000~\u00009q\u0000~\u0001\u0087q\u0000~\u0001\u0086sq\u0000~\u0000\f\u0002\u0004z\u00e2ppsq\u0000~\u0000\u0017\u0002\u0004z\u00d7q\u0000~\u0000\u0010pq\u0000~\u0000+sq\u0000~\u0000!"
+"q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bChannelTypeq\u0000~\u0001\u0086sq\u0000~\u0000\f\u0001\u001eM\u00ccppsq\u0000~\u0000\u0017\u0001\u001e"
+"M\u00c1q\u0000~\u0000\u0010pq\u0000~\u0000+sq\u0000~\u0000!q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bChannelExprq\u0000~\u0001\u0086s"
+"r\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet"
+"\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.s"
+"un.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI"
+"\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u009f[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Ex"
+"pression;xp\u0000\u0000\u0000\u0092\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D"
+"\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0001\u0006q\u0000~\u0000\u00ffq\u0000~\u0001\u0000q\u0000~\u0000\u00f9q"
+"\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq\u0000~\u0000\u00eeq\u0000~\u0000\u00e7q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq\u0000~\u0000\u00dcq\u0000~\u0000\u0016q"
+"\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u0013q\u0000~\u0000jq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q"
+"\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000\u00abq\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000~\u0000\u00c3q"
+"\u0000~\u0000\u00c9q\u0000~\u0000\u00cfq\u0000~\u0000\u00d5q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000fq\u0000~\u0000\u00b2q\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u00c4q"
+"\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0000\u00d6q\u0000~\u0000eq\u0000~\u0000iq\u0000~\u0000mq\u0000~\u0000hq\u0000~\u0000dq\u0000~\u0000lq\u0000~\u0000gq\u0000~\u0000kq\u0000~\u0001Nq"
+"\u0000~\u0001Mq\u0000~\u0000cq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0001Zq\u0000~\u0001Yq\u0000~\u0001`q\u0000~\u0000bq\u0000~\u0001_q\u0000~\u0001fq\u0000~\u0001eq\u0000~\u0001lq"
+"\u0000~\u0001kq\u0000~\u0000aq\u0000~\u0001rq\u0000~\u0001qq\u0000~\u0001xq\u0000~\u0001wpq\u0000~\u0000`ppq\u0000~\u0001\u0099ppq\u0000~\u0000_pppppq\u0000~\u0000^p"
+"ppppq\u0000~\u0000]pppppq\u0000~\u0000\\pppppq\u0000~\u0000[pppppq\u0000~\u0000Zpppppq\u0000~\u0000Ypppppq\u0000~\u0000Xp"
+"ppppq\u0000~\u0000Wpppppq\u0000~\u0000Vpppppq\u0000~\u0000Upppppq\u0000~\u0000Tpppppq\u0000~\u0000Spppppq\u0000~\u0000Rp"
+"ppppq\u0000~\u0000Qpppppq\u0000~\u0000Ppppppq\u0000~\u0000Opppppq\u0000~\u0000Npq\u0000~\u0000\u000bpppq\u0000~\u0000Mpppppq\u0000"
+"~\u0000Lpppppq\u0000~\u0000Kpppppq\u0000~\u0000Jpppppq\u0000~\u0000Ipppppq\u0000~\u0000Hpppppq\u0000~\u0000Gpppppq\u0000"
+"~\u0000Fpppppq\u0000~\u0000Epppppq\u0000~\u0000Dpppppq\u0000~\u0000Cpppppq\u0000~\u0000Bppppppppppq\u0000~\u0000App"
+"ppppppppppq\u0000~\u0001}pppppppppppppppppppppppppppppppq\u0000~\u0001\u0094ppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\nppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppppppppppp"
+"ppppppppppppppppppppppppq\u0000~\u0000&ppppppppq\u0000~\u0000\u0011pppppppppppppppppp"
+"pppq\u0000~\u0000\rpppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppq\u0000~\u0001Hq\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018"
+"q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001Gq\u0000~\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelType" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
