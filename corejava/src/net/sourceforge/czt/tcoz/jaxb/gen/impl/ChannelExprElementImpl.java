//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.12.09 at 10:30:14 NZDT 
//


package net.sourceforge.czt.tcoz.jaxb.gen.impl;

public class ChannelExprElementImpl
    extends net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl
    implements net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.tcoz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/tcoz";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "ChannelExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/tcoz", "ChannelExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u001fhu\u0012p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u001fhu\u0007ppsq\u0000~\u0000\u0007\u001d\u00b6\u00ecJppsq\u0000~\u0000\u0007\u0019xv\u00bfppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0002\u00c2\u008d\bppsq\u0000~\u0000\u0000\u0002\u00c2\u008c\u00fdsr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0002\u00c2\u008c\u00f2ppsq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtpp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000\u008d\u00cdiq\u0000~\u0000\u0010psr\u0000"
+" com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tna"
+"meClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000\u008d\u00cdfq\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expressi"
+"on$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 c"
+"om.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gr"
+"ammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.s"
+"un.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljav"
+"a/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000-net.sourceforge.c"
+"zt.z.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\f\u00024\u00bfnppsq\u0000~\u0000\u0017\u00024\u00bfcq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0004\u0001s.\u00e2ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\""
+"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~"
+"\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq"
+"\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000"
+"\f\u0016\u00b5\u00e9\u00b2ppsq\u0000~\u0000\f\u0016\u00b5\u00e9\u00a7q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0016(\u001c&q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0015\u009aN\u00a5q\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\u0015\f\u0081$q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0014~\u00b3\u00a3q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0013\u00f0\u00e6\"q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0013c\u0018\u00a1q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u0012\u00d5K q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0012G}\u009fq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0011\u00b9\u00b0\u001eq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0011+\u00e2\u009dq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\u0010\u009e\u0015\u001cq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0010\u0010G\u009bq\u0000~\u0000\u0010psq\u0000~\u0000\f\u000f\u0082z\u001aq\u0000~\u0000\u0010psq\u0000~\u0000\f\u000e\u00f4\u00ac"
+"\u0099q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000ef\u00df\u0018q\u0000~\u0000\u0010psq\u0000~\u0000\f\r\u00d9\u0011\u0097q\u0000~\u0000\u0010psq\u0000~\u0000\f\rKD\u0016q\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\f\u00bdv\u0095q\u0000~\u0000\u0010psq\u0000~\u0000\f\f/\u00a9\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000b\u00a1\u00db\u0093q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000b\u0014\u000e\u0012q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\n\u0086@\u0091q\u0000~\u0000\u0010psq\u0000~\u0000\f\t\u00f8s\u0010q\u0000~\u0000\u0010psq\u0000~\u0000\f\tj\u00a5\u008fq\u0000~\u0000\u0010psq\u0000~\u0000\f\b\u00dc\u00d8\u000eq\u0000~"
+"\u0000\u0010psq\u0000~\u0000\f\bO\n\u008dq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0007\u00c1=\fq\u0000~\u0000\u0010psq\u0000~\u0000\f\u00073o\u008bq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0006\u00a5\u00a2"
+"\nq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0006\u0017\u00d4\u0089q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0005\u008a\u0007\bq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004\u00fc9\u0087q\u0000~\u0000\u0010psq\u0000~\u0000"
+"\f\u0004nl\u0006q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0003\u00e0\u009e\u0085q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0003R\u00d1\u0004q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0002\u00c5\u0003\u0083q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\f\u000276\u0002q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0001\u00a9h\u0081q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0001\u001b\u009b\u0000q\u0000~\u0000\u0010psq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000"
+"~\u0000 sq\u0000~\u0000!t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000%sq\u0000~\u0000\u0000"
+"\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~"
+"\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~"
+"\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge.czt.z.jaxb.gen.Ex"
+"istsExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq"
+"\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00002net.sourceforge.czt.z."
+"jaxb.gen.TupleSelExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdt"
+"ppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00004ne"
+"t.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000%sq\u0000~\u0000"
+"\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000"
+"\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprEl"
+"ementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000,net.sourceforge.czt.z.jax"
+"b.gen.Expr2NElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000"
+"\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourcef"
+"orge.czt.z.jaxb.gen.LetExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtp"
+"psq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net"
+".sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000"
+"~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~"
+"\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq"
+"\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001e"
+"q\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000"
+"%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000"
+"\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.Pre"
+"Exprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017"
+"\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb"
+".gen.BindExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014"
+"\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.source"
+"forge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000"
+"~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~"
+"\u0000!t\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007f"
+"q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.czt.z.jaxb.gen.SetCompExprq\u0000~"
+"\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~"
+"\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.Ne"
+"gExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000"
+"\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jax"
+"b.gen.ProdExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000"
+"~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge."
+"czt.z.jaxb.gen.AndExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~"
+"\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00003net.sour"
+"ceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000"
+"~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq"
+"\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000%s"
+"q\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010p"
+"q\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.NumEx"
+"prElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z"
+".jaxb.gen.CondExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtpps"
+"q\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.s"
+"ourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq"
+"\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000"
+"~\u0000!t\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000"
+"~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq"
+"\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000"
+"~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000"
+"~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.H"
+"ideExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000"
+"~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000,net.sourceforge."
+"czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdt"
+"ppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.ne"
+"t.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq"
+"\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001e"
+"q\u0000~\u0000 sq\u0000~\u0000!t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprElem"
+"entq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000"
+"\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb."
+"gen.PipeExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000"
+"\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.cz"
+"t.z.jaxb.gen.ProjExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000"
+"\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000/net.sourc"
+"eforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000"
+"sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 s"
+"q\u0000~\u0000!t\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000"
+"\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Ele"
+"mentq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017"
+"\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.czt.z.jaxb"
+".gen.Exists1Exprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdi"
+"q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+net.sourceforg"
+"e.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cd"
+"tppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+n"
+"et.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000"
+"~\u0000 sq\u0000~\u0000!t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq"
+"\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq"
+"\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen."
+"ApplExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u008d\u00cd\u007fq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0000\u008d\u00cdtppsq\u0000~\u0000\u0014\u0000\u008d\u00cdiq"
+"\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000\u008d\u00cdfq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00000net.sourceforge"
+".czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\u0000\u0004>u\u0086pp\u0000sq\u0000~"
+"\u0000\u0007\u0004>u{ppsq\u0000~\u0000(\u00013\u00b1zppsr\u0000)com.sun.msv.datatype.xsd.Enumeration"
+"Facet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv.d"
+"atatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*c"
+"om.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFac"
+"etFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datat"
+"ype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/dataty"
+"pe/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\"xq\u0000~\u0000/t\u0000\u001fhttp://czt.sou"
+"rceforge.net/tcozt\u0000\u000bChannelTypesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005\u0000\u0000sr\u0000#com.sun.m"
+"sv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000-q"
+"\u0000~\u00002t\u0000\u0006stringq\u0000~\u0001m\u0001q\u0000~\u0001ot\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00ba"
+"D\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0003t\u0000\u0006Sensort\u0000\bActuatort\u0000\u0004Chanxq\u0000~\u00008s"
+"q\u0000~\u00009q\u0000~\u0001kq\u0000~\u0001jsq\u0000~\u0000\f\u0003\n\u00c3\u00fcppsq\u0000~\u0000\u0017\u0003\n\u00c3\u00f1q\u0000~\u0000\u0010pq\u0000~\u0000+sq\u0000~\u0000!q\u0000~\u0000<q"
+"\u0000~\u0000=q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bChannelTypeq\u0000~\u0001jsq\u0000~\u0000\f\u0001\u00b1\u0088\u00b8ppsq\u0000~\u0000\u0017\u0001\u00b1\u0088\u00adq\u0000~\u0000"
+"\u0010pq\u0000~\u0000+sq\u0000~\u0000!q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000 sq\u0000~\u0000!t\u0000\u000bChannelExprq\u0000~\u0001jsr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthre"
+"sholdL\u0000\u0006parentq\u0000~\u0001\u0083[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressi"
+"on;xp\u0000\u0000\u0000\u0086\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002"
+"\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppppppppppppppppppppppq\u0000~\u0001apppppppppppq\u0000~\u0000Nq\u0000~\u0000"
+"`ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Cq\u0000~\u0000Uq\u0000~\u0000gpppp"
+"pppppppppppppppppppq\u0000~\u0001}ppppppppppppppppq\u0000~\u0000Jq\u0000~\u0000\\pppppppppp"
+"pppppppppppppppppppppppppppppppq\u0000~\u0000Qq\u0000~\u0000cppppppppppppppppppp"
+"pq\u0000~\u0001Dq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0001,q\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\bq\u0000~\u0001"
+"Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0000Xq\u0000~\u0001\u0007q\u0000~\u0001"
+"\u0001q\u0000~\u0001\u0002q\u0000~\u0000\u00fbq\u0000~\u0000\u00fcq\u0000~\u0000\u00f5q\u0000~\u0000\u00f6q\u0000~\u0000\u00efq\u0000~\u0000\u00f0q\u0000~\u0000\u00e9q\u0000~\u0000\u00eaq\u0000~\u0000\u00e3q\u0000~\u0000\u00e4q\u0000~\u0000"
+"\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u0016q\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000~q\u0000~\u0000\u0084q\u0000~\u0000\u008aq\u0000~\u0000\u0090q\u0000~\u0000"
+"\u0096q\u0000~\u0000\u0013q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000"
+"\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000Mq\u0000~\u0000_q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000\u00d1q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000"
+"\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6q\u0000~\u0000\u00ccq\u0000~\u0000\u00d2q\u0000~\u0000Fq\u0000~\u0001Jq\u0000~\u0001Iq\u0000~\u0001Pq\u0000~\u0001"
+"Oq\u0000~\u0001Vq\u0000~\u0001Uq\u0000~\u0001\\q\u0000~\u0001[q\u0000~\u0000\u000bq\u0000~\u0001xpppppppppppppppq\u0000~\u0000Bq\u0000~\u0000Tq\u0000~\u0000"
+"fppppppppq\u0000~\u0000Appppppppppq\u0000~\u0000\nppppppppppppppppppppq\u0000~\u0000Iq\u0000~\u0000[p"
+"ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Pq\u0000~\u0000bpppppppppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0000Eq\u0000~\u0000Wq\u0000~\u0000ipppq\u0000~\u0000\tppppppp"
+"pppppppppppppppppppppppppppppq\u0000~\u0000Lq\u0000~\u0000^ppppppppppppppppppppp"
+"ppppq\u0000~\u0000&pppppppppppppppq\u0000~\u0000Sq\u0000~\u0000epppppppppppppppppppppppppp"
+"ppppppppppppppq\u0000~\u0000Hq\u0000~\u0000Zpppppppppppppppppppppppppppppppppppp"
+"pppppq\u0000~\u0000Oq\u0000~\u0000appppppppppppppppppppppppppppppppppppppppq\u0000~\u0000D"
+"q\u0000~\u0000Vq\u0000~\u0000hppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Kq\u0000~\u0000]"
+"ppppppppppppppppppppppppppppq\u0000~\u0000\u0011ppppppppppppq\u0000~\u0000Rq\u0000~\u0000dppppp"
+"ppq\u0000~\u0000\rppppppppppppppppppppppppppppppppq\u0000~\u0000Gq\u0000~\u0000Ypp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelType" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
