//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.23 at 08:45:41 NZST 
//


package net.sourceforge.czt.tcoz.jaxb.gen.impl;

public class WaitProExprImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl
    implements net.sourceforge.czt.tcoz.jaxb.gen.WaitProExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    public final static java.lang.Class version = (net.sourceforge.czt.tcoz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.WaitProExpr.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.tcoz.jaxb.gen.WaitProExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp7\u00cf\u00f2\u008cppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00e4\u0083eppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00e4\u0083"
+"Zsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001\u00e4\u0083Oppsq"
+"\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00012\u00be\u001cq\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u00012\u00be\u0019q\u0000~\u0000\rpsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+http:/"
+"/java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006\u0000\u00b1\u00c5\u0018ppsq\u0000~\u0000\u0014\u0000\u00b1\u00c5\rq"
+"\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0089\u0017\u00b2ppsr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fname"
+"spaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp://czt.source"
+"forge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u00065\u00ebo\"ppsq\u0000~\u0000\u00064\u00b8\u00b0\u00eeppsq\u0000~\u0000\u00063\u0085\u00f2\u00bappsq\u0000~\u0000\u0006"
+"2S4\u0086ppsq\u0000~\u0000\u00061 vRppsq\u0000~\u0000\u0006/\u00ed\u00b8\u001eppsq\u0000~\u0000\u0006.\u00ba\u00f9\u00eappsq\u0000~\u0000\u0006-\u0088;\u00b6ppsq\u0000~\u0000\u0006"
+",U}\u0082ppsq\u0000~\u0000\u0006+\"\u00bfNppsq\u0000~\u0000\u0006)\u00f0\u0001\u001appsq\u0000~\u0000\u0006(\u00bdB\u00e6ppsq\u0000~\u0000\u0006\'\u008a\u0084\u00b2ppsq\u0000~\u0000\u0006"
+"&W\u00c6~ppsq\u0000~\u0000\u0006%%\bJppsq\u0000~\u0000\u0006#\u00f2J\u0016ppsq\u0000~\u0000\u0006\"\u00bf\u008b\u00e2ppsq\u0000~\u0000\u0006!\u008c\u00cd\u00aeppsq\u0000~\u0000\u0006"
+" Z\u000fzppsq\u0000~\u0000\u0006\u001f\'QFppsq\u0000~\u0000\u0006\u001d\u00f4\u0093\u0012ppsq\u0000~\u0000\u0006\u001c\u00c1\u00d4\u00deppsq\u0000~\u0000\u0006\u001b\u008f\u0016\u00aappsq\u0000~\u0000\u0006"
+"\u001a\\Xvppsq\u0000~\u0000\u0006\u0019)\u009aBppsq\u0000~\u0000\u0006\u0017\u00f6\u00dc\u000eppsq\u0000~\u0000\u0006\u0016\u00c4\u001d\u00dappsq\u0000~\u0000\u0006\u0015\u0091_\u00a6ppsq\u0000~\u0000\u0006"
+"\u0014^\u00a1rppsq\u0000~\u0000\u0006\u0013+\u00e3>ppsq\u0000~\u0000\u0006\u0011\u00f9%\nppsq\u0000~\u0000\u0006\u0010\u00c6f\u00d6ppsq\u0000~\u0000\u0006\u000f\u0093\u00a8\u00a2ppsq\u0000~\u0000\u0006"
+"\u000e`\u00eanppsq\u0000~\u0000\u0006\r.,:ppsq\u0000~\u0000\u0006\u000b\u00fbn\u0006ppsq\u0000~\u0000\u0006\n\u00c8\u00af\u00d2ppsq\u0000~\u0000\u0006\t\u0095\u00f1\u009eppsq\u0000~\u0000\u0006"
+"\bc3jppsq\u0000~\u0000\u0006\u00070u6ppsq\u0000~\u0000\u0006\u0005\u00fd\u00b7\u0002ppsq\u0000~\u0000\u0006\u0004\u00ca\u00f8\u00ceppsq\u0000~\u0000\u0006\u0003\u0098:\u009appsq\u0000~\u0000\u0006"
+"\u0002e|fppsq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~"
+"\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.tcoz.jaxb.gen"
+".ChannelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge"
+".czt.z.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000"
+"~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sou"
+"rceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012"
+"\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+"
+"net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp"
+"\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000"
+"\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000\""
+"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012"
+"\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.oz.jaxb."
+"gen.ContainmentExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge"
+".czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000"
+"~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sou"
+"rceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'p"
+"psq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net"
+".sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000"
+"\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp"
+"\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000\""
+"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1Expr"
+"Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001"
+"2\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb."
+"gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge"
+".czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u0001"
+"2\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+"&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000"
+"~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000\"sq\u0000~\u0000"
+"\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Eleme"
+"ntq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000"
+"~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.oz.jaxb.gen."
+"SelfExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014"
+"\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb"
+".gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z"
+".jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.c"
+"zt.z.jaxb.gen.Expr2Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~"
+"\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sour"
+"ceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'p"
+"psq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net"
+".sourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000"
+"sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000"
+"\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000\"sq"
+"\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000"
+"~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.ApplE"
+"xprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~"
+"\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.ja"
+"xb.gen.TupleExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.cz"
+"t.z.jaxb.gen.RenameExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'pp"
+"sq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net."
+"sourceforge.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2"
+"pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000"
+"\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012"
+"\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.g"
+"en.OrExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.z.jax"
+"b.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012"
+"\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourcefo"
+"rge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'"
+"ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.ne"
+"t.sourceforge.czt.z.jaxb.gen.CondExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2p"
+"p\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u00007net.sourceforge.czt.oz.jaxb.gen.PromotedAttrExprEl"
+"ementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be"
+"\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.ge"
+"n.NegExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.z.jax"
+"b.gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012"
+"\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourcefo"
+"rge.czt.z.jaxb.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~"
+"\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sour"
+"ceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u00012\u00be2pp"
+"\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000\"sq\u0000~\u0000\b\u00012"
+"\u00be2pp\u0000sq\u0000~\u0000\u0006\u00012\u00be\'ppsq\u0000~\u0000\u0011\u00012\u00be\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u00012\u00be\u0019q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000\"s"
+"r\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet"
+"\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.s"
+"un.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI"
+"\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001y[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Ex"
+"pression;xp\u0000\u0000\u0000\u008c\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D"
+"\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppq\u0000~\u0000Gq\u0000~\u0000\u000eppppppppppppppppq\u0000~\u0000Xppppq\u0000~\u0000\u0007p"
+"pppppppppppq\u0000~\u0000ippppppq\u0000~\u0000Epppppppppppppppppq\u0000~\u0000Vppppppppppp"
+"ppppppq\u0000~\u0000gppppppq\u0000~\u0000Cpppppppppppppppppq\u0000~\u0000Tpppppppppppppppp"
+"pq\u0000~\u0000eppppppq\u0000~\u0000Apppppppppppppppppq\u0000~\u0000Rpppppppppppppppppq\u0000~\u0000"
+"cppppppq\u0000~\u0000?pppppppppppppppppq\u0000~\u0000Ppppppppppppppppppq\u0000~\u0000apppp"
+"ppppppppppppppppppppq\u0000~\u0000Npppppppppppppppppq\u0000~\u0000_ppppppppppppp"
+"pppppppppppq\u0000~\u0000Lpppppppppppppppppq\u0000~\u0000]pppppppppppppppppppppp"
+"ppq\u0000~\u0000Jpppppppppppppppppq\u0000~\u0000[ppppppppppppppppppppppq\u0000~\u0000#pq\u0000~"
+"\u0000Hpppppppppppppq\u0000~\u0001Dq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0000Yq\u0000~\u0001,q\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001a"
+"q\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\r"
+"q\u0000~\u0001\u0007q\u0000~\u0001\bq\u0000~\u0001\u0001q\u0000~\u0001\u0002q\u0000~\u0000\u00fbq\u0000~\u0000\u00fcq\u0000~\u0000\u00f5q\u0000~\u0000\u00f6q\u0000~\u0000\u00efq\u0000~\u0000\u00f0q\u0000~\u0000\u00e9q\u0000~\u0000\u00ea"
+"q\u0000~\u0000\u00e3q\u0000~\u0000\u00e4q\u0000~\u0000\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u0013q\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000~q\u0000~\u0000\u0084"
+"q\u0000~\u0000\u008aq\u0000~\u0000\u0090q\u0000~\u0000Wq\u0000~\u0000\u0096q\u0000~\u0000\u0010q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008f"
+"q\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0000hq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000\u00d1"
+"q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6q\u0000~\u0000\u00ccq\u0000~\u0000\u00d2q\u0000~\u0000Fq\u0000~\u0001J"
+"q\u0000~\u0001Iq\u0000~\u0001Pq\u0000~\u0001Oq\u0000~\u0000Dq\u0000~\u0001Vq\u0000~\u0001Uq\u0000~\u0001\\q\u0000~\u0001[q\u0000~\u0001bq\u0000~\u0000Uq\u0000~\u0001aq\u0000~\u0001h"
+"q\u0000~\u0001gq\u0000~\u0001nq\u0000~\u0001mq\u0000~\u0001tq\u0000~\u0001sppppppppppq\u0000~\u0000fppppppq\u0000~\u0000Bppppppppp"
+"ppppppppq\u0000~\u0000Spppppppppppppppppq\u0000~\u0000dppppppq\u0000~\u0000@pppppppppppppp"
+"pppq\u0000~\u0000Qpppppppppppppppppq\u0000~\u0000bppppppq\u0000~\u0000>pppppppppppppppppq\u0000"
+"~\u0000Oppppppppppppppq\u0000~\u0000\u0005ppq\u0000~\u0000`ppppppppppppppppppppppppq\u0000~\u0000Mpp"
+"pppppppppppppppq\u0000~\u0000^ppppppppppppppppppppppppq\u0000~\u0000Kppppppppppp"
+"ppppppq\u0000~\u0000\\ppppppppppppppppppppppppq\u0000~\u0000Ipppppppppppppppppq\u0000~"
+"\u0000Zppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, value));
                            return ;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
