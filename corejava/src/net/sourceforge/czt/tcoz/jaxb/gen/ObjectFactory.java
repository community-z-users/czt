//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.tcoz.jaxb.gen;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.sourceforge.czt.tcoz.jaxb.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
    public final static java.lang.Class version = (net.sourceforge.czt.tcoz.jaxb.gen.impl.JAXBVersion.class);

    static {
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.SynPllProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.RecProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.WaitProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.TimeoutStartProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutStartProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.Event", "net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.SynPllProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.TimeoutEndProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutEndProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.GuardProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.AtProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.DeadlineProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.GuardProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement", "net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.StopProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.StopProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.InterruptProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.DivergeProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.DivergeProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.EventSet", "net.sourceforge.czt.tcoz.jaxb.gen.impl.EventSetImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.DeadlineProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.EventSetElement", "net.sourceforge.czt.tcoz.jaxb.gen.impl.EventSetElementImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.ChannelExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.ConnectionElement", "net.sourceforge.czt.tcoz.jaxb.gen.impl.ConnectionElementImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.Connection", "net.sourceforge.czt.tcoz.jaxb.gen.impl.ConnectionImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.AtProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.InterleaveProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.InterleaveProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.RecProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.TopologyProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.WaitUntilProExprType", "net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.TopologyProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.SkipProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.SkipProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.WaitProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.WaitUntilProExpr", "net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExprElement", "net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.tcoz.jaxb.gen.EventElement", "net.sourceforge.czt.tcoz.jaxb.gen.impl.EventElementImpl");
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sourceforge.czt.tcoz.jaxb.gen
     * 
     */
    public ObjectFactory() {
        super(new net.sourceforge.czt.tcoz.jaxb.gen.ObjectFactory.GrammarInfoImpl());
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface the Class object of the javacontent interface to instantiate
     * @return a new instance
     * @throws JAXBException if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @return the value of the requested property
     * @throws PropertyException when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @param value the value of the property to be set
     * @throws PropertyException when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of SynPllProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.SynPllProExpr createSynPllProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprImpl();
    }

    /**
     * Create an instance of RecProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.RecProExpr createRecProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprImpl();
    }

    /**
     * Create an instance of WaitProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.WaitProExprType createWaitProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprTypeImpl();
    }

    /**
     * Create an instance of TimeoutStartProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.TimeoutStartProExpr createTimeoutStartProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutStartProExprImpl();
    }

    /**
     * Create an instance of Event
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.Event createEvent()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventImpl();
    }

    /**
     * Create an instance of InterruptTimeOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExpr createInterruptTimeOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprImpl();
    }

    /**
     * Create an instance of SynPllProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.SynPllProExprType createSynPllProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprTypeImpl();
    }

    /**
     * Create an instance of TimeoutEndProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.TimeoutEndProExpr createTimeoutEndProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutEndProExprImpl();
    }

    /**
     * Create an instance of GuardProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.GuardProExprType createGuardProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprTypeImpl();
    }

    /**
     * Create an instance of AtProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.AtProExprType createAtProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprTypeImpl();
    }

    /**
     * Create an instance of DeadlineProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.DeadlineProExprType createDeadlineProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprTypeImpl();
    }

    /**
     * Create an instance of GuardProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.GuardProExpr createGuardProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprImpl();
    }

    /**
     * Create an instance of ChannelExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement createChannelExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl();
    }

    /**
     * Create an instance of StopProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.StopProExpr createStopProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.StopProExprImpl();
    }

    /**
     * Create an instance of InterruptProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.InterruptProExpr createInterruptProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptProExprImpl();
    }

    /**
     * Create an instance of DivergeProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.DivergeProExpr createDivergeProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.DivergeProExprImpl();
    }

    /**
     * Create an instance of EventSet
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.EventSet createEventSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventSetImpl();
    }

    /**
     * Create an instance of DeadlineProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.DeadlineProExpr createDeadlineProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprImpl();
    }

    /**
     * Create an instance of EventSetElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.EventSetElement createEventSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventSetElementImpl();
    }

    /**
     * Create an instance of ChannelExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.ChannelExpr createChannelExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprImpl();
    }

    /**
     * Create an instance of ConnectionElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.ConnectionElement createConnectionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ConnectionElementImpl();
    }

    /**
     * Create an instance of Connection
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.Connection createConnection()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ConnectionImpl();
    }

    /**
     * Create an instance of AtProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.AtProExpr createAtProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprImpl();
    }

    /**
     * Create an instance of InterleaveProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.InterleaveProExpr createInterleaveProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterleaveProExprImpl();
    }

    /**
     * Create an instance of RecProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.RecProExprType createRecProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprTypeImpl();
    }

    /**
     * Create an instance of TopologyProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.TopologyProExprType createTopologyProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprTypeImpl();
    }

    /**
     * Create an instance of WaitUntilProExprType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.WaitUntilProExprType createWaitUntilProExprType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprTypeImpl();
    }

    /**
     * Create an instance of TopologyProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.TopologyProExpr createTopologyProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprImpl();
    }

    /**
     * Create an instance of SkipProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.SkipProExpr createSkipProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.SkipProExprImpl();
    }

    /**
     * Create an instance of WaitProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.WaitProExpr createWaitProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl();
    }

    /**
     * Create an instance of WaitUntilProExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.WaitUntilProExpr createWaitUntilProExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprImpl();
    }

    /**
     * Create an instance of InterruptTimeOpExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.InterruptTimeOpExprElement createInterruptTimeOpExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprElementImpl();
    }

    /**
     * Create an instance of EventElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.tcoz.jaxb.gen.EventElement createEventElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventElementImpl();
    }

    private static class GrammarInfoImpl
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractGrammarInfoImpl
    {


        public java.lang.Class getDefaultImplementation(java.lang.Class javaContentInterface) {
            java.lang.Class c = null;
            try {
                c = java.lang.Class.forName(((java.lang.String) defaultImplementations.get(javaContentInterface.getName())));
            } catch (java.lang.Exception _x) {
                c = null;
            }
            return c;
        }

        public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(java.lang.String uri, java.lang.String local, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            if (("InterruptTimeOpExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprElementImpl().createUnmarshaller(context);
            }
            if (("Event" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventElementImpl().createUnmarshaller(context);
            }
            if (("DivergeProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.DivergeProExprImpl().createUnmarshaller(context);
            }
            if (("GuardProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprImpl().createUnmarshaller(context);
            }
            if (("ChannelExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl().createUnmarshaller(context);
            }
            if (("TimeoutEndProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutEndProExprImpl().createUnmarshaller(context);
            }
            if (("InterruptProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptProExprImpl().createUnmarshaller(context);
            }
            if (("TimeoutStartProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutStartProExprImpl().createUnmarshaller(context);
            }
            if (("DeadlineProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprImpl().createUnmarshaller(context);
            }
            if (("WaitUntilProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprImpl().createUnmarshaller(context);
            }
            if (("AtProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprImpl().createUnmarshaller(context);
            }
            if (("TopologyProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprImpl().createUnmarshaller(context);
            }
            if (("RecProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprImpl().createUnmarshaller(context);
            }
            if (("Connection" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.ConnectionElementImpl().createUnmarshaller(context);
            }
            if (("StopProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.StopProExprImpl().createUnmarshaller(context);
            }
            if (("SkipProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.SkipProExprImpl().createUnmarshaller(context);
            }
            if (("EventSet" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.EventSetElementImpl().createUnmarshaller(context);
            }
            if (("InterleaveProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.InterleaveProExprImpl().createUnmarshaller(context);
            }
            if (("WaitProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl().createUnmarshaller(context);
            }
            if (("SynPllProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return new net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprImpl().createUnmarshaller(context);
            }
            return null;
        }

        public java.lang.Class getRootElement(java.lang.String uri, java.lang.String local) {
            if (("InterruptTimeOpExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptTimeOpExprElementImpl.class);
            }
            if (("Event" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.EventElementImpl.class);
            }
            if (("DivergeProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.DivergeProExprImpl.class);
            }
            if (("GuardProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprImpl.class);
            }
            if (("ChannelExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class);
            }
            if (("TimeoutEndProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutEndProExprImpl.class);
            }
            if (("InterruptProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptProExprImpl.class);
            }
            if (("TimeoutStartProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutStartProExprImpl.class);
            }
            if (("DeadlineProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprImpl.class);
            }
            if (("WaitUntilProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprImpl.class);
            }
            if (("AtProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprImpl.class);
            }
            if (("TopologyProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprImpl.class);
            }
            if (("RecProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprImpl.class);
            }
            if (("Connection" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.ConnectionElementImpl.class);
            }
            if (("StopProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.StopProExprImpl.class);
            }
            if (("SkipProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.SkipProExprImpl.class);
            }
            if (("EventSet" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.EventSetElementImpl.class);
            }
            if (("InterleaveProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.InterleaveProExprImpl.class);
            }
            if (("WaitProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprImpl.class);
            }
            if (("SynPllProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return (net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprImpl.class);
            }
            return null;
        }

        public boolean recognize(java.lang.String uri, java.lang.String local) {
            if (("InterruptTimeOpExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("Event" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("DivergeProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("GuardProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("ChannelExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("TimeoutEndProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("InterruptProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("TimeoutStartProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("DeadlineProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("WaitUntilProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("AtProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("TopologyProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("RecProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("Connection" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("StopProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("SkipProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("EventSet" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("InterleaveProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("WaitProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            if (("SynPllProExpr" == local)&&("http://czt.sourceforge.net/tcoz" == uri)) {
                return true;
            }
            return false;
        }

        public java.lang.String[] getProbePoints() {
            return new java.lang.String[] {"http://czt.sourceforge.net/tcoz", "InterruptTimeOpExpr", "http://czt.sourceforge.net/tcoz", "Event", "http://czt.sourceforge.net/tcoz", "DivergeProExpr", "http://czt.sourceforge.net/tcoz", "GuardProExpr", "http://czt.sourceforge.net/tcoz", "ChannelExpr", "http://czt.sourceforge.net/tcoz", "TimeoutEndProExpr", "http://czt.sourceforge.net/tcoz", "InterruptProExpr", "http://czt.sourceforge.net/tcoz", "TimeoutStartProExpr", "http://czt.sourceforge.net/tcoz", "DeadlineProExpr", "http://czt.sourceforge.net/tcoz", "WaitUntilProExpr", "http://czt.sourceforge.net/tcoz", "AtProExpr", "http://czt.sourceforge.net/tcoz", "TopologyProExpr", "http://czt.sourceforge.net/tcoz", "RecProExpr", "http://czt.sourceforge.net/tcoz", "Connection", "http://czt.sourceforge.net/tcoz", "StopProExpr", "http://czt.sourceforge.net/tcoz", "SkipProExpr", "http://czt.sourceforge.net/tcoz", "EventSet", "http://czt.sourceforge.net/tcoz", "InterleaveProExpr", "http://czt.sourceforge.net/tcoz", "WaitProExpr", "http://czt.sourceforge.net/tcoz", "SynPllProExpr"};
        }

    }

}
