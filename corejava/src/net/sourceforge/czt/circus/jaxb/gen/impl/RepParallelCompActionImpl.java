//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.02.23 at 12:42:00 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class RepParallelCompActionImpl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl
    implements net.sourceforge.czt.circus.jaxb.gen.RepParallelCompAction, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.circus.jaxb.gen.CSExpr _CSExpr;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.RepParallelCompAction.class);
    }

    public net.sourceforge.czt.circus.jaxb.gen.CSExpr getCSExpr() {
        return _CSExpr;
    }

    public void setCSExpr(net.sourceforge.czt.circus.jaxb.gen.CSExpr value) {
        _CSExpr = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_CSExpr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CSExpr), "CSExpr");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "CSExpr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CSExpr), "CSExpr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CSExpr), "CSExpr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CSExpr), "CSExpr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_CSExpr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CSExpr), "CSExpr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_CSExpr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CSExpr), "CSExpr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.RepParallelCompAction.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001bsr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000-net.sourceforge.czt"
+".z.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/du"
+"mmy-elementssq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"co"
+"m.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
+"atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
+"type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
+".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~"
+"\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
+"sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+",com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)"
+"http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004Annst"
+"\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\np"
+"psq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000"
+"~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\np"
+"psq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq"
+"\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00002net.so"
+"urceforge.czt.circus.jaxb.gen.RepExtChActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq"
+"\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.so"
+"urceforge.czt.circus.jaxb.gen.StopActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\n"
+"ppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:net.source"
+"forge.czt.circus.jaxb.gen.PrefixingActionElementq\u0000~\u0000&sq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004ne"
+"t.sourceforge.czt.circus.jaxb.gen.InterleaveActionq\u0000~\u0000&sq\u0000~\u0000"
+"\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000."
+"net.sourceforge.czt.circus.jaxb.gen.SkipActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<net."
+"sourceforge.czt.circus.jaxb.gen.ActualParamActionElementq\u0000~\u0000"
+"&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"t\u00008net.sourceforge.czt.circus.jaxb.gen.AssignmentCmdEleme"
+"ntq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000"
+"~\u0000!sq\u0000~\u0000\"t\u0000=net.sourceforge.czt.circus.jaxb.gen.ParallelComp"
+"ActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen.H"
+"ideActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000@net.sourceforge.czt.circus.jaxb.ge"
+"n.RepParallelCompActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000"
+"~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sourceforge.czt."
+"circus.jaxb.gen.MuActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q"
+"\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00008net.sourceforge.czt"
+".circus.jaxb.gen.GuardedActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\npps"
+"q\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sourcefor"
+"ge.czt.circus.jaxb.gen.IntChoiceActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\npp"
+"sq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourcefo"
+"rge.czt.circus.jaxb.gen.VarDeclCmdElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000"
+"\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007net.sourc"
+"eforge.czt.circus.jaxb.gen.RepInterleaveActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00001net."
+"sourceforge.czt.circus.jaxb.gen.SeqCompActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000s"
+"q\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.s"
+"ourceforge.czt.circus.jaxb.gen.ExtChoiceActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007net."
+"sourceforge.czt.circus.jaxb.gen.IfGuardedCmdElementq\u0000~\u0000&sq\u0000~"
+"\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000"
+"7net.sourceforge.czt.circus.jaxb.gen.SchemaActionElementq\u0000~\u0000"
+"&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"t\u00004net.sourceforge.czt.circus.jaxb.gen.RepSeqCompActionq\u0000"
+"~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!s"
+"q\u0000~\u0000\"t\u00006net.sourceforge.czt.circus.jaxb.gen.SpecStmtCmdEleme"
+"ntq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000"
+"~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen.CallActionEl"
+"ementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen.FormalPar"
+"amActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000/net.sourceforge.czt.circus.jaxb.gen.ChaosA"
+"ctionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00002net.sourceforge.czt.circus.jaxb.gen.RepIntChA"
+"ctionq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net.sourceforge.czt.z.jaxb.gen.VarDec"
+"lElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011ps"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&net.sourceforge.czt.z.jax"
+"b.gen.VarDeclq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000\u0007VarDeclq\u0000~\u0000Asq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011p"
+"sq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000*net.sourceforge.czt.circ"
+"us.jaxb.gen.NSExprq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq"
+"\u0000~\u0000\"t\u0000\u0006LeftNSt\u0000!http://czt.sourceforge.net/circussq\u0000~\u0000\fpp\u0000sq"
+"\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~"
+"\u0000!sq\u0000~\u0000\"q\u0000~\u0001\nq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000\u0007RightNSq\u0000~\u0001\u000fsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004net.sourceforge.czt.circus.jaxb.g"
+"en.CSExprRefElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004net.sourceforge.czt.circus.jaxb"
+".gen.CSExprSetElementq\u0000~\u0000&sr\u0000\"com.sun.msv.grammar.Expression"
+"Pool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expression"
+"Pool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clo"
+"sedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/s"
+"un/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000h\u0001pq\u0000~\u0000Bq\u0000~\u0000Fq\u0000~\u0000Iq\u0000~\u0000\u00c2q\u0000"
+"~\u0000\u00bcq\u0000~\u0000\u00b6q\u0000~\u0000\u00b0q\u0000~\u0000Yq\u0000~\u0000\u00aaq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000\u0098q\u0000~\u0000\u0092q\u0000~\u0000\u008cq\u0000~\u0000\u0086q\u0000~\u0000\u0080q\u0000"
+"~\u0000zq\u0000~\u0000tq\u0000~\u0000nq\u0000~\u0000hq\u0000~\u0000bq\u0000~\u0000\\q\u0000~\u0000\u0017q\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~\u0000Gq\u0000~\u0000\u00d4q\u0000~\u0000\u00daq\u0000"
+"~\u0000\u00e0q\u0000~\u0000Pq\u0000~\u0000\u00c1q\u0000~\u0000\u00bbq\u0000~\u0000\u00b5q\u0000~\u0000\u00afq\u0000~\u0000\u00a9q\u0000~\u0000\u00a3q\u0000~\u0000\u009dq\u0000~\u0000\u0097q\u0000~\u0000\u0091q\u0000~\u0000\u008bq\u0000"
+"~\u0000\u0085q\u0000~\u0000\u007fq\u0000~\u0000yq\u0000~\u0000sq\u0000~\u0000mq\u0000~\u0000gq\u0000~\u0000aq\u0000~\u0000[q\u0000~\u0000\u0014q\u0000~\u0000\u00c7q\u0000~\u0000\u00cdq\u0000~\u0000\u00d3q\u0000"
+"~\u0000\u00d9q\u0000~\u0000\u00dfq\u0000~\u0000\u00e6q\u0000~\u0000\u00e5q\u0000~\u0000\u00ecq\u0000~\u0000\u00ebq\u0000~\u0000\u00f3q\u0000~\u0000\u00f2q\u0000~\u0000\u00fbq\u0000~\u0000\u00faq\u0000~\u0000\bq\u0000~\u0001\u0007q\u0000"
+"~\u0001\u0006q\u0000~\u0001\u0014q\u0000~\u0001\u0013q\u0000~\u0001\u001eq\u0000~\u0001\u001dq\u0000~\u0001$q\u0000~\u0001#q\u0000~\u0001\u001bq\u0000~\u0000Qq\u0000~\u0000Uq\u0000~\u0000Jq\u0000~\u0000\u0006q\u0000"
+"~\u0000Tq\u0000~\u0000Dq\u0000~\u0000Vq\u0000~\u0000Sq\u0000~\u0000\u0012q\u0000~\u0000\u00f8q\u0000~\u0001\u0004q\u0000~\u0001\u0011q\u0000~\u0000\'q\u0000~\u0000\u00ffq\u0000~\u0001\u000bq\u0000~\u0001\u0017q\u0000"
+"~\u0000Cq\u0000~\u0000Wq\u0000~\u0000Eq\u0000~\u0000Lq\u0000~\u0000Mq\u0000~\u0000\u000bq\u0000~\u0000Kq\u0000~\u0000Nq\u0000~\u0000\tq\u0000~\u0000Xq\u0000~\u0000\u0007q\u0000~\u0000\u0005q\u0000"
+"~\u0000Rq\u0000~\u0000Hq\u0000~\u0000\u00f0q\u0000~\u0000Ox"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("CSExprRef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprRefElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprRefElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CSExprSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprSetElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CSExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("CSExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RepExtChAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("StopAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PrefixingAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SkipAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ActualParamAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AssignmentCmd" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelCompAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RepParallelCompAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("GuardedAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("VarDeclCmd" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RepInterleaveAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqCompAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IfGuardedCmd" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchemaAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RepSeqCompAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SpecStmtCmd" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CallAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("FormalParamAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChaosAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RepIntChAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ActionDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ActionDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CSExprRef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NSExprSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CSExprSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NSExprRef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        if (("CSExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  3 :
                        _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl)net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            _CSExpr = ((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl.class), 4, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
