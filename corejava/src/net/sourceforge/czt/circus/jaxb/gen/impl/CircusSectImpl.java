//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.02.24 at 01:10:48 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class CircusSectImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.SectImpl
    implements net.sourceforge.czt.circus.jaxb.gen.CircusSect, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Parent;
    protected com.sun.xml.bind.util.ListImpl _CircusPara;
    protected java.lang.String _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.CircusSect.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getParent() {
        if (_Parent == null) {
            _Parent = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Parent;
    }

    public java.util.List getParent() {
        return _getParent();
    }

    protected com.sun.xml.bind.util.ListImpl _getCircusPara() {
        if (_CircusPara == null) {
            _CircusPara = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _CircusPara;
    }

    public java.util.List getCircusPara() {
        return _getCircusPara();
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Parent == null)? 0 :_Parent.size());
        int idx2 = 0;
        final int len2 = ((_CircusPara == null)? 0 :_CircusPara.size());
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/circus", "Name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            net.sourceforge.czt.circus.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Parent");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_2 ++)), "Parent");
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_3 ++)), "Parent");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_CircusPara.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CircusPara.get(idx2 ++)), "CircusPara");
            } else {
                context.startElement("http://czt.sourceforge.net/circus", "CircusPara");
                int idx_4 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CircusPara.get(idx_4 ++)), "CircusPara");
                context.endNamespaceDecls();
                int idx_5 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CircusPara.get(idx_5 ++)), "CircusPara");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _CircusPara.get(idx2 ++)), "CircusPara");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Parent == null)? 0 :_Parent.size());
        int idx2 = 0;
        final int len2 = ((_CircusPara == null)? 0 :_CircusPara.size());
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
            } else {
                idx1 += 1;
            }
        }
        while (idx2 != len2) {
            if (_CircusPara.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CircusPara.get(idx2 ++)), "CircusPara");
            } else {
                idx2 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Parent == null)? 0 :_Parent.size());
        int idx2 = 0;
        final int len2 = ((_CircusPara == null)? 0 :_CircusPara.size());
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
            } else {
                idx1 += 1;
            }
        }
        while (idx2 != len2) {
            if (_CircusPara.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CircusPara.get(idx2 ++)), "CircusPara");
            } else {
                idx2 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.CircusSect.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen.Term"
+"A.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~"
+"\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.dataty"
+"pe.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Buil"
+"tinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concret"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet"
+"\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://"
+"www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.or"
+"g/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sou"
+"rceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\'q\u0000~\u0000\u000fpsr\u0000#com.su"
+"n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~"
+"\u0000,q\u0000~\u00001t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004\u0001q\u0000~\u00007sq\u0000~\u00008q\u0000~\u0000Eq\u0000~\u00001sq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Namet\u0000!http://czt.source"
+"forge.net/circussq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\nq\u0000~\u0000\u000fp"
+"\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net"
+".sourceforge.czt.z.jaxb.gen.ParentElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.Parentq\u0000~\u0000$sq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0006Parentq\u0000~\u0000?q\u0000~\u0000\u001fsq\u0000~\u0000\b"
+"ppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.circus.jaxb.gen.ProcDeclEleme"
+"ntq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.circus.jaxb.gen.CSDeclEl"
+"ementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt.circus.jaxb.gen.Circu"
+"sZParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000;net.sourceforge.czt.circus.jaxb.g"
+"en.ChannelDeclSExprElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00006net.sourceforge.czt."
+"circus.jaxb.gen.ChannelDeclElementq\u0000~\u0000$q\u0000~\u0000\u001fsr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
+"L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000#\u0001pq\u0000~\u0000"
+"\u0010q\u0000~\u0000[q\u0000~\u0000Xq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\tq\u0000~\u0000hq\u0000~\u0000\u0005q\u0000~\u0000Pq\u0000~\u0000"
+"\u0012q\u0000~\u0000Rq\u0000~\u0000Zq\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000fq\u0000~\u0000\u0082q\u0000~\u0000cq\u0000~\u0000eq\u0000~\u0000%q\u0000~\u0000"
+"Iq\u0000~\u0000_q\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000~\u0000dq\u0000~\u0000Aq\u0000~\u0000Nq\u0000~\u0000gq\u0000~\u0000Oq\u0000~\u0000\u0015q\u0000~\u0000Sx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProcDecl" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CSDecl" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CircusZPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelDeclSExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelDecl" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CircusPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("CircusPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  4 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 2;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("ProcDecl" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CSDecl" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CircusZPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelDeclSExpr" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelDecl" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CircusPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("CircusPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  5 :
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  8 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("CircusPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  5 :
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  8 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        state = 8;
                        continue outer;
                    case  5 :
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  8 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            state = 8;
                            continue outer;
                        case  5 :
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, value)));
                            return ;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  8 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            _getCircusPara().add(((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl.class), 10, value)));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            eatText1(value);
                            state = 3;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
