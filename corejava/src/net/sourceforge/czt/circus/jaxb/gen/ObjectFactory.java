//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.02.23 at 12:42:00 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.sourceforge.czt.circus.jaxb.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(212, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static net.sourceforge.czt.circus.jaxb.gen.impl.runtime.GrammarInfo grammarInfo = new net.sourceforge.czt.circus.jaxb.gen.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (net.sourceforge.czt.circus.jaxb.gen.ObjectFactory.class));
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepParallelActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.GuardedAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalGenProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDef.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelCompActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentPair.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SpecStmtCmdElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCmdElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprRefElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprRefElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Proc1Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.Proc1ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSDeclElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntantiationProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntantiationProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.MuActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.MuActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqCompProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqCompProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSDeclElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSDeclElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprRef.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprRefImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDescElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDescElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqCompAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqCompActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommIn.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommInImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepIntChAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepIntChActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IfGuardedCmdElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCmdElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDesc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDescImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusProgram.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusProgramImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcD.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprUnion.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprUnionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusSect.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.PrefixingAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentPairElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcEElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcEElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IdxRepParallelCompProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepParallelCompProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RenameProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IfGuardedCmd.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCmdImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalParamProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IdxRepExtChProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepExtChProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualParamActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepExtChAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepExtChActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionDeclElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionDeclElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDecl.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExpr.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPAction1 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction1Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepInterleaveAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepInterleaveActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionDefElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionDefElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcZParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcZParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommandElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommandElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcZPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcZParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.MuAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.MuActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcRElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcRElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelDeclElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.VarDeclCmdElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCmdElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Proc1 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusZPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepInterleaveProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepInterleaveProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepSeqCompProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepSeqCompProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPAction2Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction2ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepParallelCompProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelCompAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelCompProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelCompProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelDecl.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChaosAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChaosActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommParamElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommParamElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepParallelCompAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SkipAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SkipActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepSeqCompAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepSeqCompActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPActionD.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionDImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPAction2 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction2Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDefElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.GuardedActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusZParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommOut.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommOutImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentCmdElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCmdElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Proc2Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.Proc2ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPActionRElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionRElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SchemaActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SchemaActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprDiff.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprDiffImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IdxRepParallelCompProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepParallelCompProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualParamProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExpr.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelDeclSExpr.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelDeclSExprElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SpecStmtCmd.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCmdImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSExprInter.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSExprInterImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideProcElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideProcElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Proc2 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.Proc2Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPBasicAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPBasicActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.PrefixingActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepParallelCompProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommMixedElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommMixedElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprRefElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprRefElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprInter.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprInterImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IndexedProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcRIElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcRIElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSDecl.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSDeclImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualGenProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepParallelCompActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalGenProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPAction1Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction1ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IdxRepInterleaveProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepInterleaveProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepParallelAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPActionDElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionDElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcE.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcEImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.StopAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.StopActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualParamAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.VarDeclCmd.class), "net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCmdImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprDiff.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprDiffImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSPBasicActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSPBasicActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprRef.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprRefImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalParamAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IdxRepSeqCompProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepSeqCompProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionDecl.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionDeclImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CircusSectElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SchemaAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SchemaActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepIntChProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepIntChProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommMixed.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommMixedImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcDeclElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IdxRepIntChProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepIntChProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentCmd.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCmdImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NSExprUnion.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NSExprUnionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Command.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommandImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CSDecl.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Comm.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommOutElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommOutElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionDef.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionDefImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RepExtChProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RepExtChProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RenameProc.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommInElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommInElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommParam.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommParamImpl");
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepExtChProc"), (net.sourceforge.czt.circus.jaxb.gen.RepExtChProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSPActionD"), (net.sourceforge.czt.circus.jaxb.gen.CSPActionDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepSeqCompAction"), (net.sourceforge.czt.circus.jaxb.gen.RepSeqCompAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepExtChAction"), (net.sourceforge.czt.circus.jaxb.gen.RepExtChAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepParallelAction"), (net.sourceforge.czt.circus.jaxb.gen.RepParallelActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcR"), (net.sourceforge.czt.circus.jaxb.gen.ProcRElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcPara"), (net.sourceforge.czt.circus.jaxb.gen.ProcParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceProc"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqCompProc"), (net.sourceforge.czt.circus.jaxb.gen.SeqCompProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CommMixed"), (net.sourceforge.czt.circus.jaxb.gen.CommMixedElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelCompAction"), (net.sourceforge.czt.circus.jaxb.gen.ParallelCompActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveProc"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SpecStmtCmd"), (net.sourceforge.czt.circus.jaxb.gen.SpecStmtCmdElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SchemaAction"), (net.sourceforge.czt.circus.jaxb.gen.SchemaActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepInterleaveAction"), (net.sourceforge.czt.circus.jaxb.gen.RepInterleaveAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IdxRepIntChProc"), (net.sourceforge.czt.circus.jaxb.gen.IdxRepIntChProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcDecl"), (net.sourceforge.czt.circus.jaxb.gen.ProcDeclElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SkipAction"), (net.sourceforge.czt.circus.jaxb.gen.SkipAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcDesc"), (net.sourceforge.czt.circus.jaxb.gen.ProcDescElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Comm"), (net.sourceforge.czt.circus.jaxb.gen.CommElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Command"), (net.sourceforge.czt.circus.jaxb.gen.CommandElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActionDecl"), (net.sourceforge.czt.circus.jaxb.gen.ActionDeclElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSExprUnion"), (net.sourceforge.czt.circus.jaxb.gen.CSExprUnion.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveAction"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "AssignmentPair"), (net.sourceforge.czt.circus.jaxb.gen.AssignmentPairElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSPAction"), (net.sourceforge.czt.circus.jaxb.gen.CSPActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcZPara"), (net.sourceforge.czt.circus.jaxb.gen.ProcZParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActualGenProc"), (net.sourceforge.czt.circus.jaxb.gen.ActualGenProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqCompAction"), (net.sourceforge.czt.circus.jaxb.gen.SeqCompAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSExprRef"), (net.sourceforge.czt.circus.jaxb.gen.NSExprRefElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IndexedProc"), (net.sourceforge.czt.circus.jaxb.gen.IndexedProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSExpr"), (net.sourceforge.czt.circus.jaxb.gen.NSExprElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcD"), (net.sourceforge.czt.circus.jaxb.gen.ProcDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSPBasicAction"), (net.sourceforge.czt.circus.jaxb.gen.CSPBasicActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcDef"), (net.sourceforge.czt.circus.jaxb.gen.ProcDefElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CircusSect"), (net.sourceforge.czt.circus.jaxb.gen.CircusSectElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "MuAction"), (net.sourceforge.czt.circus.jaxb.gen.MuActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepIntChAction"), (net.sourceforge.czt.circus.jaxb.gen.RepIntChAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSExpr"), (net.sourceforge.czt.circus.jaxb.gen.CSExprElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepSeqCompProc"), (net.sourceforge.czt.circus.jaxb.gen.RepSeqCompProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CommIn"), (net.sourceforge.czt.circus.jaxb.gen.CommInElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSDecl"), (net.sourceforge.czt.circus.jaxb.gen.NSDeclElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IdxRepParallelCompProc"), (net.sourceforge.czt.circus.jaxb.gen.IdxRepParallelCompProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IfGuardedCmd"), (net.sourceforge.czt.circus.jaxb.gen.IfGuardedCmdElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceAction"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepIntChProc"), (net.sourceforge.czt.circus.jaxb.gen.RepIntChProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Proc1"), (net.sourceforge.czt.circus.jaxb.gen.Proc1Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSPActionR"), (net.sourceforge.czt.circus.jaxb.gen.CSPActionRElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSPAction2"), (net.sourceforge.czt.circus.jaxb.gen.CSPAction2Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "GuardedAction"), (net.sourceforge.czt.circus.jaxb.gen.GuardedActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IdxRepSeqCompProc"), (net.sourceforge.czt.circus.jaxb.gen.IdxRepSeqCompProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "StopAction"), (net.sourceforge.czt.circus.jaxb.gen.StopAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcE"), (net.sourceforge.czt.circus.jaxb.gen.ProcEElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepInterleaveProc"), (net.sourceforge.czt.circus.jaxb.gen.RepInterleaveProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CircusZPara"), (net.sourceforge.czt.circus.jaxb.gen.CircusZParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceProc"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "FormalGenProc"), (net.sourceforge.czt.circus.jaxb.gen.FormalGenProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "HideAction"), (net.sourceforge.czt.circus.jaxb.gen.HideActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CommParam"), (net.sourceforge.czt.circus.jaxb.gen.CommParamElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSExprRef"), (net.sourceforge.czt.circus.jaxb.gen.CSExprRefElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSExprDiff"), (net.sourceforge.czt.circus.jaxb.gen.NSExprDiff.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcRI"), (net.sourceforge.czt.circus.jaxb.gen.ProcRIElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChaosAction"), (net.sourceforge.czt.circus.jaxb.gen.ChaosAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSExprUnion"), (net.sourceforge.czt.circus.jaxb.gen.NSExprUnion.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CallProc"), (net.sourceforge.czt.circus.jaxb.gen.CallProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "FormalParamProc"), (net.sourceforge.czt.circus.jaxb.gen.FormalParamProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "HideProc"), (net.sourceforge.czt.circus.jaxb.gen.HideProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CircusPara"), (net.sourceforge.czt.circus.jaxb.gen.CircusParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IdxRepExtChProc"), (net.sourceforge.czt.circus.jaxb.gen.IdxRepExtChProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSExprInter"), (net.sourceforge.czt.circus.jaxb.gen.CSExprInter.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepParallelCompProc"), (net.sourceforge.czt.circus.jaxb.gen.RepParallelCompProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActualParamAction"), (net.sourceforge.czt.circus.jaxb.gen.ActualParamActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CommOut"), (net.sourceforge.czt.circus.jaxb.gen.CommOutElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSExprDiff"), (net.sourceforge.czt.circus.jaxb.gen.CSExprDiff.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "PrefixingAction"), (net.sourceforge.czt.circus.jaxb.gen.PrefixingActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSPAction1"), (net.sourceforge.czt.circus.jaxb.gen.CSPAction1Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CallAction"), (net.sourceforge.czt.circus.jaxb.gen.CallActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IdxRepInterleaveProc"), (net.sourceforge.czt.circus.jaxb.gen.IdxRepInterleaveProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntantiationProc"), (net.sourceforge.czt.circus.jaxb.gen.IntantiationProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Proc2"), (net.sourceforge.czt.circus.jaxb.gen.Proc2Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChannelDecl"), (net.sourceforge.czt.circus.jaxb.gen.ChannelDeclElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActualParamProc"), (net.sourceforge.czt.circus.jaxb.gen.ActualParamProc.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSExprSet"), (net.sourceforge.czt.circus.jaxb.gen.CSExprSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RepParallelCompAction"), (net.sourceforge.czt.circus.jaxb.gen.RepParallelCompActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSExprSet"), (net.sourceforge.czt.circus.jaxb.gen.NSExprSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "FormalParamAction"), (net.sourceforge.czt.circus.jaxb.gen.FormalParamAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceAction"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelCompProc"), (net.sourceforge.czt.circus.jaxb.gen.ParallelCompProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelAction"), (net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NSExprInter"), (net.sourceforge.czt.circus.jaxb.gen.NSExprInter.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "AssignmentCmd"), (net.sourceforge.czt.circus.jaxb.gen.AssignmentCmdElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChannelDeclSExpr"), (net.sourceforge.czt.circus.jaxb.gen.ChannelDeclSExprElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RenameProc"), (net.sourceforge.czt.circus.jaxb.gen.RenameProcElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "VarDeclCmd"), (net.sourceforge.czt.circus.jaxb.gen.VarDeclCmdElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActionDef"), (net.sourceforge.czt.circus.jaxb.gen.ActionDefElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CSDecl"), (net.sourceforge.czt.circus.jaxb.gen.CSDeclElement.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sourceforge.czt.circus.jaxb.gen
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of RepParallelActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepParallelActionElement createRepParallelActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionElementImpl();
    }

    /**
     * Create an instance of GuardedAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.GuardedAction createGuardedAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionImpl();
    }

    /**
     * Create an instance of FormalGenProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalGenProcElement createFormalGenProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcElementImpl();
    }

    /**
     * Create an instance of CallProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallProc createCallProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallProcImpl();
    }

    /**
     * Create an instance of ProcDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDef createProcDef()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl();
    }

    /**
     * Create an instance of ParallelCompActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelCompActionElement createParallelCompActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompActionElementImpl();
    }

    /**
     * Create an instance of ProcPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcPara createProcPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcParaImpl();
    }

    /**
     * Create an instance of AssignmentPair
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentPair createAssignmentPair()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairImpl();
    }

    /**
     * Create an instance of SpecStmtCmdElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SpecStmtCmdElement createSpecStmtCmdElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCmdElementImpl();
    }

    /**
     * Create an instance of CSExprRefElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprRefElement createCSExprRefElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprRefElementImpl();
    }

    /**
     * Create an instance of Proc1Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Proc1Element createProc1Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Proc1ElementImpl();
    }

    /**
     * Create an instance of CSDeclElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSDeclElement createCSDeclElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclElementImpl();
    }

    /**
     * Create an instance of IntantiationProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntantiationProc createIntantiationProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntantiationProcImpl();
    }

    /**
     * Create an instance of CSPActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPActionR createCSPActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionRImpl();
    }

    /**
     * Create an instance of MuActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.MuActionElement createMuActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.MuActionElementImpl();
    }

    /**
     * Create an instance of SeqCompProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqCompProc createSeqCompProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqCompProcImpl();
    }

    /**
     * Create an instance of NSDeclElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSDeclElement createNSDeclElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSDeclElementImpl();
    }

    /**
     * Create an instance of CSExprRef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprRef createCSExprRef()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprRefImpl();
    }

    /**
     * Create an instance of ProcDescElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDescElement createProcDescElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDescElementImpl();
    }

    /**
     * Create an instance of SeqCompAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqCompAction createSeqCompAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqCompActionImpl();
    }

    /**
     * Create an instance of ProcRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcRI createProcRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcRIImpl();
    }

    /**
     * Create an instance of CommIn
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommIn createCommIn()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommInImpl();
    }

    /**
     * Create an instance of RepIntChAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepIntChAction createRepIntChAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepIntChActionImpl();
    }

    /**
     * Create an instance of IfGuardedCmdElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IfGuardedCmdElement createIfGuardedCmdElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCmdElementImpl();
    }

    /**
     * Create an instance of ProcDesc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDesc createProcDesc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDescImpl();
    }

    /**
     * Create an instance of CircusProgram
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusProgram createCircusProgram()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusProgramImpl();
    }

    /**
     * Create an instance of ProcD
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcD createProcD()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDImpl();
    }

    /**
     * Create an instance of CSExprUnion
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprUnion createCSExprUnion()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprUnionImpl();
    }

    /**
     * Create an instance of CircusSect
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusSect createCircusSect()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectImpl();
    }

    /**
     * Create an instance of PrefixingAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.PrefixingAction createPrefixingAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionImpl();
    }

    /**
     * Create an instance of AssignmentPairElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentPairElement createAssignmentPairElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairElementImpl();
    }

    /**
     * Create an instance of ProcEElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcEElement createProcEElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcEElementImpl();
    }

    /**
     * Create an instance of IdxRepParallelCompProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IdxRepParallelCompProcElement createIdxRepParallelCompProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepParallelCompProcElementImpl();
    }

    /**
     * Create an instance of RenameProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RenameProcElement createRenameProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcElementImpl();
    }

    /**
     * Create an instance of IfGuardedCmd
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IfGuardedCmd createIfGuardedCmd()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCmdImpl();
    }

    /**
     * Create an instance of InterleaveAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveAction createInterleaveAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveActionImpl();
    }

    /**
     * Create an instance of FormalParamProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalParamProc createFormalParamProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcImpl();
    }

    /**
     * Create an instance of IdxRepExtChProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IdxRepExtChProc createIdxRepExtChProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepExtChProcImpl();
    }

    /**
     * Create an instance of ActualParamActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualParamActionElement createActualParamActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionElementImpl();
    }

    /**
     * Create an instance of RepExtChAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepExtChAction createRepExtChAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepExtChActionImpl();
    }

    /**
     * Create an instance of ExtChoiceProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProc createExtChoiceProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcImpl();
    }

    /**
     * Create an instance of CallProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallProcElement createCallProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallProcElementImpl();
    }

    /**
     * Create an instance of ActionDeclElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionDeclElement createActionDeclElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionDeclElementImpl();
    }

    /**
     * Create an instance of ProcDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDElement createProcDElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDElementImpl();
    }

    /**
     * Create an instance of ProcDecl
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDecl createProcDecl()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclImpl();
    }

    /**
     * Create an instance of CSPActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPActionElement createCSPActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionElementImpl();
    }

    /**
     * Create an instance of NSExpr
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExpr createNSExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprImpl();
    }

    /**
     * Create an instance of CSPAction1
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPAction1 createCSPAction1()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction1Impl();
    }

    /**
     * Create an instance of RepInterleaveAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepInterleaveAction createRepInterleaveAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepInterleaveActionImpl();
    }

    /**
     * Create an instance of NSExprSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprSet createNSExprSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprSetImpl();
    }

    /**
     * Create an instance of ActionDefElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionDefElement createActionDefElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionDefElementImpl();
    }

    /**
     * Create an instance of CSExprElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprElement createCSExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprElementImpl();
    }

    /**
     * Create an instance of ProcZParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcZParaElement createProcZParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcZParaElementImpl();
    }

    /**
     * Create an instance of CommandElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommandElement createCommandElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommandElementImpl();
    }

    /**
     * Create an instance of ProcZPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcZPara createProcZPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcZParaImpl();
    }

    /**
     * Create an instance of MuAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.MuAction createMuAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.MuActionImpl();
    }

    /**
     * Create an instance of ProcRElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcRElement createProcRElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcRElementImpl();
    }

    /**
     * Create an instance of CSExprSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprSet createCSExprSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprSetImpl();
    }

    /**
     * Create an instance of ChannelDeclElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelDeclElement createChannelDeclElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclElementImpl();
    }

    /**
     * Create an instance of VarDeclCmdElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.VarDeclCmdElement createVarDeclCmdElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCmdElementImpl();
    }

    /**
     * Create an instance of Proc1
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Proc1 createProc1()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl();
    }

    /**
     * Create an instance of CircusZPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusZPara createCircusZPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaImpl();
    }

    /**
     * Create an instance of RepInterleaveProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepInterleaveProc createRepInterleaveProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepInterleaveProcImpl();
    }

    /**
     * Create an instance of RepSeqCompProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepSeqCompProc createRepSeqCompProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepSeqCompProcImpl();
    }

    /**
     * Create an instance of CSPAction2Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPAction2Element createCSPAction2Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction2ElementImpl();
    }

    /**
     * Create an instance of RepParallelCompProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepParallelCompProcElement createRepParallelCompProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompProcElementImpl();
    }

    /**
     * Create an instance of CommElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommElement createCommElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommElementImpl();
    }

    /**
     * Create an instance of ParallelCompAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelCompAction createParallelCompAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompActionImpl();
    }

    /**
     * Create an instance of ParallelCompProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelCompProcElement createParallelCompProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompProcElementImpl();
    }

    /**
     * Create an instance of ParallelCompProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelCompProc createParallelCompProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompProcImpl();
    }

    /**
     * Create an instance of ChannelDecl
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelDecl createChannelDecl()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclImpl();
    }

    /**
     * Create an instance of ChaosAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChaosAction createChaosAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChaosActionImpl();
    }

    /**
     * Create an instance of CommParamElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommParamElement createCommParamElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommParamElementImpl();
    }

    /**
     * Create an instance of RepParallelCompAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepParallelCompAction createRepParallelCompAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionImpl();
    }

    /**
     * Create an instance of SkipAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SkipAction createSkipAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SkipActionImpl();
    }

    /**
     * Create an instance of RepSeqCompAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepSeqCompAction createRepSeqCompAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepSeqCompActionImpl();
    }

    /**
     * Create an instance of CircusParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusParaElement createCircusParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaElementImpl();
    }

    /**
     * Create an instance of CSPActionD
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPActionD createCSPActionD()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionDImpl();
    }

    /**
     * Create an instance of ProcR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcR createProcR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcRImpl();
    }

    /**
     * Create an instance of CSPAction2
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPAction2 createCSPAction2()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction2Impl();
    }

    /**
     * Create an instance of CSPAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPAction createCSPAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionImpl();
    }

    /**
     * Create an instance of ProcDefElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDefElement createProcDefElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefElementImpl();
    }

    /**
     * Create an instance of GuardedActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.GuardedActionElement createGuardedActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionElementImpl();
    }

    /**
     * Create an instance of ParallelActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement createParallelActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionElementImpl();
    }

    /**
     * Create an instance of CircusZParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusZParaElement createCircusZParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusZParaElementImpl();
    }

    /**
     * Create an instance of CommOut
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommOut createCommOut()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommOutImpl();
    }

    /**
     * Create an instance of AssignmentCmdElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentCmdElement createAssignmentCmdElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCmdElementImpl();
    }

    /**
     * Create an instance of ProcParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcParaElement createProcParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcParaElementImpl();
    }

    /**
     * Create an instance of Proc2Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Proc2Element createProc2Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Proc2ElementImpl();
    }

    /**
     * Create an instance of CallAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallAction createCallAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallActionImpl();
    }

    /**
     * Create an instance of CSPActionRElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPActionRElement createCSPActionRElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionRElementImpl();
    }

    /**
     * Create an instance of SchemaActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SchemaActionElement createSchemaActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SchemaActionElementImpl();
    }

    /**
     * Create an instance of CSExprDiff
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprDiff createCSExprDiff()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprDiffImpl();
    }

    /**
     * Create an instance of IdxRepParallelCompProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IdxRepParallelCompProc createIdxRepParallelCompProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepParallelCompProcImpl();
    }

    /**
     * Create an instance of CSExprSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprSetElement createCSExprSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprSetElementImpl();
    }

    /**
     * Create an instance of ActualParamProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualParamProc createActualParamProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcImpl();
    }

    /**
     * Create an instance of CSExpr
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExpr createCSExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprImpl();
    }

    /**
     * Create an instance of ExtChoiceAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction createExtChoiceAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceActionImpl();
    }

    /**
     * Create an instance of ChannelDeclSExpr
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelDeclSExpr createChannelDeclSExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprImpl();
    }

    /**
     * Create an instance of ChannelDeclSExprElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelDeclSExprElement createChannelDeclSExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelDeclSExprElementImpl();
    }

    /**
     * Create an instance of SpecStmtCmd
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SpecStmtCmd createSpecStmtCmd()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCmdImpl();
    }

    /**
     * Create an instance of CSExprInter
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSExprInter createCSExprInter()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSExprInterImpl();
    }

    /**
     * Create an instance of HideProcElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideProcElement createHideProcElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideProcElementImpl();
    }

    /**
     * Create an instance of Proc2
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Proc2 createProc2()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Proc2Impl();
    }

    /**
     * Create an instance of CSPBasicAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPBasicAction createCSPBasicAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPBasicActionImpl();
    }

    /**
     * Create an instance of PrefixingActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.PrefixingActionElement createPrefixingActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionElementImpl();
    }

    /**
     * Create an instance of HideActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideActionElement createHideActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideActionElementImpl();
    }

    /**
     * Create an instance of RepParallelCompProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepParallelCompProc createRepParallelCompProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompProcImpl();
    }

    /**
     * Create an instance of ParallelAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelAction createParallelAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl();
    }

    /**
     * Create an instance of CommMixedElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommMixedElement createCommMixedElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommMixedElementImpl();
    }

    /**
     * Create an instance of CircusPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusPara createCircusPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusParaImpl();
    }

    /**
     * Create an instance of NSExprRefElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprRefElement createNSExprRefElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprRefElementImpl();
    }

    /**
     * Create an instance of NSExprInter
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprInter createNSExprInter()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprInterImpl();
    }

    /**
     * Create an instance of IndexedProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IndexedProc createIndexedProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcImpl();
    }

    /**
     * Create an instance of ProcRIElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcRIElement createProcRIElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcRIElementImpl();
    }

    /**
     * Create an instance of CallActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallActionElement createCallActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallActionElementImpl();
    }

    /**
     * Create an instance of NSDecl
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSDecl createNSDecl()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSDeclImpl();
    }

    /**
     * Create an instance of ActualGenProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualGenProc createActualGenProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcImpl();
    }

    /**
     * Create an instance of RepParallelCompActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepParallelCompActionElement createRepParallelCompActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompActionElementImpl();
    }

    /**
     * Create an instance of HideAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideAction createHideAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideActionImpl();
    }

    /**
     * Create an instance of FormalGenProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalGenProc createFormalGenProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcImpl();
    }

    /**
     * Create an instance of CSPAction1Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPAction1Element createCSPAction1Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPAction1ElementImpl();
    }

    /**
     * Create an instance of IdxRepInterleaveProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IdxRepInterleaveProc createIdxRepInterleaveProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepInterleaveProcImpl();
    }

    /**
     * Create an instance of RepParallelAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepParallelAction createRepParallelAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelActionImpl();
    }

    /**
     * Create an instance of CSPActionDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPActionDElement createCSPActionDElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPActionDElementImpl();
    }

    /**
     * Create an instance of IntChoiceAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction createIntChoiceAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceActionImpl();
    }

    /**
     * Create an instance of ProcE
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcE createProcE()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcEImpl();
    }

    /**
     * Create an instance of StopAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.StopAction createStopAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.StopActionImpl();
    }

    /**
     * Create an instance of ActualParamAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualParamAction createActualParamAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionImpl();
    }

    /**
     * Create an instance of VarDeclCmd
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.VarDeclCmd createVarDeclCmd()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCmdImpl();
    }

    /**
     * Create an instance of NSExprDiff
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprDiff createNSExprDiff()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprDiffImpl();
    }

    /**
     * Create an instance of CSPBasicActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSPBasicActionElement createCSPBasicActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSPBasicActionElementImpl();
    }

    /**
     * Create an instance of HideProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideProc createHideProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideProcImpl();
    }

    /**
     * Create an instance of NSExprRef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprRef createNSExprRef()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprRefImpl();
    }

    /**
     * Create an instance of FormalParamAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalParamAction createFormalParamAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamActionImpl();
    }

    /**
     * Create an instance of NSExprSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprSetElement createNSExprSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprSetElementImpl();
    }

    /**
     * Create an instance of IdxRepSeqCompProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IdxRepSeqCompProc createIdxRepSeqCompProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepSeqCompProcImpl();
    }

    /**
     * Create an instance of ActionDecl
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionDecl createActionDecl()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionDeclImpl();
    }

    /**
     * Create an instance of CircusSectElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CircusSectElement createCircusSectElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CircusSectElementImpl();
    }

    /**
     * Create an instance of SchemaAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SchemaAction createSchemaAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SchemaActionImpl();
    }

    /**
     * Create an instance of NSExprElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprElement createNSExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprElementImpl();
    }

    /**
     * Create an instance of RepIntChProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepIntChProc createRepIntChProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepIntChProcImpl();
    }

    /**
     * Create an instance of InterleaveProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveProc createInterleaveProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcImpl();
    }

    /**
     * Create an instance of CommMixed
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommMixed createCommMixed()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommMixedImpl();
    }

    /**
     * Create an instance of ProcDeclElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcDeclElement createProcDeclElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcDeclElementImpl();
    }

    /**
     * Create an instance of IdxRepIntChProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IdxRepIntChProc createIdxRepIntChProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepIntChProcImpl();
    }

    /**
     * Create an instance of AssignmentCmd
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentCmd createAssignmentCmd()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCmdImpl();
    }

    /**
     * Create an instance of NSExprUnion
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NSExprUnion createNSExprUnion()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NSExprUnionImpl();
    }

    /**
     * Create an instance of Command
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Command createCommand()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommandImpl();
    }

    /**
     * Create an instance of CSDecl
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CSDecl createCSDecl()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CSDeclImpl();
    }

    /**
     * Create an instance of Comm
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Comm createComm()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommImpl();
    }

    /**
     * Create an instance of IntChoiceProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceProc createIntChoiceProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcImpl();
    }

    /**
     * Create an instance of CommOutElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommOutElement createCommOutElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommOutElementImpl();
    }

    /**
     * Create an instance of ActionDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionDef createActionDef()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionDefImpl();
    }

    /**
     * Create an instance of RepExtChProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RepExtChProc createRepExtChProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RepExtChProcImpl();
    }

    /**
     * Create an instance of RenameProc
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RenameProc createRenameProc()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcImpl();
    }

    /**
     * Create an instance of CommInElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommInElement createCommInElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommInElementImpl();
    }

    /**
     * Create an instance of CommParam
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommParam createCommParam()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommParamImpl();
    }

}
