//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.03.03 at 09:16:01 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.sourceforge.czt.circus.jaxb.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap(197, 0.75F);
    private static java.util.HashMap rootTagMap = new java.util.HashMap();
    public final static net.sourceforge.czt.circus.jaxb.gen.impl.runtime.GrammarInfo grammarInfo = new net.sourceforge.czt.circus.jaxb.gen.impl.runtime.GrammarInfoImpl(rootTagMap, defaultImplementations, (net.sourceforge.czt.circus.jaxb.gen.ObjectFactory.class));
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);

    static {
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.PrefixingAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionD.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionDImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRIElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NameSetParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessEElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessEElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.UnionNameSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.UnionNameSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessRIElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRIElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntersectionNameSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntersectionNameSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelProcessElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Communication.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Action1 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.Action1Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.DifferenceChannelSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceChannelSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.GuardedAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Field.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NameSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NameSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.MuAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.MuActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SkipAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SkipActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RefNameSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CallProcessElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualParamAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.GuardedActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RefNameSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideProcessElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentPairElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Process2 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SchChannelParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalParamAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelSetParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Command.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommandImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentPair.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InputFieldElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NameSet2Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NameSet2ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.DifferenceNameSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceNameSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentCommand.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCommandImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SetChannelSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SetChannelSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Process1Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.Process1ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RefChannelSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RefChannelSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SetNameSetElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqProcessRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.BasicAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.BasicActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualGenProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Action2Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.Action2ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SetChannelSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SetChannelSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.StopAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.StopActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.PrefixingActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessDef.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommand.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCommandImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SetNameSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommandElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCommandElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.DescProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Action1Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.Action1ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SeqProcessR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionDElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionDElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.OutputField.class), "net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IndexedProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SchTextActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SchTextActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InstantiationProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InstantiationProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalParamProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.VarDeclCommand.class), "net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCommandImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualParamProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChaosAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChaosActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelSet2 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSet2Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessD.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.UnionChannelSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.UnionChannelSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelSet2Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSet2ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.AssignmentCommandElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCommandElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.MixedField.class), "net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.VarDeclCommandElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCommandElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalGenProcessElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessDElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessE.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessEImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SchChannelPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.MixedFieldElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NameSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Process1 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.Process1Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveProcessR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NameSet2 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.NameSet2Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.MuActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.MuActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RefChannelSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RefChannelSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RenameProcessElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InputField.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessDefElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FormalGenProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Process2Element.class), "net.sourceforge.czt.circus.jaxb.gen.impl.Process2ElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntersectChannelSet.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntersectChannelSetImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActualParamActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.RenameProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.NameSetPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelProcessR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommandElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCommandElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ChannelSetPara.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.OutputFieldElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.HideProcess.class), "net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommand.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCommandImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Action.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.Action2 .class), "net.sourceforge.czt.circus.jaxb.gen.impl.Action2Impl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.SchTextAction.class), "net.sourceforge.czt.circus.jaxb.gen.impl.SchTextActionImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.DescProcessElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessParaElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.IntChoiceActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ActionRElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ActionRElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ParallelActionRElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommunicationElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ExtChoiceActionR.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceActionRImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.CommandElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.CommandElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.InterleaveProcessRI.class), "net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRIImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.ProcessRElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.FieldElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.FieldElementImpl");
        defaultImplementations.put((net.sourceforge.czt.circus.jaxb.gen.BasicActionElement.class), "net.sourceforge.czt.circus.jaxb.gen.impl.BasicActionElementImpl");
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "OutputField"), (net.sourceforge.czt.circus.jaxb.gen.OutputFieldElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveProcessRI"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveProcessRI.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "DifferenceChannelSet"), (net.sourceforge.czt.circus.jaxb.gen.DifferenceChannelSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SetNameSet"), (net.sourceforge.czt.circus.jaxb.gen.SetNameSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceActionR"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceActionR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActionR"), (net.sourceforge.czt.circus.jaxb.gen.ActionRElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "FormalParamProcess"), (net.sourceforge.czt.circus.jaxb.gen.FormalParamProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqProcessR"), (net.sourceforge.czt.circus.jaxb.gen.SeqProcessR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Action"), (net.sourceforge.czt.circus.jaxb.gen.ActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Action1"), (net.sourceforge.czt.circus.jaxb.gen.Action1Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SchTextAction"), (net.sourceforge.czt.circus.jaxb.gen.SchTextActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SkipAction"), (net.sourceforge.czt.circus.jaxb.gen.SkipAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RenameProcess"), (net.sourceforge.czt.circus.jaxb.gen.RenameProcessElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Field"), (net.sourceforge.czt.circus.jaxb.gen.FieldElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IndexedProcess"), (net.sourceforge.czt.circus.jaxb.gen.IndexedProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqProcessRI"), (net.sourceforge.czt.circus.jaxb.gen.SeqProcessRI.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Command"), (net.sourceforge.czt.circus.jaxb.gen.CommandElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "UnionNameSet"), (net.sourceforge.czt.circus.jaxb.gen.UnionNameSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "VarDeclCommand"), (net.sourceforge.czt.circus.jaxb.gen.VarDeclCommandElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActualGenProcess"), (net.sourceforge.czt.circus.jaxb.gen.ActualGenProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RefChannelSet"), (net.sourceforge.czt.circus.jaxb.gen.RefChannelSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChannelSet2"), (net.sourceforge.czt.circus.jaxb.gen.ChannelSet2Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NameSet2"), (net.sourceforge.czt.circus.jaxb.gen.NameSet2Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "FormalGenProcess"), (net.sourceforge.czt.circus.jaxb.gen.FormalGenProcessElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcessPara"), (net.sourceforge.czt.circus.jaxb.gen.ProcessParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveAction"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "BasicAction"), (net.sourceforge.czt.circus.jaxb.gen.BasicActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "AssignmentPair"), (net.sourceforge.czt.circus.jaxb.gen.AssignmentPairElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntersectChannelSet"), (net.sourceforge.czt.circus.jaxb.gen.IntersectChannelSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChannelPara"), (net.sourceforge.czt.circus.jaxb.gen.ChannelParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChannelSet"), (net.sourceforge.czt.circus.jaxb.gen.ChannelSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NameSetPara"), (net.sourceforge.czt.circus.jaxb.gen.NameSetParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqProcess"), (net.sourceforge.czt.circus.jaxb.gen.SeqProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CallProcess"), (net.sourceforge.czt.circus.jaxb.gen.CallProcessElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "MuAction"), (net.sourceforge.czt.circus.jaxb.gen.MuActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Process1"), (net.sourceforge.czt.circus.jaxb.gen.Process1Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceProcessRI"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessRI.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChannelSetPara"), (net.sourceforge.czt.circus.jaxb.gen.ChannelSetParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelProcessRI"), (net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRIElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "DescProcess"), (net.sourceforge.czt.circus.jaxb.gen.DescProcessElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcessD"), (net.sourceforge.czt.circus.jaxb.gen.ProcessDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "DifferenceNameSet"), (net.sourceforge.czt.circus.jaxb.gen.DifferenceNameSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InstantiationProcess"), (net.sourceforge.czt.circus.jaxb.gen.InstantiationProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceAction"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcessR"), (net.sourceforge.czt.circus.jaxb.gen.ProcessRElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceActionR"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceActionR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveActionR"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveActionR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "StopAction"), (net.sourceforge.czt.circus.jaxb.gen.StopAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "GuardedAction"), (net.sourceforge.czt.circus.jaxb.gen.GuardedActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IfGuardedCommand"), (net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommandElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelActionR"), (net.sourceforge.czt.circus.jaxb.gen.ParallelActionRElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InputField"), (net.sourceforge.czt.circus.jaxb.gen.InputFieldElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "MixedField"), (net.sourceforge.czt.circus.jaxb.gen.MixedFieldElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcessDef"), (net.sourceforge.czt.circus.jaxb.gen.ProcessDefElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActionD"), (net.sourceforge.czt.circus.jaxb.gen.ActionDElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelProcess"), (net.sourceforge.czt.circus.jaxb.gen.ParallelProcessElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "HideAction"), (net.sourceforge.czt.circus.jaxb.gen.HideActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqAction"), (net.sourceforge.czt.circus.jaxb.gen.SeqAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "NameSet"), (net.sourceforge.czt.circus.jaxb.gen.NameSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntersectionNameSet"), (net.sourceforge.czt.circus.jaxb.gen.IntersectionNameSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActionPara"), (net.sourceforge.czt.circus.jaxb.gen.ActionParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Action2"), (net.sourceforge.czt.circus.jaxb.gen.Action2Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SchChannelPara"), (net.sourceforge.czt.circus.jaxb.gen.SchChannelParaElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ChaosAction"), (net.sourceforge.czt.circus.jaxb.gen.ChaosAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcessE"), (net.sourceforge.czt.circus.jaxb.gen.ProcessEElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceProcessRI"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessRI.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelProcessR"), (net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActualParamAction"), (net.sourceforge.czt.circus.jaxb.gen.ActualParamActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceProcess"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "PrefixingAction"), (net.sourceforge.czt.circus.jaxb.gen.PrefixingActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceProcessR"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "CallAction"), (net.sourceforge.czt.circus.jaxb.gen.CallActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "UnionChannelSet"), (net.sourceforge.czt.circus.jaxb.gen.UnionChannelSet.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SpecStmtCommand"), (net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommandElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "IntChoiceProcessR"), (net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveProcess"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ActualParamProcess"), (net.sourceforge.czt.circus.jaxb.gen.ActualParamProcess.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceAction"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "FormalParamAction"), (net.sourceforge.czt.circus.jaxb.gen.FormalParamAction.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParallelAction"), (net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SeqActionR"), (net.sourceforge.czt.circus.jaxb.gen.SeqActionR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "InterleaveProcessR"), (net.sourceforge.czt.circus.jaxb.gen.InterleaveProcessR.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "SetChannelSet"), (net.sourceforge.czt.circus.jaxb.gen.SetChannelSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Communication"), (net.sourceforge.czt.circus.jaxb.gen.CommunicationElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ProcessRI"), (net.sourceforge.czt.circus.jaxb.gen.ProcessRIElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ParAction"), (net.sourceforge.czt.circus.jaxb.gen.ParActionElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "AssignmentCommand"), (net.sourceforge.czt.circus.jaxb.gen.AssignmentCommandElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "HideProcess"), (net.sourceforge.czt.circus.jaxb.gen.HideProcessElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "RefNameSet"), (net.sourceforge.czt.circus.jaxb.gen.RefNameSetElement.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "Process2"), (net.sourceforge.czt.circus.jaxb.gen.Process2Element.class));
        rootTagMap.put(new javax.xml.namespace.QName("http://czt.sourceforge.net/circus", "ExtChoiceProcess"), (net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcess.class));
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sourceforge.czt.circus.jaxb.gen
     * 
     */
    public ObjectFactory() {
        super(grammarInfo);
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface
     *     the Class object of the javacontent interface to instantiate
     * @return
     *     a new instance
     * @throws JAXBException
     *     if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name
     *     the name of the property to retrieve
     * @return
     *     the value of the requested property
     * @throws PropertyException
     *     when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param value
     *     the value of the property to be set
     * @param name
     *     the name of the property to retrieve
     * @throws PropertyException
     *     when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of PrefixingAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.PrefixingAction createPrefixingAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionImpl();
    }

    /**
     * Create an instance of ActionD
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionD createActionD()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionDImpl();
    }

    /**
     * Create an instance of ParallelActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelActionElement createParallelActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionElementImpl();
    }

    /**
     * Create an instance of ParallelProcessRIElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRIElement createParallelProcessRIElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIElementImpl();
    }

    /**
     * Create an instance of ActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionR createActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl();
    }

    /**
     * Create an instance of NameSetParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NameSetParaElement createNameSetParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl();
    }

    /**
     * Create an instance of ProcessEElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessEElement createProcessEElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessEElementImpl();
    }

    /**
     * Create an instance of UnionNameSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.UnionNameSet createUnionNameSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.UnionNameSetImpl();
    }

    /**
     * Create an instance of ProcessRIElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessRIElement createProcessRIElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRIElementImpl();
    }

    /**
     * Create an instance of HideAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideAction createHideAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideActionImpl();
    }

    /**
     * Create an instance of IntersectionNameSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntersectionNameSet createIntersectionNameSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntersectionNameSetImpl();
    }

    /**
     * Create an instance of CallActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallActionElement createCallActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallActionElementImpl();
    }

    /**
     * Create an instance of ParallelProcessElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelProcessElement createParallelProcessElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl();
    }

    /**
     * Create an instance of Communication
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Communication createCommunication()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl();
    }

    /**
     * Create an instance of CallProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallProcess createCallProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessImpl();
    }

    /**
     * Create an instance of Action1
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Action1 createAction1()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Action1Impl();
    }

    /**
     * Create an instance of InterleaveAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveAction createInterleaveAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveActionImpl();
    }

    /**
     * Create an instance of ExtChoiceProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcess createExtChoiceProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl();
    }

    /**
     * Create an instance of DifferenceChannelSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.DifferenceChannelSet createDifferenceChannelSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceChannelSetImpl();
    }

    /**
     * Create an instance of ActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionElement createActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionElementImpl();
    }

    /**
     * Create an instance of GuardedAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.GuardedAction createGuardedAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionImpl();
    }

    /**
     * Create an instance of Field
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Field createField()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl();
    }

    /**
     * Create an instance of ChannelPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelPara createChannelPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaImpl();
    }

    /**
     * Create an instance of CallAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallAction createCallAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallActionImpl();
    }

    /**
     * Create an instance of NameSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NameSetElement createNameSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NameSetElementImpl();
    }

    /**
     * Create an instance of MuAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.MuAction createMuAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.MuActionImpl();
    }

    /**
     * Create an instance of SkipAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SkipAction createSkipAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SkipActionImpl();
    }

    /**
     * Create an instance of RefNameSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RefNameSetElement createRefNameSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetElementImpl();
    }

    /**
     * Create an instance of SeqActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqActionR createSeqActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqActionRImpl();
    }

    /**
     * Create an instance of ChannelSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelSetElement createChannelSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetElementImpl();
    }

    /**
     * Create an instance of SeqProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqProcess createSeqProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl();
    }

    /**
     * Create an instance of CallProcessElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CallProcessElement createCallProcessElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl();
    }

    /**
     * Create an instance of InterleaveActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveActionR createInterleaveActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveActionRImpl();
    }

    /**
     * Create an instance of ProcessPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessPara createProcessPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaImpl();
    }

    /**
     * Create an instance of ProcessR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessR createProcessR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRImpl();
    }

    /**
     * Create an instance of ActualParamAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualParamAction createActualParamAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionImpl();
    }

    /**
     * Create an instance of ParActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParActionElement createParActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParActionElementImpl();
    }

    /**
     * Create an instance of GuardedActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.GuardedActionElement createGuardedActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.GuardedActionElementImpl();
    }

    /**
     * Create an instance of RefNameSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RefNameSet createRefNameSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetImpl();
    }

    /**
     * Create an instance of HideProcessElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideProcessElement createHideProcessElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl();
    }

    /**
     * Create an instance of AssignmentPairElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentPairElement createAssignmentPairElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairElementImpl();
    }

    /**
     * Create an instance of Process2
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Process2 createProcess2()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl();
    }

    /**
     * Create an instance of SchChannelParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SchChannelParaElement createSchChannelParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaElementImpl();
    }

    /**
     * Create an instance of FormalParamAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalParamAction createFormalParamAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamActionImpl();
    }

    /**
     * Create an instance of ChannelSetParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelSetParaElement createChannelSetParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl();
    }

    /**
     * Create an instance of Command
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Command createCommand()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommandImpl();
    }

    /**
     * Create an instance of AssignmentPair
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentPair createAssignmentPair()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentPairImpl();
    }

    /**
     * Create an instance of ExtChoiceProcessR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessR createExtChoiceProcessR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRImpl();
    }

    /**
     * Create an instance of InputFieldElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InputFieldElement createInputFieldElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldElementImpl();
    }

    /**
     * Create an instance of ParAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParAction createParAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParActionImpl();
    }

    /**
     * Create an instance of NameSet2Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NameSet2Element createNameSet2Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NameSet2ElementImpl();
    }

    /**
     * Create an instance of DifferenceNameSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.DifferenceNameSet createDifferenceNameSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceNameSetImpl();
    }

    /**
     * Create an instance of ParallelAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelAction createParallelAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionImpl();
    }

    /**
     * Create an instance of AssignmentCommand
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentCommand createAssignmentCommand()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCommandImpl();
    }

    /**
     * Create an instance of SetChannelSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SetChannelSetElement createSetChannelSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SetChannelSetElementImpl();
    }

    /**
     * Create an instance of Process1Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Process1Element createProcess1Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Process1ElementImpl();
    }

    /**
     * Create an instance of RefChannelSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RefChannelSetElement createRefChannelSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RefChannelSetElementImpl();
    }

    /**
     * Create an instance of SetNameSetElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SetNameSetElement createSetNameSetElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetElementImpl();
    }

    /**
     * Create an instance of SeqProcessRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqProcessRI createSeqProcessRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRIImpl();
    }

    /**
     * Create an instance of BasicAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.BasicAction createBasicAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.BasicActionImpl();
    }

    /**
     * Create an instance of ActualGenProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualGenProcess createActualGenProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcessImpl();
    }

    /**
     * Create an instance of Action2Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Action2Element createAction2Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Action2ElementImpl();
    }

    /**
     * Create an instance of InterleaveProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveProcess createInterleaveProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl();
    }

    /**
     * Create an instance of HideActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideActionElement createHideActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideActionElementImpl();
    }

    /**
     * Create an instance of ParallelProcessRElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRElement createParallelProcessRElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRElementImpl();
    }

    /**
     * Create an instance of SetChannelSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SetChannelSet createSetChannelSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SetChannelSetImpl();
    }

    /**
     * Create an instance of StopAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.StopAction createStopAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.StopActionImpl();
    }

    /**
     * Create an instance of PrefixingActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.PrefixingActionElement createPrefixingActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.PrefixingActionElementImpl();
    }

    /**
     * Create an instance of ProcessDef
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessDef createProcessDef()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl();
    }

    /**
     * Create an instance of IntChoiceProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcess createIntChoiceProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl();
    }

    /**
     * Create an instance of SpecStmtCommand
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommand createSpecStmtCommand()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCommandImpl();
    }

    /**
     * Create an instance of SetNameSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SetNameSet createSetNameSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetImpl();
    }

    /**
     * Create an instance of SeqAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqAction createSeqAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqActionImpl();
    }

    /**
     * Create an instance of IfGuardedCommandElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommandElement createIfGuardedCommandElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCommandElementImpl();
    }

    /**
     * Create an instance of ActionPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionPara createActionPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaImpl();
    }

    /**
     * Create an instance of DescProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.DescProcess createDescProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessImpl();
    }

    /**
     * Create an instance of Action1Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Action1Element createAction1Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Action1ElementImpl();
    }

    /**
     * Create an instance of SeqProcessR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SeqProcessR createSeqProcessR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRImpl();
    }

    /**
     * Create an instance of ActionDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionDElement createActionDElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionDElementImpl();
    }

    /**
     * Create an instance of OutputField
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.OutputField createOutputField()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldImpl();
    }

    /**
     * Create an instance of IndexedProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IndexedProcess createIndexedProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl();
    }

    /**
     * Create an instance of SchTextActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SchTextActionElement createSchTextActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SchTextActionElementImpl();
    }

    /**
     * Create an instance of InstantiationProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InstantiationProcess createInstantiationProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InstantiationProcessImpl();
    }

    /**
     * Create an instance of ChannelParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelParaElement createChannelParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl();
    }

    /**
     * Create an instance of ChannelSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelSet createChannelSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl();
    }

    /**
     * Create an instance of ExtChoiceAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceAction createExtChoiceAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceActionImpl();
    }

    /**
     * Create an instance of IntChoiceProcessR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessR createIntChoiceProcessR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRImpl();
    }

    /**
     * Create an instance of FormalParamProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalParamProcess createFormalParamProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcessImpl();
    }

    /**
     * Create an instance of VarDeclCommand
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.VarDeclCommand createVarDeclCommand()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCommandImpl();
    }

    /**
     * Create an instance of ActualParamProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualParamProcess createActualParamProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcessImpl();
    }

    /**
     * Create an instance of ExtChoiceProcessRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceProcessRI createExtChoiceProcessRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRIImpl();
    }

    /**
     * Create an instance of ChaosAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChaosAction createChaosAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChaosActionImpl();
    }

    /**
     * Create an instance of ChannelSet2
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelSet2 createChannelSet2()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSet2Impl();
    }

    /**
     * Create an instance of ProcessD
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessD createProcessD()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDImpl();
    }

    /**
     * Create an instance of UnionChannelSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.UnionChannelSet createUnionChannelSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.UnionChannelSetImpl();
    }

    /**
     * Create an instance of ChannelSet2Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelSet2Element createChannelSet2Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSet2ElementImpl();
    }

    /**
     * Create an instance of AssignmentCommandElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.AssignmentCommandElement createAssignmentCommandElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.AssignmentCommandElementImpl();
    }

    /**
     * Create an instance of ParallelProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelProcess createParallelProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessImpl();
    }

    /**
     * Create an instance of MixedField
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.MixedField createMixedField()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldImpl();
    }

    /**
     * Create an instance of VarDeclCommandElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.VarDeclCommandElement createVarDeclCommandElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.VarDeclCommandElementImpl();
    }

    /**
     * Create an instance of FormalGenProcessElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalGenProcessElement createFormalGenProcessElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessElementImpl();
    }

    /**
     * Create an instance of ProcessDElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessDElement createProcessDElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDElementImpl();
    }

    /**
     * Create an instance of ProcessE
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessE createProcessE()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessEImpl();
    }

    /**
     * Create an instance of SchChannelPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SchChannelPara createSchChannelPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaImpl();
    }

    /**
     * Create an instance of MixedFieldElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.MixedFieldElement createMixedFieldElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldElementImpl();
    }

    /**
     * Create an instance of NameSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NameSet createNameSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl();
    }

    /**
     * Create an instance of Process1
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Process1 createProcess1()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Process1Impl();
    }

    /**
     * Create an instance of ParallelProcessRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelProcessRI createParallelProcessRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIImpl();
    }

    /**
     * Create an instance of InterleaveProcessR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveProcessR createInterleaveProcessR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRImpl();
    }

    /**
     * Create an instance of NameSet2
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NameSet2 createNameSet2()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NameSet2Impl();
    }

    /**
     * Create an instance of MuActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.MuActionElement createMuActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.MuActionElementImpl();
    }

    /**
     * Create an instance of RefChannelSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RefChannelSet createRefChannelSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RefChannelSetImpl();
    }

    /**
     * Create an instance of IntChoiceAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceAction createIntChoiceAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceActionImpl();
    }

    /**
     * Create an instance of RenameProcessElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RenameProcessElement createRenameProcessElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl();
    }

    /**
     * Create an instance of InputField
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InputField createInputField()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldImpl();
    }

    /**
     * Create an instance of ProcessDefElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessDefElement createProcessDefElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefElementImpl();
    }

    /**
     * Create an instance of FormalGenProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FormalGenProcess createFormalGenProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessImpl();
    }

    /**
     * Create an instance of Process2Element
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Process2Element createProcess2Element()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Process2ElementImpl();
    }

    /**
     * Create an instance of IntersectChannelSet
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntersectChannelSet createIntersectChannelSet()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntersectChannelSetImpl();
    }

    /**
     * Create an instance of IntChoiceProcessRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcessRI createIntChoiceProcessRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRIImpl();
    }

    /**
     * Create an instance of ProcessRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessRI createProcessRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRIImpl();
    }

    /**
     * Create an instance of ActualParamActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActualParamActionElement createActualParamActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamActionElementImpl();
    }

    /**
     * Create an instance of RenameProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.RenameProcess createRenameProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessImpl();
    }

    /**
     * Create an instance of NameSetPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.NameSetPara createNameSetPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaImpl();
    }

    /**
     * Create an instance of ParallelProcessR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelProcessR createParallelProcessR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRImpl();
    }

    /**
     * Create an instance of SpecStmtCommandElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SpecStmtCommandElement createSpecStmtCommandElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SpecStmtCommandElementImpl();
    }

    /**
     * Create an instance of ChannelSetPara
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ChannelSetPara createChannelSetPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaImpl();
    }

    /**
     * Create an instance of ActionParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionParaElement createActionParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl();
    }

    /**
     * Create an instance of OutputFieldElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.OutputFieldElement createOutputFieldElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldElementImpl();
    }

    /**
     * Create an instance of HideProcess
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.HideProcess createHideProcess()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessImpl();
    }

    /**
     * Create an instance of ParallelActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelActionR createParallelActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl();
    }

    /**
     * Create an instance of IfGuardedCommand
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommand createIfGuardedCommand()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IfGuardedCommandImpl();
    }

    /**
     * Create an instance of Action
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Action createAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionImpl();
    }

    /**
     * Create an instance of Action2
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.Action2 createAction2()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Action2Impl();
    }

    /**
     * Create an instance of SchTextAction
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.SchTextAction createSchTextAction()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.SchTextActionImpl();
    }

    /**
     * Create an instance of DescProcessElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.DescProcessElement createDescProcessElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessElementImpl();
    }

    /**
     * Create an instance of ProcessParaElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessParaElement createProcessParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl();
    }

    /**
     * Create an instance of IntChoiceActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.IntChoiceActionR createIntChoiceActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceActionRImpl();
    }

    /**
     * Create an instance of ActionRElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ActionRElement createActionRElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ActionRElementImpl();
    }

    /**
     * Create an instance of ParallelActionRElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ParallelActionRElement createParallelActionRElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRElementImpl();
    }

    /**
     * Create an instance of CommunicationElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommunicationElement createCommunicationElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationElementImpl();
    }

    /**
     * Create an instance of ExtChoiceActionR
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ExtChoiceActionR createExtChoiceActionR()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceActionRImpl();
    }

    /**
     * Create an instance of CommandElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.CommandElement createCommandElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommandElementImpl();
    }

    /**
     * Create an instance of InterleaveProcessRI
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.InterleaveProcessRI createInterleaveProcessRI()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRIImpl();
    }

    /**
     * Create an instance of ProcessRElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.ProcessRElement createProcessRElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ProcessRElementImpl();
    }

    /**
     * Create an instance of FieldElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.FieldElement createFieldElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.FieldElementImpl();
    }

    /**
     * Create an instance of BasicActionElement
     * 
     * @throws JAXBException
     *     if an error occurs
     */
    public net.sourceforge.czt.circus.jaxb.gen.BasicActionElement createBasicActionElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.BasicActionElementImpl();
    }

}
