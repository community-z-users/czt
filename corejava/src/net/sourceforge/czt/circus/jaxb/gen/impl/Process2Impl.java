//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.03.08 at 10:18:03 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class Process2Impl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl
    implements net.sourceforge.czt.circus.jaxb.gen.Process2, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.circus.jaxb.gen.ProcessDef _LeftProc;
    protected net.sourceforge.czt.circus.jaxb.gen.ProcessDef _RightProc;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.Process2 .class);
    }

    public net.sourceforge.czt.circus.jaxb.gen.ProcessDef getLeftProc() {
        return _LeftProc;
    }

    public void setLeftProc(net.sourceforge.czt.circus.jaxb.gen.ProcessDef value) {
        _LeftProc = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.ProcessDef getRightProc() {
        return _RightProc;
    }

    public void setRightProc(net.sourceforge.czt.circus.jaxb.gen.ProcessDef value) {
        _RightProc = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_LeftProc instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftProc), "LeftProc");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "ProcessDef");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftProc), "LeftProc");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftProc), "LeftProc");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftProc), "LeftProc");
            context.endElement();
        }
        if (_RightProc instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightProc), "RightProc");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "ProcessDef");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightProc), "RightProc");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightProc), "RightProc");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightProc), "RightProc");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_LeftProc instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftProc), "LeftProc");
        }
        if (_RightProc instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightProc), "RightProc");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_LeftProc instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftProc), "LeftProc");
        }
        if (_RightProc instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightProc), "RightProc");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.Process2 .class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
+"ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
+"xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
+"aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolea"
+"n\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsr\u0000 com.su"
+"n.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar"
+".UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000 com.sun.msv.g"
+"rammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq"
+"\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.Any"
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleNameC"
+"lass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespace"
+"URIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTy"
+"pet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007ppsq\u0000~"
+"\u0000\u0015q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.Q"
+"nameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomi"
+"cType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteSpacet\u0000.Lcom/s"
+"un/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.o"
+"rg/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Ex"
+"pression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000epsr\u0000\u001bcom.sun"
+".msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000 L\u0000\fnamespace"
+"URIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://www.w3.org/2001/X"
+"MLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge"
+".net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000"
+"~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00008net.sourceforge.czt.circus.jax"
+"b.gen.RenameProcessElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt.circ"
+"us.jaxb.gen.ExtChoiceProcessRIq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt."
+"circus.jaxb.gen.DescProcessElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~"
+"\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge."
+"czt.circus.jaxb.gen.SeqProcessRq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt"
+".circus.jaxb.gen.HideProcessElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000"
+"~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge"
+".czt.circus.jaxb.gen.SeqProcessq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00008net.sourceforge.czt"
+".circus.jaxb.gen.InstantiationProcessq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourcefor"
+"ge.czt.circus.jaxb.gen.IndexedProcessq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourcefor"
+"ge.czt.circus.jaxb.gen.SeqProcessRIq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000"
+"~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge"
+".czt.circus.jaxb.gen.IntChoiceProcessRIq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourcef"
+"orge.czt.circus.jaxb.gen.ExtChoiceProcessq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourc"
+"eforge.czt.circus.jaxb.gen.CallProcessElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000s"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.s"
+"ourceforge.czt.circus.jaxb.gen.ActualParamProcessq\u0000~\u0000#sq\u0000~\u0000\t"
+"pp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000;n"
+"et.sourceforge.czt.circus.jaxb.gen.ParallelProcessRElementq\u0000"
+"~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000<net.sourceforge.czt.circus.jaxb.gen.ParallelProcessR"
+"IElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000;net.sourceforge.czt.circus.jaxb.gen.Formal"
+"GenProcessElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005net.sourceforge.czt.circus.jaxb.g"
+"en.ExtChoiceProcessRq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00007net.sourceforge.czt.circus.jax"
+"b.gen.InterleaveProcessRIq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.circu"
+"s.jaxb.gen.IntChoiceProcessq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt.cir"
+"cus.jaxb.gen.InterleaveProcessRq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt"
+".circus.jaxb.gen.FormalParamProcessq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000"
+"~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005net.sourceforge"
+".czt.circus.jaxb.gen.IntChoiceProcessRq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007pp"
+"sq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000:net.sourcefo"
+"rge.czt.circus.jaxb.gen.ParallelProcessElementq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000"
+"sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net."
+"sourceforge.czt.circus.jaxb.gen.ActualGenProcessq\u0000~\u0000#sq\u0000~\u0000\tp"
+"p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005ne"
+"t.sourceforge.czt.circus.jaxb.gen.InterleaveProcessq\u0000~\u0000#sq\u0000~"
+"\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pp"
+"sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~"
+"\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pp"
+"sq\u0000~\u0000\u0007ppsq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\\q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000bq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000hq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000nq\u0000~\u0000#sq\u0000~"
+"\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000"
+"~\u0000tq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000zq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0080q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0086q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u008cq\u0000~\u0000#sq\u0000~"
+"\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000"
+"~\u0000\u0092q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u0098q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u009eq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00a4q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00aaq\u0000~\u0000#sq\u0000~"
+"\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000"
+"~\u0000\u00b0q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00b6q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00bcq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c2q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00c8q\u0000~\u0000#sq\u0000~"
+"\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000"
+"~\u0000\u00ceq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00d4q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00daq\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00e0q\u0000~\u0000#sq\u0000~\u0000\tpp\u0000sq\u0000~\u0000\u0007p"
+"psq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000\u00e6q\u0000~\u0000#sq\u0000~"
+"\u0000\tpp\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000"
+"~\u0000\u00ecq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\b"
+"expTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xp"
+"sr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003"
+"I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Exp"
+"ressionPool;xp\u0000\u0000\u0000\u009b\u0001pq\u0000~\u0000Bq\u0000~\u0000\u00f0q\u0000~\u0000\bq\u0000~\u0001>q\u0000~\u00019q\u0000~\u00014q\u0000~\u0001/q\u0000~\u0001*"
+"q\u0000~\u0001%q\u0000~\u0001 q\u0000~\u0001\u001bq\u0000~\u0001\u0016q\u0000~\u0001\u0011q\u0000~\u0001\fq\u0000~\u0001\u0007q\u0000~\u0000\u00e9q\u0000~\u0000\u00e3q\u0000~\u0000\u00ddq\u0000~\u0000\u00d7q\u0000~\u0000\u00d1"
+"q\u0000~\u0000\u00cbq\u0000~\u0000\u00c5q\u0000~\u0000\u0014q\u0000~\u0000Fq\u0000~\u0000Yq\u0000~\u0000_q\u0000~\u0000Jq\u0000~\u0000eq\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}"
+"q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0001C"
+"q\u0000~\u0001Hq\u0000~\u0000\u00f8q\u0000~\u0001Mq\u0000~\u0001Rq\u0000~\u0001Wq\u0000~\u0001\\q\u0000~\u0000\u00f4q\u0000~\u0001aq\u0000~\u0001fq\u0000~\u0001kq\u0000~\u0001pq\u0000~\u0001u"
+"q\u0000~\u0001zq\u0000~\u0001\u007fq\u0000~\u0000\u00feq\u0000~\u0000Pq\u0000~\u0000\u00fdq\u0000~\u0000Oq\u0000~\u0000?q\u0000~\u0000\u00edq\u0000~\u0001=q\u0000~\u00018q\u0000~\u00013q\u0000~\u0001."
+"q\u0000~\u0001)q\u0000~\u0001$q\u0000~\u0001\u001fq\u0000~\u0001\u001aq\u0000~\u0001\u0015q\u0000~\u0001\u0010q\u0000~\u0001\u000bq\u0000~\u0001\u0006q\u0000~\u0000\u00e8q\u0000~\u0000\u00e2q\u0000~\u0000\u00dcq\u0000~\u0000\u00d6"
+"q\u0000~\u0000\u00d0q\u0000~\u0000\u00caq\u0000~\u0000\u00c4q\u0000~\u0000Xq\u0000~\u0000^q\u0000~\u0000dq\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088"
+"q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000\u00b2q\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u0011q\u0000~\u0000\u00fcq\u0000~\u0000N"
+"q\u0000~\u0000Aq\u0000~\u0001\u0002q\u0000~\u0000Tq\u0000~\u0001Bq\u0000~\u0001Gq\u0000~\u0001Lq\u0000~\u0001Qq\u0000~\u0001Vq\u0000~\u0001[q\u0000~\u0001`q\u0000~\u0001eq\u0000~\u0001j"
+"q\u0000~\u0001oq\u0000~\u0001tq\u0000~\u0000\u00efq\u0000~\u0001yq\u0000~\u0001~q\u0000~\u0001\u0001q\u0000~\u0000Sq\u0000~\u0001\u0003q\u0000~\u0000Uq\u0000~\u0000Gq\u0000~\u0000\u00f5q\u0000~\u0000C"
+"q\u0000~\u0000\u00f1q\u0000~\u0000Eq\u0000~\u0000\u00f3q\u0000~\u0000\u0006q\u0000~\u0000\u00fbq\u0000~\u0000Mq\u0000~\u0001\u0000q\u0000~\u0000Rq\u0000~\u0000Dq\u0000~\u0000\u00f2q\u0000~\u0000Hq\u0000~\u0000\u00f6"
+"q\u0000~\u0000\u00ffq\u0000~\u0000Qq\u0000~\u0000\u000fq\u0000~\u0000Kq\u0000~\u0000\u00f9q\u0000~\u0000Lq\u0000~\u0000\u00faq\u0000~\u0000$q\u0000~\u0001\u0004q\u0000~\u0000Vq\u0000~\u0000\u0005q\u0000~\u0000I"
+"q\u0000~\u0000\u00f7q\u0000~\u0000@q\u0000~\u0000\u00eex"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("RenameProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRIImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DescProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InstantiationProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InstantiationProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InstantiationProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IndexedProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRIImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRIImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CallProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActualParamProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FormalGenProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRIImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FormalParamProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActualGenProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProcessDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("ProcessDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        if (("RenameProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcessElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRIImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DescProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.DescProcessElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcessElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InstantiationProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InstantiationProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InstantiationProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IndexedProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqProcessRIImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRIImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CallProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcessElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActualParamProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessRIElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FormalGenProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcessElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcessRImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcessRI" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRIImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRIImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessRImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FormalParamProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProcessR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcessRImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelProcessElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActualGenProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProcess" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcessImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProcessDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("ProcessDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("ProcessDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        if (("ProcessDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            _LeftProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 7, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Process2Impl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            _RightProc = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessDefImpl.class), 5, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
