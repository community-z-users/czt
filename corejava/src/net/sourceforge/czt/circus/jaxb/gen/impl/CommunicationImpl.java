//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.03.01 at 02:55:30 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class CommunicationImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.circus.jaxb.gen.Communication, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _ChanFields;
    protected java.lang.Integer _MultiSych;
    protected java.lang.String _CommType;
    protected net.sourceforge.czt.z.jaxb.gen.RefName _ChanName;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.Communication.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getChanFields() {
        if (_ChanFields == null) {
            _ChanFields = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ChanFields;
    }

    public java.util.List getChanFields() {
        return _getChanFields();
    }

    public java.lang.Integer getMultiSych() {
        if (_MultiSych == null) {
            return net.sourceforge.czt.base.util.CztDatatypeConverter.parseInteger(com.sun.xml.bind.DatatypeConverterImpl.installHook("0"));
        } else {
            return _MultiSych;
        }
    }

    public void setMultiSych(java.lang.Integer value) {
        _MultiSych = value;
    }

    public java.lang.String getCommType() {
        if (_CommType == null) {
            return "Synch";
        } else {
            return _CommType;
        }
    }

    public void setCommType(java.lang.String value) {
        _CommType = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.RefName getChanName() {
        return _ChanName;
    }

    public void setChanName(net.sourceforge.czt.z.jaxb.gen.RefName value) {
        _ChanName = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_ChanFields == null)? 0 :_ChanFields.size());
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/circus", "ChanName");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChanName), "ChanName");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChanName), "ChanName");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChanName), "ChanName");
        context.endElement();
        while (idx1 != len1) {
            if (_ChanFields.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChanFields.get(idx1 ++)), "ChanFields");
            } else {
                context.startElement("http://czt.sourceforge.net/circus", "Field");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChanFields.get(idx_2 ++)), "ChanFields");
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChanFields.get(idx_3 ++)), "ChanFields");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChanFields.get(idx1 ++)), "ChanFields");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_ChanFields == null)? 0 :_ChanFields.size());
        if (_CommType!= null) {
            context.startAttribute("", "CommType");
            try {
                context.text(((java.lang.String) _CommType), "CommType");
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.circus.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_MultiSych!= null) {
            context.startAttribute("", "MultiSych");
            try {
                context.text(net.sourceforge.czt.base.util.CztDatatypeConverter.printInteger(((java.lang.Integer) _MultiSych)), "MultiSych");
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.circus.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_ChanFields.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChanFields.get(idx1 ++)), "ChanFields");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_ChanFields == null)? 0 :_ChanFields.size());
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_ChanFields.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChanFields.get(idx1 ++)), "ChanFields");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.Communication.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011"
+"java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq"
+"\u0000~\u0000\tppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom"
+".sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0010ps"
+"r\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\t"
+"nameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression"
+"$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.sun.msv.gra"
+"mmar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z.jaxb."
+"gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elem"
+"entssq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L"
+"\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.ms"
+"v.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype."
+"xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd"
+".ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatat"
+"ypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhi"
+"teSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000"
+" http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://w"
+"ww.w3.org/2001/XMLSchema-instanceq\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp:/"
+"/czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000"
+"\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourc"
+"eforge.czt.z.jaxb.gen.RefNameq\u0000~\u0000%sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000+q"
+"\u0000~\u0000;q\u0000~\u0000 sq\u0000~\u0000!t\u0000\bChanNamet\u0000!http://czt.sourceforge.net/circ"
+"ussq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\tq\u0000~\u0000\u0010psq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000s"
+"q\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00005net.s"
+"ourceforge.czt.circus.jaxb.gen.InputFieldElementq\u0000~\u0000%sq\u0000~\u0000\u000bq"
+"\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t"
+"\u00006net.sourceforge.czt.circus.jaxb.gen.OutputFieldElementq\u0000~\u0000"
+"%sq\u0000~\u0000\u000bq\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0014q\u0000~\u0000\u0010psq\u0000~\u0000\u0017q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000"
+" sq\u0000~\u0000!t\u00005net.sourceforge.czt.circus.jaxb.gen.MixedFieldElem"
+"entq\u0000~\u0000%q\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psq\u0000~\u0000(ppsr\u0000)com.sun.msv.dat"
+"atype.xsd.EnumerationFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/"
+"Set;xr\u00009com.sun.msv.datatype.xsd.DataTypeWithValueConstraint"
+"Facet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFac"
+"et\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseType"
+"t\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet"
+"\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\"xq"
+"\u0000~\u0000/q\u0000~\u0000Mt\u0000\bCommTypesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceP"
+"rocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00005\u0000\u0000sr\u0000#com.sun.msv.datatype"
+".xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~\u0000-q\u0000~\u00002t\u0000\u0006stri"
+"ngq\u0000~\u0000p\u0001q\u0000~\u0000rt\u0000\u000benumerationsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000x"
+"pw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0005Syncht\u0000\u0006Outputt\u0000\u0005Mixedt\u0000\u0005Inputxq\u0000~\u00008sq\u0000~\u00009"
+"q\u0000~\u0000nq\u0000~\u0000Msq\u0000~\u0000!t\u0000\bCommTypet\u0000\u0000q\u0000~\u0000 sq\u0000~\u0000\tppsq\u0000~\u0000\u0017q\u0000~\u0000\u0010psq\u0000~\u0000"
+"(ppsr\u0000/com.sun.msv.datatype.xsd.NonNegativeIntegerType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+"
+"com.sun.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbas"
+"eFacetsq\u0000~\u0000kxq\u0000~\u0000-q\u0000~\u00002t\u0000\u0012nonNegativeIntegerq\u0000~\u00006sr\u0000*com.sun"
+".msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.ms"
+"v.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/la"
+"ng/Object;xq\u0000~\u0000ippq\u0000~\u00006\u0000\u0000sq\u0000~\u0000\u0083q\u0000~\u00002t\u0000\u0007integerq\u0000~\u00006sr\u0000,com.s"
+"un.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr"
+"\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexicalConstraintFace"
+"tT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000jppq\u0000~\u00006\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.Numb"
+"erType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000-q\u0000~\u00002t\u0000\u0007decimalq\u0000~\u00006q\u0000~\u0000\u0091t\u0000\u000efractionD"
+"igits\u0000\u0000\u0000\u0000q\u0000~\u0000\u008bt\u0000\fminInclusivesr\u0000)com.sun.msv.datatype.xsd.In"
+"tegerValueType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000\"xr\u0000\u0010java.lang.Number\u0086\u00ac"
+"\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010q\u0000~\u00008sq\u0000~\u00009q\u0000~\u0000\u0086q\u0000~\u00002sq\u0000~\u0000!t\u0000\tMultiSychq\u0000~\u0000~q"
+"\u0000~\u0000 sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000\u0019\u0001pq\u0000~\u0000Qq\u0000~\u0000&q\u0000~\u0000Iq\u0000~\u0000Nq\u0000~\u0000\u007fq\u0000~\u0000\nq\u0000~\u0000Pq\u0000~\u0000\u0011q\u0000~\u0000"
+"Bq\u0000~\u0000\u0006q\u0000~\u0000\bq\u0000~\u0000Oq\u0000~\u0000\u0016q\u0000~\u0000Eq\u0000~\u0000Tq\u0000~\u0000Zq\u0000~\u0000`q\u0000~\u0000dq\u0000~\u0000\u0005q\u0000~\u0000\u0013q\u0000~\u0000"
+"Dq\u0000~\u0000Sq\u0000~\u0000Yq\u0000~\u0000_q\u0000~\u0000\u0007x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "MultiSych");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  8 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  7 :
                        if (("ChanName" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("InputField" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OutputField" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MixedField" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Field" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("Field" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "CommType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  11 :
                        if (("InputField" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InputFieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OutputField" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.OutputFieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MixedField" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.MixedFieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Field" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("Field" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FieldElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _MultiSych = net.sourceforge.czt.base.util.CztDatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _CommType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "MultiSych");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  8 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        if (("Field" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "CommType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl.class), 13, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        if (("ChanName" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  11 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("MultiSych" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  8 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname));
                            return ;
                        }
                        _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        if (("CommType" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  12 :
                        _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl.class), 13, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        attIdx = context.getAttribute("", "MultiSych");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 6;
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  8 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("CommType" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        attIdx = context.getAttribute("", "CommType");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText2(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  5 :
                        if (("MultiSych" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  12 :
                        _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl.class), 13, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this).new Unmarshaller(context)), 7, ___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            attIdx = context.getAttribute("", "MultiSych");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 6;
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  8 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _ChanName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 9, value));
                            return ;
                        case  1 :
                            eatText2(value);
                            state = 2;
                            return ;
                        case  10 :
                            state = 11;
                            continue outer;
                        case  0 :
                            attIdx = context.getAttribute("", "CommType");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText2(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  12 :
                            _getChanFields().add(((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.FieldImpl.class), 13, value)));
                            return ;
                        case  6 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.circus.jaxb.gen.impl.CommunicationImpl.this).new Unmarshaller(context)), 7, value);
                            return ;
                        case  4 :
                            eatText1(value);
                            state = 5;
                            return ;
                        case  11 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
