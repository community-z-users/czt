//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.02.24 at 01:10:48 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class Proc1Impl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl
    implements net.sourceforge.czt.circus.jaxb.gen.Proc1, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.circus.jaxb.gen.ProcDef _ProcDef;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.Proc1 .class);
    }

    public net.sourceforge.czt.circus.jaxb.gen.ProcDef getProcDef() {
        return _ProcDef;
    }

    public void setProcDef(net.sourceforge.czt.circus.jaxb.gen.ProcDef value) {
        _ProcDef = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_ProcDef instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProcDef), "ProcDef");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "ProcDef");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProcDef), "ProcDef");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProcDef), "ProcDef");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ProcDef), "ProcDef");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_ProcDef instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ProcDef), "ProcDef");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_ProcDef instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ProcDef), "ProcDef");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.Proc1 .class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom."
+"sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttr"
+"ibutesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsr\u0000 com.sun.msv.gr"
+"ammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.A"
+"ttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000"
+"\rpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\f\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001f"
+"xq\u0000~\u0000\u001at\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+htt"
+"p://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0014q\u0000~\u0000\rp"
+"sr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relax"
+"ng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/ut"
+"il/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnam"
+"espaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/d"
+"atatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/"
+"XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteS"
+"paceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression"
+"$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001f"
+"xpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
+"-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zml"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000"
+"~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000"
+"~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.Ca"
+"llProcElementq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.circus.jaxb.gen.R"
+"epSeqCompProcq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq"
+"\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00005net.sourceforge.czt.circus.jaxb.gen.I"
+"dxRepSeqCompProcq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000"
+"\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000;net.sourceforge.czt.circus.jaxb.ge"
+"n.ParallelCompProcElementq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000Anet.sourceforge.czt.circu"
+"s.jaxb.gen.IdxRepParallelCompProcElementq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006"
+"ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.source"
+"forge.czt.circus.jaxb.gen.ActualGenProcq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00008net.sourcef"
+"orge.czt.circus.jaxb.gen.IdxRepInterleaveProcq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000s"
+"q\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.s"
+"ourceforge.czt.circus.jaxb.gen.IndexedProcq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~"
+"\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sour"
+"ceforge.czt.circus.jaxb.gen.SeqCompProcq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006p"
+"psq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000>net.sourcef"
+"orge.czt.circus.jaxb.gen.RepParallelCompProcElementq\u0000~\u0000\"sq\u0000~"
+"\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+"8net.sourceforge.czt.circus.jaxb.gen.FormalGenProcElementq\u0000~"
+"\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq"
+"\u0000~\u0000\u001et\u00000net.sourceforge.czt.circus.jaxb.gen.RepIntChProcq\u0000~\u0000\""
+"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u00001net.sourceforge.czt.circus.jaxb.gen.IntChoiceProcq\u0000~\u0000\"s"
+"q\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u00002net.sourceforge.czt.circus.jaxb.gen.InterleaveProcq\u0000~\u0000\"s"
+"q\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u00005net.sourceforge.czt.circus.jaxb.gen.RenameProcElementq\u0000~"
+"\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq"
+"\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.IdxRepExtChProcq\u0000"
+"~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001ds"
+"q\u0000~\u0000\u001et\u00005net.sourceforge.czt.circus.jaxb.gen.RepInterleavePro"
+"cq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.FormalParamPr"
+"ocq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.circus.jaxb.gen.ExtChoicePro"
+"cq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.circus.jaxb.gen.RepExtChProcq"
+"\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.HideProcElement"
+"q\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.IdxRepIntChPro"
+"cq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.circus.jaxb.gen.IntantiationP"
+"rocq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.ActualParam"
+"Procq\u0000~\u0000\"sq\u0000~\u0000\bpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0011q\u0000~\u0000\rpsq\u0000~\u0000\u0014q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.circus.jaxb.gen.ProcDescEl"
+"ementq\u0000~\u0000\"sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
+"\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
+"xpressionPool;xp\u0000\u0000\u0000P\u0001pq\u0000~\u0000Aq\u0000~\u0000Rq\u0000~\u0000Jq\u0000~\u0000\u000eq\u0000~\u0000Qq\u0000~\u0000Mq\u0000~\u0000Dq\u0000~"
+"\u0000Pq\u0000~\u0000Nq\u0000~\u0000Lq\u0000~\u0000\u0007q\u0000~\u0000>q\u0000~\u0000Hq\u0000~\u0000Sq\u0000~\u0000Xq\u0000~\u0000\u0013q\u0000~\u0000\u00beq\u0000~\u0000Fq\u0000~\u0000\u00b8q\u0000~"
+"\u0000\u00b2q\u0000~\u0000\u00acq\u0000~\u0000\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000~\u0000\u0094q\u0000~\u0000\u008eq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000~\u0000|q\u0000~\u0000vq\u0000~\u0000pq\u0000~"
+"\u0000jq\u0000~\u0000Tq\u0000~\u0000\u00bdq\u0000~\u0000\u00b7q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000\u0099q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~"
+"\u0000\u0081q\u0000~\u0000{q\u0000~\u0000Oq\u0000~\u0000uq\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000Wq\u0000~\u0000\u0010q\u0000~\u0000dq\u0000~\u0000^q\u0000~"
+"\u0000\u00c4q\u0000~\u0000\u00c3q\u0000~\u0000\u00caq\u0000~\u0000\u00c9q\u0000~\u0000Cq\u0000~\u0000\u00d0q\u0000~\u0000\u00cfq\u0000~\u0000Bq\u0000~\u0000\u00d6q\u0000~\u0000\u00d5q\u0000~\u0000\u00dcq\u0000~\u0000\u00dbq\u0000~"
+"\u0000\u00e2q\u0000~\u0000\u00e1q\u0000~\u0000?q\u0000~\u0000\u00e8q\u0000~\u0000Gq\u0000~\u0000\u00e7q\u0000~\u0000Iq\u0000~\u0000Eq\u0000~\u0000@q\u0000~\u0000#q\u0000~\u0000Kq\u0000~\u0000Uq\u0000~"
+"\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("CallProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.CallProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RepSeqCompProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.RepSeqCompProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RepSeqCompProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IdxRepSeqCompProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepSeqCompProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepSeqCompProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelCompProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ParallelCompProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IdxRepParallelCompProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepParallelCompProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepParallelCompProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActualGenProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActualGenProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IdxRepInterleaveProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepInterleaveProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepInterleaveProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IndexedProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IndexedProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqCompProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.SeqCompProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SeqCompProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RepParallelCompProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RepParallelCompProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FormalGenProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FormalGenProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RepIntChProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.RepIntChProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RepIntChProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntChoiceProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntChoiceProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.InterleaveProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RenameProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IdxRepExtChProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepExtChProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepExtChProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RepInterleaveProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.RepInterleaveProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RepInterleaveProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FormalParamProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.FormalParamProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExtChoiceProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ExtChoiceProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RepExtChProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.RepExtChProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RepExtChProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.HideProcElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IdxRepIntChProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepIntChProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IdxRepIntChProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntantiationProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntantiationProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntantiationProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ActualParamProc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActualParamProcImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProcDesc" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDescElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDescElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProcDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("ProcDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("ProcDef" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl)net.sourceforge.czt.circus.jaxb.gen.impl.Proc1Impl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            _ProcDef = ((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.ProcDefImpl.class), 4, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
