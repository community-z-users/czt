//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.04.21 at 09:33:05 GMT 
//


package net.sourceforge.czt.circus.jaxb.gen.impl;

public class ParallelActionRImpl
    extends net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl
    implements net.sourceforge.czt.circus.jaxb.gen.ParallelActionR, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.circus.jaxb.gen.NameSet _LeftNameSet;
    protected net.sourceforge.czt.circus.jaxb.gen.ChannelSet _ChannelSet;
    protected net.sourceforge.czt.circus.jaxb.gen.NameSet _RightNameSet;
    public final static java.lang.Class version = (net.sourceforge.czt.circus.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.circus.jaxb.gen.ParallelActionR.class);
    }

    public net.sourceforge.czt.circus.jaxb.gen.NameSet getLeftNameSet() {
        return _LeftNameSet;
    }

    public void setLeftNameSet(net.sourceforge.czt.circus.jaxb.gen.NameSet value) {
        _LeftNameSet = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.ChannelSet getChannelSet() {
        return _ChannelSet;
    }

    public void setChannelSet(net.sourceforge.czt.circus.jaxb.gen.ChannelSet value) {
        _ChannelSet = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.NameSet getRightNameSet() {
        return _RightNameSet;
    }

    public void setRightNameSet(net.sourceforge.czt.circus.jaxb.gen.NameSet value) {
        _RightNameSet = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_LeftNameSet instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftNameSet), "LeftNameSet");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "NameSet");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftNameSet), "LeftNameSet");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftNameSet), "LeftNameSet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftNameSet), "LeftNameSet");
            context.endElement();
        }
        if (_RightNameSet instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightNameSet), "RightNameSet");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "NameSet");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightNameSet), "RightNameSet");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightNameSet), "RightNameSet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightNameSet), "RightNameSet");
            context.endElement();
        }
        if (_ChannelSet instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
        } else {
            context.startElement("http://czt.sourceforge.net/circus", "ChannelSet");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_LeftNameSet instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftNameSet), "LeftNameSet");
        }
        if (_RightNameSet instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightNameSet), "RightNameSet");
        }
        if (_ChannelSet instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_LeftNameSet instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftNameSet), "LeftNameSet");
        }
        if (_RightNameSet instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightNameSet), "RightNameSet");
        }
        if (_ChannelSet instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChannelSet), "ChannelSet");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.circus.jaxb.gen.ParallelActionR.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001bsr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000-net.sourceforge.czt"
+".z.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/du"
+"mmy-elementssq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.Data"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
+"ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"co"
+"m.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
+"atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
+"type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
+".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~"
+"\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
+"sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun"
+".msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+",com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
+"\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlo"
+"calNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)"
+"http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004Annst"
+"\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\np"
+"psq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000"
+"~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\np"
+"psq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000.net.sourceforge.czt.circus.jaxb.gen.StopActionq\u0000~\u0000&sq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004ne"
+"t.sourceforge.czt.circus.jaxb.gen.ExtChoiceActionRq\u0000~\u0000&sq\u0000~\u0000"
+"\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:"
+"net.sourceforge.czt.circus.jaxb.gen.ParallelActionRElementq\u0000"
+"~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!s"
+"q\u0000~\u0000\"t\u0000;net.sourceforge.czt.circus.jaxb.gen.IfGuardedCommand"
+"Elementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00009net.sourceforge.czt.circus.jaxb.gen.VarDecl"
+"CommandElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011p"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004net.sourceforge.czt.circus.jaxb.gen."
+"IntChoiceActionRq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:net.sourceforge.czt.circus.jaxb.ge"
+"n.PrefixingActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus"
+".jaxb.gen.CallActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00008net.sourceforge.czt.cir"
+"cus.jaxb.gen.GuardedActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000"
+"\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<net.sourceforge.c"
+"zt.circus.jaxb.gen.AssignmentCommandElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sou"
+"rceforge.czt.circus.jaxb.gen.IntChoiceActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq"
+"\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.so"
+"urceforge.czt.circus.jaxb.gen.HideActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp"
+"\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net"
+".sourceforge.czt.circus.jaxb.gen.ExtChoiceActionq\u0000~\u0000&sq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004ne"
+"t.sourceforge.czt.circus.jaxb.gen.InterleaveActionq\u0000~\u0000&sq\u0000~\u0000"
+"\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005"
+"net.sourceforge.czt.circus.jaxb.gen.FormalParamActionq\u0000~\u0000&sq"
+"\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""
+"t\u0000.net.sourceforge.czt.circus.jaxb.gen.SeqActionRq\u0000~\u0000&sq\u0000~\u0000\f"
+"pp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005n"
+"et.sourceforge.czt.circus.jaxb.gen.InterleaveActionRq\u0000~\u0000&sq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000-net.sourceforge.czt.circus.jaxb.gen.SeqActionq\u0000~\u0000&sq\u0000~\u0000\fpp"
+"\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net"
+".sourceforge.czt.circus.jaxb.gen.SkipActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00009net.sou"
+"rceforge.czt.circus.jaxb.gen.ParallelActionElementq\u0000~\u0000&sq\u0000~\u0000"
+"\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000<"
+"net.sourceforge.czt.circus.jaxb.gen.AssumptionCommandElement"
+"q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000"
+"!sq\u0000~\u0000\"t\u0000<net.sourceforge.czt.circus.jaxb.gen.ActualParamAct"
+"ionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000/net.sourceforge.czt.circus.jaxb.gen.Chao"
+"sActionq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:net.sourceforge.czt.circus.jaxb.gen.SpecStm"
+"tCommandElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011"
+"pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00008net.sourceforge.czt.circus.jaxb.gen"
+".SchExprActionElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sourceforge.czt.circus.ja"
+"xb.gen.MuActionElementq\u0000~\u0000&sq\u0000~\u0000\u0015ppsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\npp"
+"sq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net.sourcefo"
+"rge.czt.z.jaxb.gen.VarDeclElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000"
+"\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&"
+"net.sourceforge.czt.z.jaxb.gen.VarDeclq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0007VarDeclq\u0000~\u0000Asq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000"
+"\nppsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00000net.sourceforge.czt.circus.jaxb.gen.UnionNam"
+"eSetq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001f"
+"q\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen.Difference"
+"NameSetq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen.SetName"
+"SetElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007net.sourceforge.czt.circus.jaxb.gen.Inte"
+"rsectionNameSetq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011"
+"pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00005net.sourceforge.czt.circus.jaxb.gen"
+".RefNameSetElementq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000"
+"\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~"
+"\u0001\u0014q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000"
+"~\u0000!sq\u0000~\u0000\"q\u0000~\u0001\u001aq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011p"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001 q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011p"
+"sq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001&q\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\npp"
+"sq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0001,q\u0000~\u0000&sq\u0000~\u0000"
+"\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\nppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00008net.sourceforge.czt.circus.j"
+"axb.gen.DifferenceChannelSetq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000"
+"\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00003net.sourceforge.czt.ci"
+"rcus.jaxb.gen.UnionChannelSetq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~"
+"\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00008net.sourceforge.czt.c"
+"ircus.jaxb.gen.RefChannelSetElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000"
+"~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000:net.sourceforge"
+".czt.circus.jaxb.gen.BasicChannelSetElementq\u0000~\u0000&sq\u0000~\u0000\fpp\u0000sq\u0000"
+"~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00007net.sou"
+"rceforge.czt.circus.jaxb.gen.IntersectChannelSetq\u0000~\u0000&sr\u0000\"com"
+".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
+"/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
+".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
+"amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
+"\u0000\u0000\u0089\u0001pq\u0000~\u0000Cq\u0000~\u0000Lq\u0000~\u0001\u0000q\u0000~\u0000\u0012q\u0000~\u0000Hq\u0000~\u0000Jq\u0000~\u0000Dq\u0000~\u0000Tq\u0000~\u0000Rq\u0000~\u0000Iq\u0000~\u0000F"
+"q\u0000~\u0000Vq\u0000~\u0000Qq\u0000~\u0000Pq\u0000~\u0000\u00f8q\u0000~\u0000\u0005q\u0000~\u0001\u000bq\u0000~\u0000Wq\u0000~\u0001-q\u0000~\u0001Jq\u0000~\u0000Nq\u0000~\u0000Oq\u0000~\u0000M"
+"q\u0000~\u0000Uq\u0000~\u0000Eq\u0000~\u0000\u0007q\u0000~\u0001\fq\u0000~\u0000Xq\u0000~\u0001.q\u0000~\u0001Kq\u0000~\u0000\u0006q\u0000~\u00010q\u0000~\u0001\u000eq\u0000~\u0000Zq\u0000~\u0001M"
+"q\u0000~\u0001<q\u0000~\u00017q\u0000~\u00012q\u0000~\u0001(q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\u0002q\u0000~\u0000\u00faq\u0000~\u0000\u00f2q\u0000~\u0000\u00ec"
+"q\u0000~\u0000\u00e6q\u0000~\u0000\u00e0q\u0000~\u0000\u00daq\u0000~\u0000\u00d4q\u0000~\u0000\u00ceq\u0000~\u0000\u00c8q\u0000~\u0000\u0014q\u0000~\u0000\\q\u0000~\u0000bq\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000t"
+"q\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00bc"
+"q\u0000~\u0000\u00c2q\u0000~\u0000\bq\u0000~\u0001Aq\u0000~\u0001Fq\u0000~\u0001Oq\u0000~\u0001Uq\u0000~\u0001[q\u0000~\u0001aq\u0000~\u0001gq\u0000~\u0001=q\u0000~\u00018q\u0000~\u00013"
+"q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u0003q\u0000~\u0000\u00fbq\u0000~\u0000\u00f3q\u0000~\u0000\u00edq\u0000~\u0000\u00e7q\u0000~\u0000\u00e1q\u0000~\u0000\u00db"
+"q\u0000~\u0000\u00d5q\u0000~\u0000\u00cfq\u0000~\u0000\u00c9q\u0000~\u0000\u0017q\u0000~\u0000]q\u0000~\u0000cq\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087"
+"q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000\u00abq\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000~\u0000\u00c3q\u0000~\u0001Bq\u0000~\u0001G"
+"q\u0000~\u0001Pq\u0000~\u0001Vq\u0000~\u0000\u00f7q\u0000~\u0001\\q\u0000~\u0001bq\u0000~\u0001hq\u0000~\u0000\u000bq\u0000~\u0001\rq\u0000~\u0000Yq\u0000~\u0001/q\u0000~\u0001Lq\u0000~\u0000G"
+"q\u0000~\u0000Bq\u0000~\u0000Sq\u0000~\u0000Kq\u0000~\u0000\tq\u0000~\u0001\u0007q\u0000~\u0000\'x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("UnionNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.UnionNameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.UnionNameSetImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DifferenceNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceNameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceNameSetImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntersectionNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntersectionNameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntersectionNameSetImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("NameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        if (("DifferenceChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("UnionChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.UnionChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.UnionChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.RefChannelSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RefChannelSetElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BasicChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.BasicChannelSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.BasicChannelSetElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntersectChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntersectChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntersectChannelSetImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("ChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  2 :
                        if (("UnionNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.UnionNameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.UnionNameSetImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DifferenceNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceNameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.DifferenceNameSetImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SetNameSetElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IntersectionNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.IntersectionNameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.IntersectionNameSetImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefNameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.RefNameSetElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("NameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 10, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("StopAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceActionR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelActionR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IfGuardedCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("VarDeclCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceActionR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PrefixingAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CallAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("GuardedAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AssignmentCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IntChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExtChoiceAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("FormalParamAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqActionR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InterleaveActionR" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SeqAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SkipAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ParallelAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AssumptionCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ActualParamAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChaosAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SpecStmtCommand" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExprAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuAction" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Action" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Action" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  7 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("ChannelSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("NameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  9 :
                        _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        if (("NameSet" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromLeaveElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            _LeftNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 10, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.circus.jaxb.gen.impl.ActionRImpl)net.sourceforge.czt.circus.jaxb.gen.impl.ParallelActionRImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  5 :
                            _ChannelSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetImpl.class), 6, value));
                            return ;
                        case  7 :
                            _RightNameSet = ((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl) spawnChildFromText((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetImpl.class), 8, value));
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
