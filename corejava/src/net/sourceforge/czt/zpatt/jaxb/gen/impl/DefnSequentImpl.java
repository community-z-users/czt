//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.03.08 at 10:18:03 GMT 
//


package net.sourceforge.czt.zpatt.jaxb.gen.impl;

public class DefnSequentImpl
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl
    implements net.sourceforge.czt.zpatt.jaxb.gen.DefnSequent, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _DeclName;
    public final static java.lang.Class version = (net.sourceforge.czt.zpatt.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.DefnSequent.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getDeclName() {
        return _DeclName;
    }

    public void setDeclName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _DeclName = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endElement();
        }
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.DefnSequent.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen.Term"
+"A.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~"
+"\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.dataty"
+"pe.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Buil"
+"tinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concret"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet"
+"\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://"
+"www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.or"
+"g/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sou"
+"rceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00008net.sourceforge.czt.zpatt."
+"jaxb.gen.SequentContextElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp"
+"\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net"
+".sourceforge.czt.zpatt.jaxb.gen.SequentContextq\u0000~\u0000$sq\u0000~\u0000\bpps"
+"q\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u000eSequentContextt\u0000 http://c"
+"zt.sourceforge.net/zpattsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000"
+"~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge"
+".czt.z.jaxb.gen.DeclNameElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\np"
+"p\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'ne"
+"t.sourceforge.czt.z.jaxb.gen.DeclNameq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\bDeclNameq\u0000~\u0000?sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~"
+"\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge."
+"czt.zpatt.jaxb.gen.JokerNameElementq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~"
+"\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~"
+"\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~"
+"\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\bppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bp"
+"psq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourcef"
+"orge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z."
+"jaxb.gen.HideExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb"
+".gen.SchExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.zpatt.jaxb."
+"gen.JokerExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen"
+".ForallExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000"
+"~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000$sq"
+"\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourc"
+"eforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt"
+".z.jaxb.gen.ThetaExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.oz"
+".jaxb.gen.PolyExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.oz.jaxb.gen."
+"ContainmentExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.tcoz.jaxb.gen.C"
+"hannelExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.Pi"
+"peExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000$s"
+"q\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000$sq\u0000~"
+"\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000"
+"~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sou"
+"rceforge.czt.z.jaxb.gen.CondExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bp"
+"psq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourcef"
+"orge.czt.zpatt.jaxb.gen.JokerExprListElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq"
+"\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.so"
+"urceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000"
+"\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.c"
+"zt.oz.jaxb.gen.ClassUnionExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00002net.sourceforge.czt.z"
+".jaxb.gen.TupleSelExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z"
+".jaxb.gen.ImpliesExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.ge"
+"n.OrExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprEle"
+"mentq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprElem"
+"entq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000$sq"
+"\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u0000/net.sourceforge.czt.oz.jaxb.gen.PredExprElementq\u0000~\u0000$sq\u0000~\u0000"
+"\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)"
+"net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000"
+"\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourc"
+"eforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z"
+".jaxb.gen.CompExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.L"
+"etExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElemen"
+"tq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000$sq\u0000"
+"~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t"
+"\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000$sq\u0000~\u0000\np"
+"p\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&ne"
+"t.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq"
+"\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforg"
+"e.czt.z.jaxb.gen.NegExprq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.z.jaxb"
+".gen.RenameExprElementq\u0000~\u0000$sq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.g"
+"en.SetCompExprq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Cl"
+"osedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash"
+"\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/"
+"grammar/ExpressionPool;xp\u0000\u0000\u0000\u008d\u0001pq\u0000~\u0000tq\u0000~\u0000\u0005q\u0000~\u0000\u007fq\u0000~\u0000\tq\u0000~\u0001Jq\u0000~\u0001"
+"Dq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0001,q\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\bq\u0000~\u0001\u0002q\u0000~\u0000"
+"\u00fcq\u0000~\u0000\u00f6q\u0000~\u0000\u00f0q\u0000~\u0000\u00eaq\u0000~\u0000\u00e4q\u0000~\u0000\u00deq\u0000~\u0000\u0015q\u0000~\u0000\u0083q\u0000~\u0000Cq\u0000~\u0000Kq\u0000~\u0000\u0087q\u0000~\u0000Xq\u0000~\u0000"
+"`q\u0000~\u0000jq\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000zq\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6q\u0000~\u0000"
+"\u00ccq\u0000~\u0000\u00d2q\u0000~\u0000\u00d8q\u0000~\u0000\u0007q\u0000~\u0001Pq\u0000~\u0001Vq\u0000~\u0001\\q\u0000~\u0001bq\u0000~\u0001hq\u0000~\u0001nq\u0000~\u0001tq\u0000~\u0001zq\u0000~\u0000"
+"\u008dq\u0000~\u0000\u008cq\u0000~\u0000|q\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0000@q\u0000~\u0000Uq\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001"
+"\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00f5q\u0000~\u0000\u00efq\u0000~\u0000\u00e9q\u0000~\u0000\u00e3q\u0000~\u0000\u00ddq\u0000~\u0000\u00d7q\u0000~\u0000"
+"Bq\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000_q\u0000~\u0000iq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000"
+"\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000\u00d1q\u0000~\u0000\u0012q\u0000~\u0000\u008bq\u0000~\u0000~q\u0000~\u0000\u0091q\u0000~\u0001Iq\u0000~\u0001Oq\u0000~\u0001Uq\u0000~\u0001[q\u0000~\u0001"
+"aq\u0000~\u0001gq\u0000~\u0001mq\u0000~\u0001sq\u0000~\u0001yq\u0000~\u0000\u0090q\u0000~\u0000\u0092q\u0000~\u0000Tq\u0000~\u0000\u0084q\u0000~\u0000\u0080q\u0000~\u0000\u0082q\u0000~\u0000pq\u0000~\u0000"
+"nq\u0000~\u0000yq\u0000~\u0000wq\u0000~\u0000uq\u0000~\u0000\u008aq\u0000~\u0000\u008fq\u0000~\u0000\u0081q\u0000~\u0000\u0085q\u0000~\u0000\u008eq\u0000~\u0000\u0010q\u0000~\u0000Hq\u0000~\u0000]q\u0000~\u0000"
+"\u0088q\u0000~\u0000sq\u0000~\u0000oq\u0000~\u0000\u0089q\u0000~\u0000{q\u0000~\u0000\u0006q\u0000~\u0000%q\u0000~\u0000Oq\u0000~\u0000dq\u0000~\u0000\u0093q\u0000~\u0000rq\u0000~\u0000\u0086q\u0000~\u0000"
+"xq\u0000~\u0000vq\u0000~\u0000qq\u0000~\u0000}x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SequentContext" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SequentContext" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("JokerName" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PrimitiveSequentImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.DefnSequentImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, value));
                            return ;
                        case  4 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, value));
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
