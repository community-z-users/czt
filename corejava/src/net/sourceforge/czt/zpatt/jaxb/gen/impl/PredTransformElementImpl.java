//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.23 at 10:52:41 NZST 
//


package net.sourceforge.czt.zpatt.jaxb.gen.impl;

public class PredTransformElementImpl
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl
    implements net.sourceforge.czt.zpatt.jaxb.gen.PredTransformElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.zpatt.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransformElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zpatt";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "PredTransform";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zpatt", "PredTransform");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransformElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0016\u009b1Lp"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0016\u009b1Appsq\u0000~\u0000\u0007\u0013\u00a1]\u00b5ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0005a\u00ecDppsq\u0000~\u0000\u000b\u0005\u0010\u00de^ppsq\u0000~\u0000\u000b\u0004\u00bf\u00d0xppsq\u0000~\u0000\u000b\u0004n\u00c2\u0092ppsq\u0000~\u0000\u000b\u0004\u001d"
+"\u00b4\u00acppsq\u0000~\u0000\u000b\u0003\u00cc\u00a6\u00c6ppsq\u0000~\u0000\u000b\u0003{\u0098\u00e0ppsq\u0000~\u0000\u000b\u0003*\u008a\u00fappsq\u0000~\u0000\u000b\u0002\u00d9}\u0014ppsq\u0000~\u0000\u000b\u0002\u0088"
+"o.ppsq\u0000~\u0000\u000b\u00027aHppsq\u0000~\u0000\u000b\u0001\u00e6Sbppsq\u0000~\u0000\u000b\u0001\u0095E|ppsq\u0000~\u0000\u000b\u0001D7\u0096ppsq\u0000~\u0000\u000b\u0000\u00f3"
+")\u00b0ppsq\u0000~\u0000\u000b\u0000\u00a2\u001b\u00cappsq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsr\u0000 com.sun.msv.gra"
+"mmar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000Q\r\u00cesr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000Q\r\u00cbq\u0000~\u0000\"psr\u00002com.sun.m"
+"sv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000"
+"\u0000\bsq\u0000~\u0000!\u0001q\u0000~\u0000&sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\t"
+"q\u0000~\u0000\'q\u0000~\u0000,sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000.xq\u0000~\u0000)t"
+"\u0000)net.sourceforge.czt.z.jaxb.gen.ForallPredt\u0000+http://java.su"
+"n.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e"
+"\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.source"
+"forge.czt.z.jaxb.gen.AndPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000"
+"Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000"
+"+net.sourceforge.czt.z.jaxb.gen.Pred2Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4p"
+"p\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000"
+",sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.jaxb.gen.MemPredElementq\u0000~\u00001"
+"sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~"
+"\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000%net.sourceforge.czt.z.jaxb.gen.OrPredq\u0000"
+"~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"p"
+"q\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00003net.sourceforge.czt.zpatt.jaxb.gen.J"
+"okerPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\""
+"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt"
+".z.jaxb.gen.QntPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~"
+"\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sour"
+"ceforge.czt.z.jaxb.gen.FactElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q"
+"\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*"
+"net.sourceforge.czt.z.jaxb.gen.ImpliesPredq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000"
+"sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,s"
+"q\u0000~\u0000-t\u0000-net.sourceforge.czt.z.jaxb.gen.NegPredElementq\u0000~\u00001sq"
+"\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&"
+"q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jaxb.gen.ExprPredEl"
+"ementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r"
+"\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net.sourceforge.czt.z.jaxb.ge"
+"n.ExistsPredq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq"
+"\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z."
+"jaxb.gen.TruePredq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~"
+"\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.c"
+"zt.z.jaxb.gen.IffPredq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r"
+"\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourcefor"
+"ge.czt.z.jaxb.gen.Exists1Predq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9pps"
+"q\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00007net.s"
+"ourceforge.czt.oz.jaxb.gen.PromotedInitPredElementq\u0000~\u00001sq\u0000~\u0000"
+"\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~"
+"\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net.sourceforge.czt.z.jaxb.gen.FalsePredq\u0000~\u0000"
+"1sq\u0000~\u0000\u000b\u000e?qlppsq\u0000~\u0000\u000b\r\u00eec\u0086ppsq\u0000~\u0000\u000b\r\u009dU\u00a0ppsq\u0000~\u0000\u000b\rLG\u00bappsq\u0000~\u0000\u000b\f\u00fb9\u00d4p"
+"psq\u0000~\u0000\u000b\f\u00aa+\u00eeppsq\u0000~\u0000\u000b\fY\u001e\bppsq\u0000~\u0000\u000b\f\b\u0010\"ppsq\u0000~\u0000\u000b\u000b\u00b7\u0002<ppsq\u0000~\u0000\u000b\u000be\u00f4Vp"
+"psq\u0000~\u0000\u000b\u000b\u0014\u00e6pppsq\u0000~\u0000\u000b\n\u00c3\u00d8\u008appsq\u0000~\u0000\u000b\nr\u00ca\u00a4ppsq\u0000~\u0000\u000b\n!\u00bc\u00beppsq\u0000~\u0000\u000b\t\u00d0\u00ae\u00d8p"
+"psq\u0000~\u0000\u000b\t\u007f\u00a0\u00f2ppsq\u0000~\u0000\u000b\t.\u0093\fppsq\u0000~\u0000\u000b\b\u00dd\u0085&ppsq\u0000~\u0000\u000b\b\u008cw@ppsq\u0000~\u0000\u000b\b;iZp"
+"psq\u0000~\u0000\u000b\u0007\u00ea[tppsq\u0000~\u0000\u000b\u0007\u0099M\u008eppsq\u0000~\u0000\u000b\u0007H?\u00a8ppsq\u0000~\u0000\u000b\u0006\u00f71\u00c2ppsq\u0000~\u0000\u000b\u0006\u00a6#\u00dcp"
+"psq\u0000~\u0000\u000b\u0006U\u0015\u00f6ppsq\u0000~\u0000\u000b\u0006\u0004\b\u0010ppsq\u0000~\u0000\u000b\u0005\u00b2\u00fa*ppsq\u0000~\u0000\u000b\u0005a\u00ecDppsq\u0000~\u0000\u000b\u0005\u0010\u00de^p"
+"psq\u0000~\u0000\u000b\u0004\u00bf\u00d0xppsq\u0000~\u0000\u000b\u0004n\u00c2\u0092ppsq\u0000~\u0000\u000b\u0004\u001d\u00b4\u00acppsq\u0000~\u0000\u000b\u0003\u00cc\u00a6\u00c6ppsq\u0000~\u0000\u000b\u0003{\u0098\u00e0p"
+"psq\u0000~\u0000\u000b\u0003*\u008a\u00fappsq\u0000~\u0000\u000b\u0002\u00d9}\u0014ppsq\u0000~\u0000\u000b\u0002\u0088o.ppsq\u0000~\u0000\u000b\u00027aHppsq\u0000~\u0000\u000b\u0001\u00e6Sbp"
+"psq\u0000~\u0000\u000b\u0001\u0095E|ppsq\u0000~\u0000\u000b\u0001D7\u0096ppsq\u0000~\u0000\u000b\u0000\u00f3)\u00b0ppsq\u0000~\u0000\u000b\u0000\u00a2\u001b\u00cappsq\u0000~\u0000\u0000\u0000Q\r\u00e4p"
+"p\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000"
+",sq\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000"
+"1sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000"
+"~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2El"
+"ementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r"
+"\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z.jaxb.ge"
+"n.CompExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~"
+"\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000,net.sourceforge.czt.z.ja"
+"xb.gen.Expr0NElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ce"
+"q\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourceforg"
+"e.czt.z.jaxb.gen.Exists1Exprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq"
+"\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000+net.so"
+"urceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000"
+"\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-"
+"t\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000s"
+"q\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq"
+"\u0000~\u0000-t\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u00001sq\u0000~\u0000\u0000"
+"\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElemen"
+"tq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~"
+"\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.jaxb.gen.If"
+"fExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r"
+"\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.RefExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000"
+"\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.cz"
+"t.z.jaxb.gen.AndExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ce"
+"q\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforg"
+"e.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9"
+"ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&ne"
+"t.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b"
+"\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t"
+"\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000"
+"~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~"
+"\u0000-t\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4"
+"pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~"
+"\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000"
+"1sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000"
+"~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000/net.sourceforge.czt.oz.jaxb.gen.Contai"
+"nmentExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000"
+"#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jax"
+"b.gen.SchExpr2Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r"
+"\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00007net.sourcefor"
+"ge.czt.oz.jaxb.gen.PromotedAttrExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000"
+"sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,s"
+"q\u0000~\u0000-t\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u00001"
+"sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~"
+"\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExpr"
+"q\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000"
+"\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z.jaxb.gen.Pro"
+"dExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r"
+"\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.jaxb.ge"
+"n.PreExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000"
+"#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jax"
+"b.gen.CondExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r"
+"\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00004net.sourcefor"
+"ge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000"
+"~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~"
+"\u0000-t\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4"
+"pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~"
+"\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000"
+"1sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000"
+"~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00000net.sourceforge.czt.z.jaxb.gen.RenameE"
+"xprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~"
+"\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.ja"
+"xb.gen.LetExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"p"
+"sq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00003net.sourceforge.czt."
+"zpatt.jaxb.gen.JokerExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9p"
+"psq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net"
+".sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000"
+"\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-"
+"t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q"
+"\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q"
+"\u0000~\u0000,sq\u0000~\u0000-t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprEleme"
+"ntq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000"
+"~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net.sourceforge.czt.z.jaxb.gen.E"
+"xistsExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000"
+"#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourceforge.czt.z.jax"
+"b.gen.SetCompExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~"
+"\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00002net.sourceforge.c"
+"zt.z.jaxb.gen.TupleSelExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r"
+"\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.n"
+"et.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4"
+"pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~"
+"\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u00001sq\u0000~\u0000"
+"\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~"
+"\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~"
+"\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq"
+"\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaE"
+"xprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~"
+"\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.ja"
+"xb.gen.QntExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e\u0000Q\r"
+"\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000%net.sourcefor"
+"ge.czt.z.jaxb.gen.MuExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9ppsq\u0000~\u0000\u001e"
+"\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net.source"
+"forge.czt.oz.jaxb.gen.SelfExprq\u0000~\u00001sq\u0000~\u0000\u0000\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\u000b\u0000Q\r\u00d9pp"
+"sq\u0000~\u0000\u001e\u0000Q\r\u00ceq\u0000~\u0000\"psq\u0000~\u0000#\u0000Q\r\u00cbq\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net."
+"sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u00001sq\u0000~\u0000\u000b\u0002\u00f9\u00d3\u0087ppsq\u0000~\u0000#"
+"\u0002\u00f9\u00d3|q\u0000~\u0000\"psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u00016\f\u00a3ppsr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000.L\u0000\btypeNameq\u0000~\u0000.L\u0000\nwhiteSpacet\u0000."
+"Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://ww"
+"w.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\"ps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000.L\u0000"
+"\fnamespaceURIq\u0000~\u0000.xpq\u0000~\u0001\u00d9q\u0000~\u0001\u00d8sq\u0000~\u0000-t\u0000\u0004typet\u0000)http://www.w3."
+"org/2001/XMLSchema-instanceq\u0000~\u0000,sq\u0000~\u0000-t\u0000\rPredTransformt\u0000 htt"
+"p://czt.sourceforge.net/zpattsr\u0000\"com.sun.msv.grammar.Express"
+"ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
+"ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
+"ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u00e8[\u0000\u0005ta"
+"blet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00bb\u0000\u0000\u0000\u00e6pur\u0000![Lcom."
+"sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppq\u0000~\u0000\u00abpppp"
+"ppppq\u0000~\u0000\u0097pppppppppppppppppppppppppppq\u0000~\u0000\u00aeq\u0000~\u0000\fpppppppq\u0000~\u0000\u009app"
+"pppppppppppppppppppppppppq\u0000~\u0000\u00b1q\u0000~\u0000\u000fpppppppq\u0000~\u0000\u009dppppppppppppp"
+"ppppppppppppppq\u0000~\u0000\u00b4q\u0000~\u0000\u0012pppppppq\u0000~\u0000\u00a0pppppppppppppppppppppppp"
+"pppq\u0000~\u0000\u00b7q\u0000~\u0000\u0015pppppppq\u0000~\u0000\u00a3pppppppppppppppppppppppppppq\u0000~\u0000\u00baq\u0000~"
+"\u0000\u0018pppppppq\u0000~\u0000\u00a6ppppppppq\u0000~\u0000\u0092ppq\u0000~\u0000\tpppppppppppppppq\u0000~\u0000\u001bq\u0000~\u0000\u00bdp"
+"ppppppq\u0000~\u0000\u00a9ppppppppq\u0000~\u0000\u0095pppppppppppq\u0000~\u0000\npppppppppppppppq\u0000~\u0000\u00ac"
+"ppppppppq\u0000~\u0000\u0098pppppppppppppppppppppppppppq\u0000~\u0000\u00afq\u0000~\u0000\rpppppppq\u0000~"
+"\u0000\u009bpppppppppppppppppppppppppppq\u0000~\u0000\u00b2q\u0000~\u0000\u0010pppppppq\u0000~\u0000\u009eppppppppp"
+"ppppppppppppppppppq\u0000~\u0000\u00b5q\u0000~\u0000\u0013pppppppq\u0000~\u0000\u00a1pppppppppppppppppppp"
+"pppppppq\u0000~\u0000\u00b8q\u0000~\u0000\u0016pppppppq\u0000~\u0000\u00a4pppppppppppppppppppppppppppq\u0000~\u0000"
+"\u00bbq\u0000~\u0000\u0019pppppppq\u0000~\u0000\u00a7pppppq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0001,q\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001aq\u0000"
+"~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\bq\u0000~\u0001\u0002q\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000"
+"~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001\u0001q\u0000~\u0000\u00fbq\u0000~\u0000\u00fcq\u0000~\u0000\u00f5q\u0000~\u0000\u00f6q\u0000~\u0000\u00efq\u0000~\u0000\u00f0q\u0000~\u0000\u00e9q\u0000~\u0000\u00eaq\u0000~\u0000\u00e3q\u0000"
+"~\u0000\u00e4q\u0000~\u0000\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u00d1q\u0000~\u0000\u00d2q\u0000~\u0000 q\u0000~\u00004q\u0000~\u0000:q\u0000~\u0000@q\u0000~\u0000Fq\u0000"
+"~\u0000Lq\u0000~\u0000Rq\u0000~\u0000Xq\u0000~\u0000^q\u0000~\u0000\u001dq\u0000~\u00003q\u0000~\u00009q\u0000~\u0000?q\u0000~\u0000Eq\u0000~\u0000Kq\u0000~\u0000Qq\u0000~\u0000Wq\u0000"
+"~\u0000]q\u0000~\u0000cq\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000"
+"~\u0000dq\u0000~\u0000\u00adq\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6q\u0000~\u0000\u00ccq\u0000"
+"~\u0000\u00aaq\u0000~\u0001Dq\u0000~\u0001Cq\u0000~\u0001Jq\u0000~\u0001Iq\u0000~\u0001Pq\u0000~\u0001Oq\u0000~\u0001Vq\u0000~\u0001Uq\u0000~\u0001\\q\u0000~\u0001[q\u0000~\u0001bq\u0000"
+"~\u0001aq\u0000~\u0001hq\u0000~\u0001gq\u0000~\u0001nq\u0000~\u0001mq\u0000~\u0001tq\u0000~\u0001sq\u0000~\u0001zq\u0000~\u0001yq\u0000~\u0001\u0080q\u0000~\u0001\u007fq\u0000~\u0001\u0086q\u0000"
+"~\u0001\u0085q\u0000~\u0001\u008cq\u0000~\u0000\u00b0q\u0000~\u0000\u000eq\u0000~\u0001\u008bq\u0000~\u0001\u0092q\u0000~\u0001\u0091q\u0000~\u0001\u0098q\u0000~\u0001\u0097q\u0000~\u0001\u009eq\u0000~\u0001\u009dq\u0000~\u0000\u009cq\u0000"
+"~\u0000\u0099q\u0000~\u0001\u00a4q\u0000~\u0001\u00a3q\u0000~\u0001\u00aaq\u0000~\u0001\u00a9q\u0000~\u0001\u00b0q\u0000~\u0001\u00afq\u0000~\u0000\u0096q\u0000~\u0001\u00b6q\u0000~\u0001\u00b5q\u0000~\u0001\u00bcq\u0000~\u0001\u00bbq\u0000"
+"~\u0001\u00c2q\u0000~\u0001\u00c1q\u0000~\u0000\u0093q\u0000~\u0001\u00c8q\u0000~\u0001\u00c7ppppppppppq\u0000~\u0000\u00b3q\u0000~\u0000\u0011pppppppq\u0000~\u0000\u009fppppp"
+"ppppppppppppppppppppppq\u0000~\u0000\u00b6q\u0000~\u0000\u0014pppppppq\u0000~\u0000\u00a2pppppppppppppppp"
+"pppppppppppq\u0000~\u0000\u00b9q\u0000~\u0000\u0017pppppppq\u0000~\u0000\u00a5pppppppppppppppq\u0000~\u0001\u00ccppppppp"
+"ppppq\u0000~\u0000\u00bcq\u0000~\u0000\u001apppppppq\u0000~\u0000\u00a8ppppppppq\u0000~\u0000\u0094pppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("PredTransform" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("PredTransform" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
