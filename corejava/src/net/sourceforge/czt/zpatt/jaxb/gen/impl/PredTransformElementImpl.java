//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.23 at 08:45:41 NZST 
//


package net.sourceforge.czt.zpatt.jaxb.gen.impl;

public class PredTransformElementImpl
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl
    implements net.sourceforge.czt.zpatt.jaxb.gen.PredTransformElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.zpatt.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransformElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zpatt";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "PredTransform";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zpatt", "PredTransform");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransformElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xpK[\u0080\u0003p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004K[\u007f\u00f8ppsq\u0000~\u0000\u0007JJ\u0010\u0099ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0014^\u00a1rppsq\u0000~\u0000\u000b\u0013+\u00e3>ppsq\u0000~\u0000\u000b\u0011\u00f9%\nppsq\u0000~\u0000\u000b\u0010\u00c6f\u00d6ppsq\u0000~\u0000\u000b\u000f\u0093"
+"\u00a8\u00a2ppsq\u0000~\u0000\u000b\u000e`\u00eanppsq\u0000~\u0000\u000b\r.,:ppsq\u0000~\u0000\u000b\u000b\u00fbn\u0006ppsq\u0000~\u0000\u000b\n\u00c8\u00af\u00d2ppsq\u0000~\u0000\u000b\t\u0095"
+"\u00f1\u009eppsq\u0000~\u0000\u000b\bc3jppsq\u0000~\u0000\u000b\u00070u6ppsq\u0000~\u0000\u000b\u0005\u00fd\u00b7\u0002ppsq\u0000~\u0000\u000b\u0004\u00ca\u00f8\u00ceppsq\u0000~\u0000\u000b\u0003\u0098"
+":\u009appsq\u0000~\u0000\u000b\u0002e|fppsq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsr\u0000 com.sun.msv.gra"
+"mmar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u00012\u00be\u001csr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa"
+"\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u00012\u00be\u0019q\u0000~\u0000\"psr\u00002com.sun.m"
+"sv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000"
+"\u0000\bsq\u0000~\u0000!\u0001q\u0000~\u0000&sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\t"
+"q\u0000~\u0000\'q\u0000~\u0000,sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
+"L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000.xq\u0000~\u0000)t"
+"\u0000\'net.sourceforge.czt.z.jaxb.gen.TruePredt\u0000+http://java.sun."
+"com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012"
+"\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourcefo"
+"rge.czt.z.jaxb.gen.Exists1Predq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'pp"
+"sq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net."
+"sourceforge.czt.z.jaxb.gen.ImpliesPredq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~"
+"\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000"
+"-t\u0000-net.sourceforge.czt.z.jaxb.gen.MemPredElementq\u0000~\u00001sq\u0000~\u0000\u0000"
+"\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u00007net.sourceforge.czt.oz.jaxb.gen.PromotedInitP"
+"redElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~"
+"\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000+net.sourceforge.czt.z.ja"
+"xb.gen.Pred2Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq"
+"\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge"
+".czt.z.jaxb.gen.ExprPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'p"
+"psq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net"
+".sourceforge.czt.z.jaxb.gen.QntPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000"
+"sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,s"
+"q\u0000~\u0000-t\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsPredq\u0000~\u00001sq\u0000~\u0000\u0000"
+"\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u0000%net.sourceforge.czt.z.jaxb.gen.OrPredq\u0000~\u00001sq\u0000"
+"~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q"
+"\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.jaxb.gen.AndPredElem"
+"entq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q"
+"\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourceforge.czt.z.jaxb.gen."
+"FactElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000"
+"~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt.z.j"
+"axb.gen.NegPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012"
+"\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourcefo"
+"rge.czt.z.jaxb.gen.IffPredq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~"
+"\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00003net.sour"
+"ceforge.czt.zpatt.jaxb.gen.JokerPredElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp"
+"\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,"
+"sq\u0000~\u0000-t\u0000)net.sourceforge.czt.z.jaxb.gen.ForallPredq\u0000~\u00001sq\u0000~\u0000"
+"\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~"
+"\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net.sourceforge.czt.z.jaxb.gen.FalsePredq\u0000~\u0000"
+"1sq\u0000~\u0000\u000b5\u00ebo\"ppsq\u0000~\u0000\u000b4\u00b8\u00b0\u00eeppsq\u0000~\u0000\u000b3\u0085\u00f2\u00bappsq\u0000~\u0000\u000b2S4\u0086ppsq\u0000~\u0000\u000b1 vRp"
+"psq\u0000~\u0000\u000b/\u00ed\u00b8\u001eppsq\u0000~\u0000\u000b.\u00ba\u00f9\u00eappsq\u0000~\u0000\u000b-\u0088;\u00b6ppsq\u0000~\u0000\u000b,U}\u0082ppsq\u0000~\u0000\u000b+\"\u00bfNp"
+"psq\u0000~\u0000\u000b)\u00f0\u0001\u001appsq\u0000~\u0000\u000b(\u00bdB\u00e6ppsq\u0000~\u0000\u000b\'\u008a\u0084\u00b2ppsq\u0000~\u0000\u000b&W\u00c6~ppsq\u0000~\u0000\u000b%%\bJp"
+"psq\u0000~\u0000\u000b#\u00f2J\u0016ppsq\u0000~\u0000\u000b\"\u00bf\u008b\u00e2ppsq\u0000~\u0000\u000b!\u008c\u00cd\u00aeppsq\u0000~\u0000\u000b Z\u000fzppsq\u0000~\u0000\u000b\u001f\'QFp"
+"psq\u0000~\u0000\u000b\u001d\u00f4\u0093\u0012ppsq\u0000~\u0000\u000b\u001c\u00c1\u00d4\u00deppsq\u0000~\u0000\u000b\u001b\u008f\u0016\u00aappsq\u0000~\u0000\u000b\u001a\\Xvppsq\u0000~\u0000\u000b\u0019)\u009aBp"
+"psq\u0000~\u0000\u000b\u0017\u00f6\u00dc\u000eppsq\u0000~\u0000\u000b\u0016\u00c4\u001d\u00dappsq\u0000~\u0000\u000b\u0015\u0091_\u00a6ppsq\u0000~\u0000\u000b\u0014^\u00a1rppsq\u0000~\u0000\u000b\u0013+\u00e3>p"
+"psq\u0000~\u0000\u000b\u0011\u00f9%\nppsq\u0000~\u0000\u000b\u0010\u00c6f\u00d6ppsq\u0000~\u0000\u000b\u000f\u0093\u00a8\u00a2ppsq\u0000~\u0000\u000b\u000e`\u00eanppsq\u0000~\u0000\u000b\r.,:p"
+"psq\u0000~\u0000\u000b\u000b\u00fbn\u0006ppsq\u0000~\u0000\u000b\n\u00c8\u00af\u00d2ppsq\u0000~\u0000\u000b\t\u0095\u00f1\u009eppsq\u0000~\u0000\u000b\bc3jppsq\u0000~\u0000\u000b\u00070u6p"
+"psq\u0000~\u0000\u000b\u0005\u00fd\u00b7\u0002ppsq\u0000~\u0000\u000b\u0004\u00ca\u00f8\u00ceppsq\u0000~\u0000\u000b\u0003\u0098:\u009appsq\u0000~\u0000\u000b\u0002e|fppsq\u0000~\u0000\u0000\u00012\u00be2p"
+"p\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000"
+",sq\u0000~\u0000-t\u00004net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprEleme"
+"ntq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000"
+"~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourceforge.czt.z.jaxb.gen.S"
+"etCompExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~"
+"\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net.sourceforge.czt.z.ja"
+"xb.gen.LambdaExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~"
+"\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000+net.sourceforge.c"
+"zt.z.jaxb.gen.Expr1Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~"
+"\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net.sour"
+"ceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be"
+"\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'n"
+"et.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~"
+"\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000"
+"-t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u00001sq\u0000~\u0000\u0000"
+"\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u0000/net.sourceforge.czt.oz.jaxb.gen.ContainmentEx"
+"prq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000"
+"~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourceforge.czt.z.jaxb.gen.I"
+"mpliesExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~"
+"\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.ja"
+"xb.gen.LetExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"p"
+"sq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net.sourceforge.czt."
+"z.jaxb.gen.PowerExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001c"
+"q\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net.sourceforg"
+"e.czt.oz.jaxb.gen.PolyExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~"
+"\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sour"
+"ceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~"
+"\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000"
+"-t\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u00001sq\u0000~\u0000"
+"\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~"
+"\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprEleme"
+"ntq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000"
+"~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00002net.sourceforge.czt.z.jaxb.gen.T"
+"upleSelExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000"
+"~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge."
+"czt.z.jaxb.gen.SetExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012"
+"\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourcefo"
+"rge.czt.z.jaxb.gen.QntExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be"
+"\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.n"
+"et.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2"
+"pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~"
+"\u0000,sq\u0000~\u0000-t\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u00001sq\u0000~"
+"\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000"
+"~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000"
+"1sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000"
+"~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.jaxb.gen.IffExpr"
+"q\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000"
+"\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000+net.sourceforge.czt.z.jaxb.gen.Exp"
+"r2Elementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000"
+"#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000\'net.sourceforge.czt.z.jax"
+"b.gen.ProjExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"p"
+"sq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.sourceforge.czt."
+"z.jaxb.gen.SchExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000"
+"\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000*net.sourc"
+"eforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be"
+"\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000%n"
+"et.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b"
+"\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t"
+"\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000s"
+"q\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq"
+"\u0000~\u0000-t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u00001sq"
+"\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&"
+"q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq"
+"\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\""
+"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00000net.sourceforge.czt.z.jaxb.gen.Rena"
+"meExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"ps"
+"q\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00001net.sourceforge.czt.z"
+".jaxb.gen.BindSelExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq"
+"\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000-net.so"
+"urceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000"
+"~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~"
+"\u0000-t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u00001sq\u0000~\u0000\u0000"
+"\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000"
+"*q\u0000~\u0000,sq\u0000~\u0000-t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u00001sq\u0000"
+"~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q"
+"\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprEl"
+"ementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be"
+"\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000,net.sourceforge.czt.z.jaxb.ge"
+"n.Expr2NElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\""
+"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000.net.sourceforge.czt"
+".z.jaxb.gen.CondExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000"
+"~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00007net.sou"
+"rceforge.czt.oz.jaxb.gen.PromotedAttrExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u0001"
+"2\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*"
+"q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u00001sq\u0000"
+"~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q"
+"\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprEl"
+"ementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be"
+"\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sourceforge.czt.z.jaxb.ge"
+"n.AndExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000"
+"#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u00003net.sourceforge.czt.zpatt"
+".jaxb.gen.JokerExprElementq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'ppsq\u0000~"
+"\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000&net.sour"
+"ceforge.czt.z.jaxb.gen.PreExprq\u0000~\u00001sq\u0000~\u0000\u0000\u00012\u00be2pp\u0000sq\u0000~\u0000\u000b\u00012\u00be\'pp"
+"sq\u0000~\u0000\u001e\u00012\u00be\u001cq\u0000~\u0000\"psq\u0000~\u0000#\u00012\u00be\u0019q\u0000~\u0000\"pq\u0000~\u0000&q\u0000~\u0000*q\u0000~\u0000,sq\u0000~\u0000-t\u0000)net."
+"sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u00001sq\u0000~\u0000\u000b\u0001\u0011oZppsq\u0000~\u0000#"
+"\u0001\u0011oOq\u0000~\u0000\"psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001f"
+"Lorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/"
+"sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000\u0089\u0017\u00b2ppsr\u0000\"com.sun.msv.datatype"
+".xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Builti"
+"nAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000.L\u0000\btypeNameq\u0000~\u0000.L\u0000\nwhiteSpacet\u0000."
+"Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://ww"
+"w.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd."
+"WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"
+"mar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\"ps"
+"r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000.L\u0000"
+"\fnamespaceURIq\u0000~\u0000.xpq\u0000~\u0001\u00d9q\u0000~\u0001\u00d8sq\u0000~\u0000-t\u0000\u0004typet\u0000)http://www.w3."
+"org/2001/XMLSchema-instanceq\u0000~\u0000,sq\u0000~\u0000-t\u0000\rPredTransformt\u0000 htt"
+"p://czt.sourceforge.net/zpattsr\u0000\"com.sun.msv.grammar.Express"
+"ionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Express"
+"ionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$"
+"ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u00e8[\u0000\u0005ta"
+"blet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00bb\u0000\u0000\u0000\u00e6pur\u0000![Lcom."
+"sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppq\u0000~\u0000\u009bpppppp"
+"pppppppppppq\u0000~\u0000\u00acpppppppppppppppppq\u0000~\u0000\u001bq\u0000~\u0000\u00bdpppppq\u0000~\u0000\u0099ppppppp"
+"ppppppppppq\u0000~\u0000\u00aapppppppppppppppppq\u0000~\u0000\u00bbq\u0000~\u0000\u0019pppppq\u0000~\u0000\u0097pppppppp"
+"pppppppppq\u0000~\u0000\u00a8pppppppppppppppppq\u0000~\u0000\u00b9q\u0000~\u0000\u0017pppppq\u0000~\u0000\u0095ppppppppp"
+"ppppppppq\u0000~\u0000\u00a6pppppppppppppppppq\u0000~\u0000\u00b7q\u0000~\u0000\u0015pppppq\u0000~\u0000\u0093pppppppppp"
+"pppppppq\u0000~\u0000\u00a4pppppppppppppppppq\u0000~\u0000\u00b5q\u0000~\u0000\u0013pppq\u0000~\u0000\tppppppppppppp"
+"ppppppq\u0000~\u0000\u00a2pppppppppppppppppq\u0000~\u0000\u00b3q\u0000~\u0000\u0011pppppppppppppppppppppp"
+"pq\u0000~\u0000\u00a0pppppppppppppppppq\u0000~\u0000\u00b1q\u0000~\u0000\u000fpppppppppppppppppppppppq\u0000~\u0000"
+"\u009epppppppppppppppppq\u0000~\u0000\u00afq\u0000~\u0000\rpppppppppppppppppppppppq\u0000~\u0000\u009cpppp"
+"pppppppppq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0001,q\u0000~\u0000\u00adq\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq"
+"\u0000~\u0001\bq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001\u0001q"
+"\u0000~\u0001\u0002q\u0000~\u0000\u00fbq\u0000~\u0000\u00fcq\u0000~\u0000\u00f5q\u0000~\u0000\u00f6q\u0000~\u0000\u00efq\u0000~\u0000\u00f0q\u0000~\u0000\u00e9q\u0000~\u0000\u00eaq\u0000~\u0000\u00e3q\u0000~\u0000\u00e4q\u0000~\u0000\u00ddq"
+"\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u00d1q\u0000~\u0000\u00d2q\u0000~\u0000 q\u0000~\u00004q\u0000~\u0000:q\u0000~\u0000@q\u0000~\u0000Fq\u0000~\u0000Lq\u0000~\u0000Rq"
+"\u0000~\u0000Xq\u0000~\u0000\u00abq\u0000~\u0000^q\u0000~\u0000dq\u0000~\u0000\u001dq\u0000~\u00003q\u0000~\u00009q\u0000~\u0000?q\u0000~\u0000Eq\u0000~\u0000Kq\u0000~\u0000Qq\u0000~\u0000Wq"
+"\u0000~\u0000]q\u0000~\u0000cq\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u00bcq\u0000~\u0000\u001aq\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u00bfq"
+"\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u00c0q\u0000~\u0000\u00c6q\u0000~\u0000\u00ccq"
+"\u0000~\u0001Dq\u0000~\u0001Cq\u0000~\u0001Jq\u0000~\u0001Iq\u0000~\u0001Pq\u0000~\u0001Oq\u0000~\u0001Vq\u0000~\u0001Uq\u0000~\u0000\u00a9q\u0000~\u0001\\q\u0000~\u0001[q\u0000~\u0001bq"
+"\u0000~\u0001aq\u0000~\u0001hq\u0000~\u0001gq\u0000~\u0001nq\u0000~\u0001mq\u0000~\u0001tq\u0000~\u0001sq\u0000~\u0001zq\u0000~\u0001yq\u0000~\u0001\u0080q\u0000~\u0001\u007fq\u0000~\u0001\u0086q"
+"\u0000~\u0001\u0085q\u0000~\u0001\u008cq\u0000~\u0000\u00baq\u0000~\u0000\u0018q\u0000~\u0001\u008bq\u0000~\u0001\u0092q\u0000~\u0001\u0091q\u0000~\u0001\u0098q\u0000~\u0001\u0097q\u0000~\u0000\u009aq\u0000~\u0001\u009eq\u0000~\u0001\u009dq"
+"\u0000~\u0001\u00a4q\u0000~\u0001\u00a3q\u0000~\u0000\u0098q\u0000~\u0001\u00aaq\u0000~\u0001\u00a9q\u0000~\u0001\u00b0q\u0000~\u0001\u00afq\u0000~\u0000\u0096q\u0000~\u0001\u00b6q\u0000~\u0001\u00b5q\u0000~\u0001\u00bcq\u0000~\u0001\u00bbq"
+"\u0000~\u0001\u00c2q\u0000~\u0001\u00c1q\u0000~\u0001\u00c8q\u0000~\u0000\u00a7q\u0000~\u0001\u00c7q\u0000~\u0001\u00ccpppppppppppppppq\u0000~\u0000\u00b8q\u0000~\u0000\u0016pppppq"
+"\u0000~\u0000\u0094pppppppppppppppppq\u0000~\u0000\u00a5pppppppppq\u0000~\u0000\npppppppq\u0000~\u0000\u00b6q\u0000~\u0000\u0014ppp"
+"ppq\u0000~\u0000\u0092pppppppppppppppppq\u0000~\u0000\u00a3pppppppppppppppppq\u0000~\u0000\u00b4q\u0000~\u0000\u0012pppp"
+"pppppppppppppppppppq\u0000~\u0000\u00a1pppppppppppppppppq\u0000~\u0000\u00b2q\u0000~\u0000\u0010ppppppppp"
+"ppppppppppppppq\u0000~\u0000\u009fpppppppppppppppppq\u0000~\u0000\u00b0q\u0000~\u0000\u000epppppppppppppp"
+"pppppppppq\u0000~\u0000\u009dpppppppppppppppppq\u0000~\u0000\u00aeq\u0000~\u0000\fpppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("PredTransform" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("PredTransform" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
