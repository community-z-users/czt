//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.11.04 at 10:24:55 GMT 
//


package net.sourceforge.czt.zpatt.jaxb.gen.impl;

public class PredTransformImpl
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl
    implements net.sourceforge.czt.zpatt.jaxb.gen.PredTransform, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Pred _RightPred;
    protected net.sourceforge.czt.z.jaxb.gen.Pred _LeftPred;
    public final static java.lang.Class version = (net.sourceforge.czt.zpatt.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransform.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Pred getRightPred() {
        return _RightPred;
    }

    public void setRightPred(net.sourceforge.czt.z.jaxb.gen.Pred value) {
        _RightPred = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Pred getLeftPred() {
        return _LeftPred;
    }

    public void setLeftPred(net.sourceforge.czt.z.jaxb.gen.Pred value) {
        _LeftPred = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_LeftPred instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Pred");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
            context.endElement();
        }
        if (_RightPred instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Pred");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_LeftPred instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
        }
        if (_RightPred instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_LeftPred instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
        }
        if (_RightPred instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransform.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\n\u008fvyppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0005G\u00bb:ppsq\u0000~\u0000\u0006\u0004\u00f87\u00beppsq\u0000~\u0000\u0006\u0004\u00a8\u00b4Bp"
+"psq\u0000~\u0000\u0006\u0004Y0\u00c6ppsq\u0000~\u0000\u0006\u0004\t\u00adJppsq\u0000~\u0000\u0006\u0003\u00ba)\u00ceppsq\u0000~\u0000\u0006\u0003j\u00a6Rppsq\u0000~\u0000\u0006\u0003\u001b\"\u00d6p"
+"psq\u0000~\u0000\u0006\u0002\u00cb\u009fZppsq\u0000~\u0000\u0006\u0002|\u001b\u00deppsq\u0000~\u0000\u0006\u0002,\u0098bppsq\u0000~\u0000\u0006\u0001\u00dd\u0014\u00e6ppsq\u0000~\u0000\u0006\u0001\u008d\u0091jp"
+"psq\u0000~\u0000\u0006\u0001>\r\u00eeppsq\u0000~\u0000\u0006\u0000\u00ee\u008arppsq\u0000~\u0000\u0006\u0000\u009f\u0006\u00f6ppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000O\u0083"
+"zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003\u0000O\u0083dsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u0018xq\u0000~\u0000\u0003\u0000O\u0083aq\u0000~\u0000 psr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u001f\u0001q\u0000~\u0000$sr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000%q\u0000~\u0000*sr\u0000#com.sun.msv"
+".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"
+"/String;L\u0000\fnamespaceURIq\u0000~\u0000,xq\u0000~\u0000\'t\u0000+net.sourceforge.czt.z.j"
+"axb.gen.Pred2Elementt\u0000+http://java.sun.com/jaxb/xjc/dummy-el"
+"ementssq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~"
+"\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000%net.sourceforge.czt.z.jaxb.gen.Or"
+"Predq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083a"
+"q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000)net.sourceforge.czt.z.jaxb.gen"
+".ExistsPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000"
+"~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z.j"
+"axb.gen.Exists1Predq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq"
+"\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000)net.sourceforge"
+".czt.z.jaxb.gen.ForallPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~"
+"\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000\'net.sour"
+"ceforge.czt.z.jaxb.gen.TruePredq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083op"
+"psq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00007net"
+".sourceforge.czt.oz.jaxb.gen.PromotedInitPredElementq\u0000~\u0000/sq\u0000"
+"~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q"
+"\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z.jaxb.gen.FactElement"
+"q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000"
+" pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.sourceforge.czt.z.jaxb.gen.Neg"
+"PredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000"
+"~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00003net.sourceforge.czt.zpa"
+"tt.jaxb.gen.JokerPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq"
+"\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.so"
+"urceforge.czt.z.jaxb.gen.QntPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000"
+"~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~"
+"\u0000+t\u0000-net.sourceforge.czt.z.jaxb.gen.MemPredElementq\u0000~\u0000/sq\u0000~\u0000"
+"\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~"
+"\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforge.czt.z.jaxb.gen.ExprPredEleme"
+"ntq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000"
+"~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.sourceforge.czt.z.jaxb.gen.A"
+"ndPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 ps"
+"q\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000&net.sourceforge.czt.z"
+".jaxb.gen.IffPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~"
+"\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000(net.sourceforge.c"
+"zt.z.jaxb.gen.FalsePredq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000"
+"O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourcef"
+"orge.czt.z.jaxb.gen.ImpliesPredq\u0000~\u0000/sq\u0000~\u0000\u0006\u0005G\u00bb:ppsq\u0000~\u0000\u0006\u0004\u00f87\u00bepp"
+"sq\u0000~\u0000\u0006\u0004\u00a8\u00b4Bppsq\u0000~\u0000\u0006\u0004Y0\u00c6ppsq\u0000~\u0000\u0006\u0004\t\u00adJppsq\u0000~\u0000\u0006\u0003\u00ba)\u00ceppsq\u0000~\u0000\u0006\u0003j\u00a6Rpp"
+"sq\u0000~\u0000\u0006\u0003\u001b\"\u00d6ppsq\u0000~\u0000\u0006\u0002\u00cb\u009fZppsq\u0000~\u0000\u0006\u0002|\u001b\u00deppsq\u0000~\u0000\u0006\u0002,\u0098bppsq\u0000~\u0000\u0006\u0001\u00dd\u0014\u00e6pp"
+"sq\u0000~\u0000\u0006\u0001\u008d\u0091jppsq\u0000~\u0000\u0006\u0001>\r\u00eeppsq\u0000~\u0000\u0006\u0000\u00ee\u008arppsq\u0000~\u0000\u0006\u0000\u009f\u0006\u00f6ppsq\u0000~\u0000\u0017\u0000O\u0083zpp"
+"\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*"
+"sq\u0000~\u0000+q\u0000~\u0000.q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000"
+"~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u00005q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000"
+"~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~"
+"\u0000+q\u0000~\u0000;q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000"
+"O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Aq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000"
+"O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000"
+"~\u0000Gq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq"
+"\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Mq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083op"
+"psq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Sq"
+"\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 "
+"pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000Yq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000"
+"~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000_q\u0000~\u0000/"
+"sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~"
+"\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000eq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000"
+"O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000kq\u0000~\u0000/sq\u0000~"
+"\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000"
+"~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000qq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq"
+"\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000wq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O"
+"\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q"
+"\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000}q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 "
+"psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000\u0083q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp"
+"\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*"
+"sq\u0000~\u0000+q\u0000~\u0000\u0089q\u0000~\u0000/sq\u0000~\u0000\u0017\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u001c\u0000O\u0083dq\u0000~\u0000 psq\u0000"
+"~\u0000!\u0000O\u0083aq\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+q\u0000~\u0000\u008fq\u0000~\u0000/sr\u0000\"com.sun.msv."
+"grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
+"grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
+"ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006p"
+"arentq\u0000~\u0000\u00f6[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000e"
+"\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fp"
+"ppppq\u0000~\u0000\u0014q\u0000~\u0000\u009dpppppq\u0000~\u0000\u0010q\u0000~\u0000\u0099pppppq\u0000~\u0000\fq\u0000~\u0000\u0095pppppq\u0000~\u0000\bq\u0000~\u0000\u0091p"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppq\u0000~\u0000\u0015q\u0000~\u0000\u009epppppq\u0000~\u0000\u0011q\u0000~\u0000\u009apppppq\u0000~\u0000\rq\u0000~\u0000\u0096pppppq\u0000~\u0000\t"
+"q\u0000~\u0000\u0092ppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppq\u0000~\u0000\u009fq\u0000~\u0000\u0016pppppq\u0000~\u0000\u0012q\u0000~\u0000\u009bpppppq\u0000~\u0000\u000eq\u0000~\u0000\u0097pppp"
+"pq\u0000~\u0000\nq\u0000~\u0000\u0093ppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppp"
+"ppppq\u0000~\u0000\u00acq\u0000~\u0000\u00a7q\u0000~\u0000\u00a2q\u0000~\u0000\u008cq\u0000~\u0000\u0086q\u0000~\u0000\u0080q\u0000~\u0000zq\u0000~\u0000tq\u0000~\u0000nq\u0000~\u0000hq\u0000~\u0000bq"
+"\u0000~\u0000\u00abq\u0000~\u0000\u00a6q\u0000~\u0000\u00a1q\u0000~\u0000\u008bq\u0000~\u0000\u0085q\u0000~\u0000\u007fq\u0000~\u0000yq\u0000~\u0000sq\u0000~\u0000mq\u0000~\u0000gq\u0000~\u0000aq\u0000~\u0000[q"
+"\u0000~\u0000Uq\u0000~\u0000Oq\u0000~\u0000Iq\u0000~\u0000Cq\u0000~\u0000=q\u0000~\u00007q\u0000~\u0000\u0013q\u0000~\u00001q\u0000~\u0000\u001bq\u0000~\u0000\\q\u0000~\u0000Vq\u0000~\u0000Pq"
+"\u0000~\u0000Jq\u0000~\u0000\u000fq\u0000~\u0000Dq\u0000~\u0000>q\u0000~\u00008q\u0000~\u00002q\u0000~\u0000\u001eq\u0000~\u0000\u00b1q\u0000~\u0000\u000bq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00b5q"
+"\u0000~\u0000\u009cq\u0000~\u0000\u00bbq\u0000~\u0000\u00baq\u0000~\u0000\u0007q\u0000~\u0000\u00c0q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00c4q\u0000~\u0000\u00caq\u0000~\u0000\u00c9q\u0000~\u0000\u0098q\u0000~\u0000\u00cfq"
+"\u0000~\u0000\u00ceq\u0000~\u0000\u00d4q\u0000~\u0000\u00d3q\u0000~\u0000\u00d9q\u0000~\u0000\u00d8q\u0000~\u0000\u00deq\u0000~\u0000\u00ddq\u0000~\u0000\u0094q\u0000~\u0000\u00e3q\u0000~\u0000\u00e2q\u0000~\u0000\u00e8q\u0000~\u0000\u00e7q"
+"\u0000~\u0000\u00edq\u0000~\u0000\u00ecq\u0000~\u0000\u00f2q\u0000~\u0000\u00f1q\u0000~\u0000\u0090pppppppppppppppppppppppppppppppppppp"
+"pppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  6 :
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, value));
                            return ;
                        case  4 :
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 5, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
