//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.05.24 at 09:46:08 NZST 
//


package net.sourceforge.czt.zpatt.jaxb.gen.impl;

public class PredTransformImpl
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl
    implements net.sourceforge.czt.zpatt.jaxb.gen.PredTransform, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _RightPred;
    protected net.sourceforge.czt.z.jaxb.gen.Pred _LeftPred;
    public final static java.lang.Class version = (net.sourceforge.czt.zpatt.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransform.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getRightPred() {
        return _RightPred;
    }

    public void setRightPred(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _RightPred = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Pred getLeftPred() {
        return _LeftPred;
    }

    public void setLeftPred(net.sourceforge.czt.z.jaxb.gen.Pred value) {
        _LeftPred = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_LeftPred instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Pred");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
            context.endElement();
        }
        if (_RightPred instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_LeftPred instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
        }
        if (_RightPred instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_LeftPred instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LeftPred), "LeftPred");
        }
        if (_RightPred instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RightPred), "RightPred");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.PredTransform.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\f\u000b\u00c1)ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003M\u008b\u00aappsq\u0000~\u0000\u0006\u0003\u001b\u00ce\u00beppsq\u0000~\u0000\u0006\u0002\u00ea\u0011\u00d2p"
+"psq\u0000~\u0000\u0006\u0002\u00b8T\u00e6ppsq\u0000~\u0000\u0006\u0002\u0086\u0097\u00fappsq\u0000~\u0000\u0006\u0002T\u00db\u000eppsq\u0000~\u0000\u0006\u0002#\u001e\"ppsq\u0000~\u0000\u0006\u0001\u00f1a6p"
+"psq\u0000~\u0000\u0006\u0001\u00bf\u00a4Jppsq\u0000~\u0000\u0006\u0001\u008d\u00e7^ppsq\u0000~\u0000\u0006\u0001\\*rppsq\u0000~\u0000\u0006\u0001*m\u0086ppsq\u0000~\u0000\u0006\u0000\u00f8\u00b0\u009ap"
+"psq\u0000~\u0000\u0006\u0000\u00c6\u00f3\u00aeppsq\u0000~\u0000\u0006\u0000\u00956\u00c2ppsq\u0000~\u0000\u0006\u0000cy\u00d6ppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u00001\u00bc"
+"\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003\u00001\u00bc\u00d4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u0018xq\u0000~\u0000\u0003\u00001\u00bc\u00d1q\u0000~\u0000 psr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u001f\u0001q\u0000~\u0000$sr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000%q\u0000~\u0000*sr\u0000#com.sun.msv"
+".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"
+"/String;L\u0000\fnamespaceURIq\u0000~\u0000,xq\u0000~\u0000\'t\u0000-net.sourceforge.czt.z.j"
+"axb.gen.QntPredElementt\u0000+http://java.sun.com/jaxb/xjc/dummy-"
+"elementssq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q"
+"\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00007net.sourceforge.czt.oz.jaxb.gen"
+".PromotedInitPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c"
+"\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.source"
+"forge.czt.z.jaxb.gen.MemPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u0000"
+"1\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000"
+"\'net.sourceforge.czt.z.jaxb.gen.TruePredq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq"
+"\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000"
+"~\u0000+t\u0000&net.sourceforge.czt.z.jaxb.gen.IffPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eap"
+"p\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000"
+"*sq\u0000~\u0000+t\u0000-net.sourceforge.czt.z.jaxb.gen.AndPredElementq\u0000~\u0000/"
+"sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~"
+"\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00003net.sourceforge.czt.zpatt.jaxb.gen.Joke"
+"rPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq"
+"\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z."
+"jaxb.gen.ImpliesPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4"
+"q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforg"
+"e.czt.z.jaxb.gen.ExprPredElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00df"
+"ppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000)ne"
+"t.sourceforge.czt.z.jaxb.gen.ForallPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000"
+"~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~"
+"\u0000+t\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsPredq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc"
+"\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000"
+"~\u0000*sq\u0000~\u0000+t\u0000%net.sourceforge.czt.z.jaxb.gen.OrPredq\u0000~\u0000/sq\u0000~\u0000\u0017"
+"\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000"
+"(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z.jaxb.gen.FactElementq\u0000~"
+"\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq"
+"\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z.jaxb.gen.Exists"
+"1Predq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc"
+"\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000+net.sourceforge.czt.z.jaxb.ge"
+"n.Pred2Elementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 p"
+"sq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000(net.sourceforge.czt."
+"z.jaxb.gen.FalsePredq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4"
+"q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.sourceforg"
+"e.czt.z.jaxb.gen.NegPredElementq\u0000~\u0000/sq\u0000~\u0000\u0006\b\u00be5zppsq\u0000~\u0000\u0006\b\u008cx\u008epp"
+"sq\u0000~\u0000\u0006\bZ\u00bb\u00a2ppsq\u0000~\u0000\u0006\b(\u00fe\u00b6ppsq\u0000~\u0000\u0006\u0007\u00f7A\u00cappsq\u0000~\u0000\u0006\u0007\u00c5\u0084\u00deppsq\u0000~\u0000\u0006\u0007\u0093\u00c7\u00f2pp"
+"sq\u0000~\u0000\u0006\u0007b\u000b\u0006ppsq\u0000~\u0000\u0006\u00070N\u001appsq\u0000~\u0000\u0006\u0006\u00fe\u0091.ppsq\u0000~\u0000\u0006\u0006\u00cc\u00d4Bppsq\u0000~\u0000\u0006\u0006\u009b\u0017Vpp"
+"sq\u0000~\u0000\u0006\u0006iZjppsq\u0000~\u0000\u0006\u00067\u009d~ppsq\u0000~\u0000\u0006\u0006\u0005\u00e0\u0092ppsq\u0000~\u0000\u0006\u0005\u00d4#\u00a6ppsq\u0000~\u0000\u0006\u0005\u00a2f\u00bapp"
+"sq\u0000~\u0000\u0006\u0005p\u00a9\u00ceppsq\u0000~\u0000\u0006\u0005>\u00ec\u00e2ppsq\u0000~\u0000\u0006\u0005\r/\u00f6ppsq\u0000~\u0000\u0006\u0004\u00dbs\nppsq\u0000~\u0000\u0006\u0004\u00a9\u00b6\u001epp"
+"sq\u0000~\u0000\u0006\u0004w\u00f92ppsq\u0000~\u0000\u0006\u0004F<Fppsq\u0000~\u0000\u0006\u0004\u0014\u007fZppsq\u0000~\u0000\u0006\u0003\u00e2\u00c2nppsq\u0000~\u0000\u0006\u0003\u00b1\u0005\u0082pp"
+"sq\u0000~\u0000\u0006\u0003\u007fH\u0096ppsq\u0000~\u0000\u0006\u0003M\u008b\u00aappsq\u0000~\u0000\u0006\u0003\u001b\u00ce\u00beppsq\u0000~\u0000\u0006\u0002\u00ea\u0011\u00d2ppsq\u0000~\u0000\u0006\u0002\u00b8T\u00e6pp"
+"sq\u0000~\u0000\u0006\u0002\u0086\u0097\u00fappsq\u0000~\u0000\u0006\u0002T\u00db\u000eppsq\u0000~\u0000\u0006\u0002#\u001e\"ppsq\u0000~\u0000\u0006\u0001\u00f1a6ppsq\u0000~\u0000\u0006\u0001\u00bf\u00a4Jpp"
+"sq\u0000~\u0000\u0006\u0001\u008d\u00e7^ppsq\u0000~\u0000\u0006\u0001\\*rppsq\u0000~\u0000\u0006\u0001*m\u0086ppsq\u0000~\u0000\u0006\u0000\u00f8\u00b0\u009appsq\u0000~\u0000\u0006\u0000\u00c6\u00f3\u00aepp"
+"sq\u0000~\u0000\u0006\u0000\u00956\u00c2ppsq\u0000~\u0000\u0006\u0000cy\u00d6ppsq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q"
+"\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000,net.sourceforge"
+".czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfpps"
+"q\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.s"
+"ourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq"
+"\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000"
+"~\u0000+t\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000/sq\u0000~"
+"\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000"
+"~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000/net.sourceforge.czt.oz.jaxb.gen.Containment"
+"Exprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1"
+"q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000(net.sourceforge.czt.oz.jaxb.ge"
+"n.SelfExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~"
+"\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000(net.sourceforge.czt.z.ja"
+"xb.gen.TupleExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000"
+" psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000\'net.sourceforge.cz"
+"t.z.jaxb.gen.ProdExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc"
+"\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000(net.sourcefor"
+"ge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000"
+"~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00002net.sou"
+"rceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp"
+"\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*"
+"sq\u0000~\u0000+t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001"
+"\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q"
+"\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq"
+"\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 "
+"pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000&net.sourceforge.czt.z.jaxb.gen.NegE"
+"xprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q"
+"\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00004net.sourceforge.czt.tcoz.jaxb.g"
+"en.ChannelExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc"
+"\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000%net.sourcefor"
+"ge.czt.z.jaxb.gen.MuExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c"
+"\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000\'net.source"
+"forge.czt.z.jaxb.gen.CompExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfpps"
+"q\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000&net.s"
+"ourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc"
+"\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000/n"
+"et.sourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc"
+"\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000"
+"~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000"
+"~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 p"
+"q\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforge.czt.z.jaxb.gen.CondE"
+"xprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~"
+"\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00000net.sourceforge.czt.z.ja"
+"xb.gen.RenameExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c"
+"\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000)net.source"
+"forge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfp"
+"psq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000\'net"
+".sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006"
+"\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t"
+"\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00ea"
+"pp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~"
+"\u0000*sq\u0000~\u0000+t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000"
+"~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 p"
+"q\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000)net.sourceforge.czt.z.jaxb.gen.Lambd"
+"aExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc"
+"\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforge.czt.z.jaxb.ge"
+"n.BindExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~"
+"\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000\'net.sourceforge.c"
+"zt.z.jaxb.gen.ProjExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001"
+"\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00003net.sourcefo"
+"rge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000"
+"~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~"
+"\u0000+t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000/sq\u0000~\u0000\u0017"
+"\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000"
+"(q\u0000~\u0000*sq\u0000~\u0000+t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000/sq\u0000"
+"~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q"
+"\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u00007net.sourceforge.czt.oz.jaxb.gen.PromotedAt"
+"trExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 ps"
+"q\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourceforge.czt.z"
+".jaxb.gen.HideExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000"
+"\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000.net.sourc"
+"eforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000"
+"\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+"
+"t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000/sq\u0000~\u0000\u0017\u0000"
+"1\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000("
+"q\u0000~\u0000*sq\u0000~\u0000+t\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprElementq"
+"\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 "
+"pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z.jaxb.gen.SetC"
+"ompExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u0000"
+"1\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000)net.sourceforge.czt.z.jaxb."
+"gen.ExistsExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 p"
+"sq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000&net.sourceforge.czt."
+"z.jaxb.gen.LetExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000"
+"~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge."
+"czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~"
+"\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000&net.sour"
+"ceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfpp"
+"sq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000+net."
+"sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000"
+"~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~"
+"\u0000+t\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp"
+"\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*"
+"sq\u0000~\u0000+t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprElementq\u0000"
+"~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001\u00bc\u00d1q\u0000~\u0000 p"
+"q\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000*net.sourceforge.czt.z.jaxb.gen.Impli"
+"esExprq\u0000~\u0000/sq\u0000~\u0000\u0017\u00001\u00bc\u00eapp\u0000sq\u0000~\u0000\u0006\u00001\u00bc\u00dfppsq\u0000~\u0000\u001c\u00001\u00bc\u00d4q\u0000~\u0000 psq\u0000~\u0000!\u00001"
+"\u00bc\u00d1q\u0000~\u0000 pq\u0000~\u0000$q\u0000~\u0000(q\u0000~\u0000*sq\u0000~\u0000+t\u0000(net.sourceforge.czt.z.jaxb.g"
+"en.PowerExprq\u0000~\u0000/sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Clos"
+"edHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j"
+"\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u00cb[\u0000\u0005tablet\u0000![Lcom/"
+"sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u00b9\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.gram"
+"mar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffppppppppppppppppq\u0000~\u0000\u00a4ppppppp"
+"pppppppppq\u0000~\u0000\u00b7q\u0000~\u0000\u0012ppppppppppppppppq\u0000~\u0000\u009eppppppppppppppppq\u0000~\u0000"
+"\u00b1q\u0000~\u0000\fppppppppppppppppq\u0000~\u0000\u0098ppppppppppppppppq\u0000~\u0000\u00abpppq\u0000~\u0000\u0005pppp"
+"pppppppppq\u0000~\u0000\u0092ppppppppppppppppq\u0000~\u0000\u00a5ppppppppppppppppq\u0000~\u0000\u00b8q\u0000~\u0000"
+"\u0013ppppppppppppppppq\u0000~\u0000\u009fppppppppppppppppq\u0000~\u0000\u00b2q\u0000~\u0000\rpppppppppppp"
+"ppppq\u0000~\u0000\u0099ppppppppppppppppq\u0000~\u0000\u00acq\u0000~\u0000\u0007ppppppppppppppppq\u0000~\u0000\u0093pppp"
+"ppppppppppppq\u0000~\u0000\u00a6ppppppppppppppppq\u0000~\u0000\u00b9q\u0000~\u0000\u0014ppppppppppppppppq"
+"\u0000~\u0000\u00a0ppppppppppppppppq\u0000~\u0000\u00b3q\u0000~\u0000\u000eppppppppppppppppq\u0000~\u0000\u009appppppppp"
+"pppppppq\u0000~\u0000\u00adq\u0000~\u0000\bppppppppppppppppq\u0000~\u0000\u0094ppppppppppppppppq\u0000~\u0000\u00a7p"
+"pppppppppppppppq\u0000~\u0000\u00baq\u0000~\u0000\u0015ppppppppppppppppq\u0000~\u0000\u00a1pppppppppppppp"
+"ppq\u0000~\u0000\u000fq\u0000~\u0000\u00b4ppppppppppppppppq\u0000~\u0000\u009bppppppppppppppppq\u0000~\u0000\u00aeq\u0000~\u0000\tp"
+"pppppppppppppppq\u0000~\u0000\u0095ppppppppppppppppq\u0000~\u0000\u00a8ppppppppppppppppq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u00bbppppppppppppppppq\u0000~\u0000\u00a2ppppppppppppppppq\u0000~\u0000\u00b5q\u0000~\u0000\u0010pppppp"
+"ppppppppppq\u0000~\u0000\u009cppppppppppppppppq\u0000~\u0000\u00afq\u0000~\u0000\nppppppppppppppppq\u0000~"
+"\u0000\u0096pppppppppppq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000"
+"~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000"
+"~\u0000\u00ffq\u0000~\u0000\u00f9q\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq\u0000~\u0000\u00eeq\u0000~\u0000\u00e7q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq\u0000"
+"~\u0000\u00dcq\u0000~\u0000\u00d5q\u0000~\u0000\u00d6q\u0000~\u0000\u00cfq\u0000~\u0000\u00d0q\u0000~\u00008q\u0000~\u0000>q\u0000~\u0000Dq\u0000~\u0000Jq\u0000~\u0000Pq\u0000~\u0000Vq\u0000~\u0000\\q\u0000"
+"~\u0000bq\u0000~\u0000\u001bq\u0000~\u00001q\u0000~\u00007q\u0000~\u0000=q\u0000~\u0000Cq\u0000~\u0000Iq\u0000~\u0000Oq\u0000~\u0000Uq\u0000~\u0000[q\u0000~\u0000aq\u0000~\u0000hq\u0000"
+"~\u0000gq\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u00bdq\u0000~\u0000\u00c3q\u0000~\u0000\u00c9q\u0000~\u0000nq\u0000~\u0000tq\u0000"
+"~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u00beq\u0000~\u0000\u00c4q\u0000~\u0000\u00caq\u0000~\u0000\u001eq\u0000~\u00002q\u0000~\u0000\u00a9q\u0000~\u0000\u00b6q\u0000~\u0000\u0011q\u0000"
+"~\u0001Bq\u0000~\u0001Aq\u0000~\u0001Hq\u0000~\u0001Gq\u0000~\u0001Nq\u0000~\u0001Mq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0000\u00a3q\u0000~\u0001Zq\u0000~\u0001Yq\u0000~\u0000\u00b0q\u0000"
+"~\u0000\u000bq\u0000~\u0001`q\u0000~\u0001_q\u0000~\u0001fq\u0000~\u0001eq\u0000~\u0001lq\u0000~\u0001kq\u0000~\u0001rq\u0000~\u0001qq\u0000~\u0001xq\u0000~\u0001wq\u0000~\u0000\u009dq\u0000"
+"~\u0001~q\u0000~\u0001}q\u0000~\u0001\u0084q\u0000~\u0001\u0083q\u0000~\u0001\u008aq\u0000~\u0001\u0089q\u0000~\u0001\u0090q\u0000~\u0001\u008fq\u0000~\u0001\u0096q\u0000~\u0001\u0095q\u0000~\u0001\u009cq\u0000~\u0001\u009bq\u0000"
+"~\u0000\u0097q\u0000~\u0001\u00a2q\u0000~\u0001\u00a1q\u0000~\u0001\u00a8q\u0000~\u0001\u00a7q\u0000~\u0001\u00aeq\u0000~\u0001\u00adq\u0000~\u0001\u00b4q\u0000~\u0001\u00b3q\u0000~\u0001\u00baq\u0000~\u0000\u00aaq\u0000~\u0001\u00b9q\u0000"
+"~\u0001\u00c0q\u0000~\u0001\u00bfq\u0000~\u0001\u00c6q\u0000~\u0001\u00c5q\u0000~\u0000\u0090pppppppppppq\u0000~\u0000\u0091"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            _RightPred = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                        case  6 :
                            _LeftPred = ((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 7, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.zpatt.jaxb.gen.impl.TransformImpl)net.sourceforge.czt.zpatt.jaxb.gen.impl.PredTransformImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
