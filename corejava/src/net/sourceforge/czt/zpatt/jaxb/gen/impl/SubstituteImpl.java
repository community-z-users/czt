//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.zpatt.jaxb.gen.impl;

public class SubstituteImpl implements net.sourceforge.czt.zpatt.jaxb.gen.Substitute, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Expr = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _Pred = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.zpatt.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.Substitute.class);
    }

    public java.util.List getExpr() {
        return _Expr;
    }

    public java.util.List getPred() {
        return _Pred;
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.zpatt.jaxb.gen.impl.SubstituteImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        int idx2 = 0;
        final int len2 = _Pred.size();
        if ((_Expr.size()>= 1)&&(_Pred.size() == 0)) {
            while (idx1 != len1) {
                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr) {
                    if (_Expr.get(idx1) instanceof javax.xml.bind.Element) {
                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                    } else {
                        context.startElement("http://czt.sourceforge.net/zml", "Expr");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx_0 ++)));
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx_1 ++)));
                        context.endAttributes();
                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                        context.endElement();
                    }
                } else {
                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                    } else {
                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                        } else {
                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                            } else {
                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                } else {
                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                    } else {
                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                        } else {
                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                            } else {
                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                } else {
                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                    } else {
                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                        } else {
                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                            } else {
                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                } else {
                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                    } else {
                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                        } else {
                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                            } else {
                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                } else {
                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                    } else {
                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                        } else {
                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                            } else {
                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                } else {
                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                    } else {
                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                        } else {
                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                            } else {
                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                } else {
                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                    } else {
                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                        } else {
                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                            } else {
                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                } else {
                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                            } else {
                                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                } else {
                                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                    } else {
                                                                                                                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if ((_Expr.size() == 0)&&(_Pred.size()>= 1)) {
                while (idx2 != len2) {
                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred) {
                        if (_Pred.get(idx2) instanceof javax.xml.bind.Element) {
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                        } else {
                            context.startElement("http://czt.sourceforge.net/zml", "Pred");
                            int idx_2 = idx2;
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_2 ++)));
                            context.endNamespaceDecls();
                            int idx_3 = idx2;
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_3 ++)));
                            context.endAttributes();
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                            context.endElement();
                        }
                    } else {
                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.TruePred) {
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                        } else {
                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred2Element) {
                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                            } else {
                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.MemPredElement) {
                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                } else {
                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Pred) {
                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                    } else {
                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FalsePred) {
                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                        } else {
                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.NegPredElement) {
                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                            } else {
                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.IffPred) {
                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                } else {
                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ForallPred) {
                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                    } else {
                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerPredElement) {
                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                        } else {
                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.OrPred) {
                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                            } else {
                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.QntPredElement) {
                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                } else {
                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExprPredElement) {
                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                    } else {
                                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesPred) {
                                                                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                        } else {
                                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsPred) {
                                                                                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                            } else {
                                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FactElement) {
                                                                                    context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                } else {
                                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.AndPredElement) {
                                                                                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                    } else {
                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        int idx2 = 0;
        final int len2 = _Pred.size();
        if ((_Expr.size()>= 1)&&(_Pred.size() == 0)) {
            while (idx1 != len1) {
                if (!(_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr)) {
                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                    } else {
                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                        } else {
                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                            } else {
                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                } else {
                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                    } else {
                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                        } else {
                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                            } else {
                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                } else {
                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                    } else {
                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                        } else {
                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                            } else {
                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                } else {
                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                    } else {
                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                        } else {
                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                            } else {
                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                } else {
                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                    } else {
                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                        } else {
                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                            } else {
                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                } else {
                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                    } else {
                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                        } else {
                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                            } else {
                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                } else {
                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                    } else {
                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                        } else {
                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                            } else {
                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                } else {
                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                            } else {
                                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                } else {
                                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                    } else {
                                                                                                                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if ((_Expr.size() == 0)&&(_Pred.size()>= 1)) {
                while (idx2 != len2) {
                    if (!(_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred)) {
                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.TruePred) {
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                        } else {
                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred2Element) {
                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                            } else {
                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.MemPredElement) {
                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                } else {
                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Pred) {
                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                    } else {
                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FalsePred) {
                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                        } else {
                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.NegPredElement) {
                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                            } else {
                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.IffPred) {
                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                } else {
                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ForallPred) {
                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                    } else {
                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerPredElement) {
                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                        } else {
                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.OrPred) {
                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                            } else {
                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.QntPredElement) {
                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                } else {
                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExprPredElement) {
                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                    } else {
                                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesPred) {
                                                                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                        } else {
                                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsPred) {
                                                                                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                            } else {
                                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FactElement) {
                                                                                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                } else {
                                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.AndPredElement) {
                                                                                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                    } else {
                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        int idx2 = 0;
        final int len2 = _Pred.size();
        if ((_Expr.size()>= 1)&&(_Pred.size() == 0)) {
            while (idx1 != len1) {
                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr) {
                    if (_Expr.get(idx1) instanceof javax.xml.bind.Element) {
                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                    } else {
                        context.startElement("http://czt.sourceforge.net/zml", "Expr");
                        int idx_0 = idx1;
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx_0 ++)));
                        context.endNamespaceDecls();
                        int idx_1 = idx1;
                        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr.get(idx_1 ++)));
                        context.endAttributes();
                        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                        context.endElement();
                    }
                } else {
                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                    } else {
                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                        } else {
                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                            } else {
                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                } else {
                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                    } else {
                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                        } else {
                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                            } else {
                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                } else {
                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                    } else {
                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                        } else {
                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                            } else {
                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                } else {
                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                    } else {
                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                        } else {
                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                            } else {
                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                } else {
                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                    } else {
                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                        } else {
                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                            } else {
                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                } else {
                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                    } else {
                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                        } else {
                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                            } else {
                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                } else {
                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                    } else {
                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                        } else {
                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                            } else {
                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                } else {
                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                            } else {
                                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                } else {
                                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                    } else {
                                                                                                                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if ((_Expr.size() == 0)&&(_Pred.size()>= 1)) {
                while (idx2 != len2) {
                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred) {
                        if (_Pred.get(idx2) instanceof javax.xml.bind.Element) {
                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                        } else {
                            context.startElement("http://czt.sourceforge.net/zml", "Pred");
                            int idx_2 = idx2;
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_2 ++)));
                            context.endNamespaceDecls();
                            int idx_3 = idx2;
                            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_3 ++)));
                            context.endAttributes();
                            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                            context.endElement();
                        }
                    } else {
                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.TruePred) {
                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                        } else {
                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred2Element) {
                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                            } else {
                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.MemPredElement) {
                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                } else {
                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Pred) {
                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                    } else {
                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FalsePred) {
                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                        } else {
                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.NegPredElement) {
                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                            } else {
                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.IffPred) {
                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                } else {
                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ForallPred) {
                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                    } else {
                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerPredElement) {
                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                        } else {
                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.OrPred) {
                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                            } else {
                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.QntPredElement) {
                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                } else {
                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExprPredElement) {
                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                    } else {
                                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesPred) {
                                                                            context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                        } else {
                                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsPred) {
                                                                                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                            } else {
                                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FactElement) {
                                                                                    context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                } else {
                                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.AndPredElement) {
                                                                                        context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                    } else {
                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Expr.size();
        int idx2 = 0;
        final int len2 = _Pred.size();
        if ((_Expr.size()>= 1)&&(_Pred.size() == 0)) {
            while (idx1 != len1) {
                if (!(_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr)) {
                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElement) {
                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                    } else {
                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PreExpr) {
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                        } else {
                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.OrExpr) {
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                            } else {
                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.IffExpr) {
                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                } else {
                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Qnt1ExprElement) {
                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                    } else {
                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LetExpr) {
                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                        } else {
                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Expr) {
                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                            } else {
                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NumExprElement) {
                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                } else {
                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.QntExprElement) {
                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                    } else {
                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExpr2Element) {
                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                        } else {
                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsExpr) {
                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                            } else {
                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindExprElement) {
                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                } else {
                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2Element) {
                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                    } else {
                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr0NElement) {
                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                        } else {
                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PowerExpr) {
                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                            } else {
                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetCompExpr) {
                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                } else {
                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.BindSelExprElement) {
                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                    } else {
                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr2NElement) {
                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                        } else {
                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.DecorExprElement) {
                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                            } else {
                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesExpr) {
                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                } else {
                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CompExpr) {
                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                    } else {
                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ForallExpr) {
                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                        } else {
                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProdExpr) {
                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                            } else {
                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ProjExpr) {
                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                } else {
                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.MuExpr) {
                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                    } else {
                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.NegExpr) {
                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                        } else {
                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.Expr1Element) {
                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                            } else {
                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.PipeExpr) {
                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                } else {
                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ApplExprElement) {
                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                    } else {
                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SetExpr) {
                                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                        } else {
                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.LambdaExpr) {
                                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                            } else {
                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleSelExprElement) {
                                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                } else {
                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.AndExpr) {
                                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                    } else {
                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RenameExprElement) {
                                                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                        } else {
                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.CondExprElement) {
                                                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                            } else {
                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.SchExprElement) {
                                                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                } else {
                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.ThetaExprElement) {
                                                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                    } else {
                                                                                                                                                                        if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.RefExprElement) {
                                                                                                                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                        } else {
                                                                                                                                                                            if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.HideExprElement) {
                                                                                                                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                            } else {
                                                                                                                                                                                if (_Expr.get(idx1) instanceof net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElement) {
                                                                                                                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                } else {
                                                                                                                                                                                    if (_Expr.get(idx1) instanceof net.sourceforge.czt.core.jaxb.gen.TupleExpr) {
                                                                                                                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr.get(idx1 ++)));
                                                                                                                                                                                    } else {
                                                                                                                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                                                                                                                    }
                                                                                                                                                                                }
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if ((_Expr.size() == 0)&&(_Pred.size()>= 1)) {
                while (idx2 != len2) {
                    if (!(_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred)) {
                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.TruePred) {
                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                        } else {
                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Pred2Element) {
                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                            } else {
                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.MemPredElement) {
                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                } else {
                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.Exists1Pred) {
                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                    } else {
                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FalsePred) {
                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                        } else {
                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.NegPredElement) {
                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                            } else {
                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.IffPred) {
                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                } else {
                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ForallPred) {
                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                    } else {
                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.zpatt.jaxb.gen.JokerPredElement) {
                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                        } else {
                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.OrPred) {
                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                            } else {
                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.QntPredElement) {
                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                } else {
                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExprPredElement) {
                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                    } else {
                                                                        if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ImpliesPred) {
                                                                            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                        } else {
                                                                            if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.ExistsPred) {
                                                                                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                            } else {
                                                                                if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.FactElement) {
                                                                                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                } else {
                                                                                    if (_Pred.get(idx2) instanceof net.sourceforge.czt.core.jaxb.gen.AndPredElement) {
                                                                                        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx2 ++)));
                                                                                    } else {
                                                                                        throw new org.xml.sax.SAXException("type mismatch error");
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.zpatt.jaxb.gen.Substitute.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/l"
+"ang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u00a9\u00a5\u00ed\u0018ppsr\u0000\u001fcom.sun.msv.gramm"
+"ar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001z\u0007\u0011\u00d5ppsq\u0000~\u0000\u0000=\u0003\u0088\u00e8ppsq\u0000~\u0000\u0000;\u0086\u0092\u000ep"
+"psq\u0000~\u0000\u0000:\t\u009b4ppsq\u0000~\u0000\u00008\u008c\u00a4Zppsq\u0000~\u0000\u00007\u000f\u00ad\u0080ppsq\u0000~\u0000\u00005\u0092\u00b6\u00a6ppsq\u0000~\u0000\u00004\u0015\u00bf\u00ccp"
+"psq\u0000~\u0000\u00002\u0098\u00c8\u00f2ppsq\u0000~\u0000\u00001\u001b\u00d2\u0018ppsq\u0000~\u0000\u0000/\u009e\u00db>ppsq\u0000~\u0000\u0000.!\u00e4dppsq\u0000~\u0000\u0000,\u00a4\u00ed\u008ap"
+"psq\u0000~\u0000\u0000+\'\u00f6\u00b0ppsq\u0000~\u0000\u0000)\u00aa\u00ff\u00d6ppsq\u0000~\u0000\u0000(.\b\u00fcppsq\u0000~\u0000\u0000&\u00b1\u0012\"ppsq\u0000~\u0000\u0000%4\u001bHp"
+"psq\u0000~\u0000\u0000#\u00b7$nppsq\u0000~\u0000\u0000\":-\u0094ppsq\u0000~\u0000\u0000 \u00bd6\u00bappsq\u0000~\u0000\u0000\u001f@?\u00e0ppsq\u0000~\u0000\u0000\u001d\u00c3I\u0006p"
+"psq\u0000~\u0000\u0000\u001cFR,ppsq\u0000~\u0000\u0000\u001a\u00c9[Rppsq\u0000~\u0000\u0000\u0019Ldxppsq\u0000~\u0000\u0000\u0017\u00cfm\u009eppsq\u0000~\u0000\u0000\u0016Rv\u00c4p"
+"psq\u0000~\u0000\u0000\u0014\u00d5\u007f\u00eappsq\u0000~\u0000\u0000\u0013X\u0089\u0010ppsq\u0000~\u0000\u0000\u0011\u00db\u00926ppsq\u0000~\u0000\u0000\u0010^\u009b\\ppsq\u0000~\u0000\u0000\u000e\u00e1\u00a4\u0082p"
+"psq\u0000~\u0000\u0000\rd\u00ad\u00a8ppsq\u0000~\u0000\u0000\u000b\u00e7\u00b6\u00ceppsq\u0000~\u0000\u0000\nj\u00bf\u00f4ppsq\u0000~\u0000\u0000\b\u00ed\u00c9\u001appsq\u0000~\u0000\u0000\u0007p\u00d2@p"
+"psq\u0000~\u0000\u0000\u0005\u00f3\u00dbfppsq\u0000~\u0000\u0000\u0004v\u00e4\u008cppsq\u0000~\u0000\u0000\u0002\u00f9\u00ed\u00b2ppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6"
+"\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000"
+"~\u0000\u0003\u0001|\u00f6\u00c2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u00001xq\u0000~\u0000\u0003\u0001|\u00f6\u00bfq\u0000~\u00009psr\u00002com.sun.msv.grammar.Expression$Any"
+"StringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u00008\u0001q\u0000~\u0000=sr\u0000 com.sun"
+".msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar."
+"NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Eps"
+"ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000>q\u0000~\u0000Csr\u0000#com.sun.msv"
+".grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang"
+"/String;L\u0000\fnamespaceURIq\u0000~\u0000Exq\u0000~\u0000@t\u00003net.sourceforge.czt.zpa"
+"tt.jaxb.gen.JokerExprElementt\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000"
+":\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000)net.sourceforge.czt.core."
+"jaxb.gen.PreExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u0000"
+"9psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000(net.sourceforge.cz"
+"t.core.jaxb.gen.OrExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|"
+"\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000)net.sourcefo"
+"rge.czt.core.jaxb.gen.IffExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdpps"
+"q\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net.s"
+"ourceforge.czt.core.jaxb.gen.Qnt1ExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dt\u0000)net.sourceforge.czt.core.jaxb.gen.LetExprq\u0000~\u0000Hsq\u0000~"
+"\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000"
+"~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000-net.sourceforge.czt.core.jaxb.gen.Exists1Ex"
+"prq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000"
+"~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net.sourceforge.czt.core.jaxb.ge"
+"n.NumExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u0000"
+"9psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net.sourceforge.cz"
+"t.core.jaxb.gen.QntExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdpp"
+"sq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net."
+"sourceforge.czt.core.jaxb.gen.SchExpr2Elementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8"
+"pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~"
+"\u0000Csq\u0000~\u0000Dt\u0000,net.sourceforge.czt.core.jaxb.gen.ExistsExprq\u0000~\u0000H"
+"sq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~"
+"\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net.sourceforge.czt.core.jaxb.gen.BindE"
+"xprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~"
+"\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000.net.sourceforge.czt.core"
+".jaxb.gen.Expr2Elementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|"
+"\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000/net.sourcefo"
+"rge.czt.core.jaxb.gen.Expr0NElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001"
+"|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000"
+"+net.sourceforge.czt.core.jaxb.gen.PowerExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dt\u0000-net.sourceforge.czt.core.jaxb.gen.SetCompExprq\u0000~\u0000H"
+"sq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~"
+"\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00004net.sourceforge.czt.core.jaxb.gen.BindS"
+"elExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009ps"
+"q\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000/net.sourceforge.czt.c"
+"ore.jaxb.gen.Expr2NElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~"
+"\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00002net.sour"
+"ceforge.czt.core.jaxb.gen.DecorExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000"
+"sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Cs"
+"q\u0000~\u0000Dt\u0000-net.sourceforge.czt.core.jaxb.gen.ImpliesExprq\u0000~\u0000Hsq"
+"\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000="
+"q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000*net.sourceforge.czt.core.jaxb.gen.CompExp"
+"rq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~"
+"\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000,net.sourceforge.czt.core.jaxb.gen"
+".ForallExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000"
+"~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000*net.sourceforge.czt.cor"
+"e.jaxb.gen.ProdExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q"
+"\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000*net.sourceforge"
+".czt.core.jaxb.gen.ProjExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000"
+"~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000(net.sou"
+"rceforge.czt.core.jaxb.gen.MuExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6"
+"\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000)n"
+"et.sourceforge.czt.core.jaxb.gen.NegExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq"
+"\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000"
+"~\u0000Dt\u0000.net.sourceforge.czt.core.jaxb.gen.Expr1Elementq\u0000~\u0000Hsq\u0000"
+"~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q"
+"\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000*net.sourceforge.czt.core.jaxb.gen.PipeExpr"
+"q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u0000"
+"9pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net.sourceforge.czt.core.jaxb.gen."
+"ApplExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009"
+"psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000)net.sourceforge.czt"
+".core.jaxb.gen.SetExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|"
+"\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000,net.sourcefo"
+"rge.czt.core.jaxb.gen.LambdaExprq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00005ne"
+"t.sourceforge.czt.core.jaxb.gen.TupleSelExprElementq\u0000~\u0000Hsq\u0000~"
+"\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000"
+"~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000)net.sourceforge.czt.core.jaxb.gen.AndExprq\u0000"
+"~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009p"
+"q\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00003net.sourceforge.czt.core.jaxb.gen.Re"
+"nameExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009"
+"psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net.sourceforge.czt"
+".core.jaxb.gen.CondExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdpp"
+"sq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net."
+"sourceforge.czt.core.jaxb.gen.SchExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dt\u00002net.sourceforge.czt.core.jaxb.gen.ThetaExprElement"
+"q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u0000"
+"9pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net.sourceforge.czt.core.jaxb.gen."
+"RefExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009p"
+"sq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net.sourceforge.czt."
+"core.jaxb.gen.HideExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdpps"
+"q\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00004net.s"
+"ourceforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|"
+"\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq"
+"\u0000~\u0000Csq\u0000~\u0000Dt\u0000+net.sourceforge.czt.core.jaxb.gen.TupleExprq\u0000~\u0000"
+"Hsq\u0000~\u0000\u0000=\u0003\u0088\u00e8ppsq\u0000~\u0000\u0000;\u0086\u0092\u000eppsq\u0000~\u0000\u0000:\t\u009b4ppsq\u0000~\u0000\u00008\u008c\u00a4Zppsq\u0000~\u0000\u00007\u000f\u00ad\u0080p"
+"psq\u0000~\u0000\u00005\u0092\u00b6\u00a6ppsq\u0000~\u0000\u00004\u0015\u00bf\u00ccppsq\u0000~\u0000\u00002\u0098\u00c8\u00f2ppsq\u0000~\u0000\u00001\u001b\u00d2\u0018ppsq\u0000~\u0000\u0000/\u009e\u00db>p"
+"psq\u0000~\u0000\u0000.!\u00e4dppsq\u0000~\u0000\u0000,\u00a4\u00ed\u008appsq\u0000~\u0000\u0000+\'\u00f6\u00b0ppsq\u0000~\u0000\u0000)\u00aa\u00ff\u00d6ppsq\u0000~\u0000\u0000(.\b\u00fcp"
+"psq\u0000~\u0000\u0000&\u00b1\u0012\"ppsq\u0000~\u0000\u0000%4\u001bHppsq\u0000~\u0000\u0000#\u00b7$nppsq\u0000~\u0000\u0000\":-\u0094ppsq\u0000~\u0000\u0000 \u00bd6\u00bap"
+"psq\u0000~\u0000\u0000\u001f@?\u00e0ppsq\u0000~\u0000\u0000\u001d\u00c3I\u0006ppsq\u0000~\u0000\u0000\u001cFR,ppsq\u0000~\u0000\u0000\u001a\u00c9[Rppsq\u0000~\u0000\u0000\u0019Ldxp"
+"psq\u0000~\u0000\u0000\u0017\u00cfm\u009eppsq\u0000~\u0000\u0000\u0016Rv\u00c4ppsq\u0000~\u0000\u0000\u0014\u00d5\u007f\u00eappsq\u0000~\u0000\u0000\u0013X\u0089\u0010ppsq\u0000~\u0000\u0000\u0011\u00db\u00926p"
+"psq\u0000~\u0000\u0000\u0010^\u009b\\ppsq\u0000~\u0000\u0000\u000e\u00e1\u00a4\u0082ppsq\u0000~\u0000\u0000\rd\u00ad\u00a8ppsq\u0000~\u0000\u0000\u000b\u00e7\u00b6\u00ceppsq\u0000~\u0000\u0000\nj\u00bf\u00f4p"
+"psq\u0000~\u0000\u0000\b\u00ed\u00c9\u001appsq\u0000~\u0000\u0000\u0007p\u00d2@ppsq\u0000~\u0000\u0000\u0005\u00f3\u00dbfppsq\u0000~\u0000\u0000\u0004v\u00e4\u008cppsq\u0000~\u0000\u0000\u0002\u00f9\u00ed\u00b2p"
+"psq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000"
+"~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000Gq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005"
+"\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000Nq\u0000~\u0000Hsq\u0000"
+"~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q"
+"\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000Tq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2"
+"q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000Zq\u0000~\u0000Hsq\u0000~\u00000\u0001"
+"|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000A"
+"q\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000`q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u0000"
+"9psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000fq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dq\u0000~\u0000lq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq"
+"\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000rq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq"
+"\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000"
+"~\u0000Dq\u0000~\u0000xq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:"
+"\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000~q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000"
+"\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq"
+"\u0000~\u0000\u0084q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bf"
+"q\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u008aq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u0090"
+"q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u0000"
+"9pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u0096q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq"
+"\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u009cq\u0000~\u0000"
+"Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000"
+"~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00a2q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005"
+"\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00a8q\u0000~\u0000Hsq\u0000"
+"~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q"
+"\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00aeq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2"
+"q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00b4q\u0000~\u0000Hsq\u0000~\u00000\u0001"
+"|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000A"
+"q\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00baq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u0000"
+"9psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00c0q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dq\u0000~\u0000\u00c6q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq"
+"\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00ccq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq"
+"\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000"
+"~\u0000Dq\u0000~\u0000\u00d2q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:"
+"\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00d8q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000"
+"\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq"
+"\u0000~\u0000\u00deq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bf"
+"q\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00e4q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00ea"
+"q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u0000"
+"9pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00f0q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq"
+"\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00f6q\u0000~\u0000"
+"Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000"
+"~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0000\u00fcq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005"
+"\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0001\u0002q\u0000~\u0000Hsq\u0000"
+"~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q"
+"\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0001\bq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2"
+"q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0001\u000eq\u0000~\u0000Hsq\u0000~\u00000\u0001"
+"|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000A"
+"q\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0001\u0014q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u0000"
+"9psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0001\u001aq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dq\u0000~\u0001 q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq"
+"\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0001&q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq"
+"\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000"
+"~\u0000Dq\u0000~\u0001,q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:"
+"\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u00012q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000"
+"\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq"
+"\u0000~\u00018q\u0000~\u0000Hsq\u0000~\u0000\u0006/\u009e\u00dbAppsq\u0000~\u0000\u0000\u0017\u00cfm\u009eppsq\u0000~\u0000\u0000\u0016Rv\u00c4ppsq\u0000~\u0000\u0000\u0014\u00d5\u007f\u00eappsq\u0000"
+"~\u0000\u0000\u0013X\u0089\u0010ppsq\u0000~\u0000\u0000\u0011\u00db\u00926ppsq\u0000~\u0000\u0000\u0010^\u009b\\ppsq\u0000~\u0000\u0000\u000e\u00e1\u00a4\u0082ppsq\u0000~\u0000\u0000\rd\u00ad\u00a8ppsq\u0000"
+"~\u0000\u0000\u000b\u00e7\u00b6\u00ceppsq\u0000~\u0000\u0000\nj\u00bf\u00f4ppsq\u0000~\u0000\u0000\b\u00ed\u00c9\u001appsq\u0000~\u0000\u0000\u0007p\u00d2@ppsq\u0000~\u0000\u0000\u0005\u00f3\u00dbfppsq\u0000"
+"~\u0000\u0000\u0004v\u00e4\u008cppsq\u0000~\u0000\u0000\u0002\u00f9\u00ed\u00b2ppsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u0000"
+"9psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000*net.sourceforge.cz"
+"t.core.jaxb.gen.TruePredq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005"
+"\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000.net.source"
+"forge.czt.core.jaxb.gen.Pred2Elementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000"
+"\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt"
+"\u00000net.sourceforge.czt.core.jaxb.gen.MemPredElementq\u0000~\u0000Hsq\u0000~\u0000"
+"0\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~"
+"\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000-net.sourceforge.czt.core.jaxb.gen.Exists1Pre"
+"dq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~"
+"\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000+net.sourceforge.czt.core.jaxb.gen"
+".FalsePredq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~"
+"\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net.sourceforge.czt.core"
+".jaxb.gen.NegPredElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005"
+"\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000)net.source"
+"forge.czt.core.jaxb.gen.IffPredq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdp"
+"psq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000,net"
+".sourceforge.czt.core.jaxb.gen.ForallPredq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000s"
+"q\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq"
+"\u0000~\u0000Dt\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerPredElementq\u0000"
+"~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009p"
+"q\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000(net.sourceforge.czt.core.jaxb.gen.Or"
+"Predq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bf"
+"q\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net.sourceforge.czt.core.jaxb."
+"gen.QntPredElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000"
+"~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00001net.sourceforge."
+"czt.core.jaxb.gen.ExprPredElementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6"
+"\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000-n"
+"et.sourceforge.czt.core.jaxb.gen.ImpliesPredq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8p"
+"p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000"
+"Csq\u0000~\u0000Dt\u0000,net.sourceforge.czt.core.jaxb.gen.ExistsPredq\u0000~\u0000Hs"
+"q\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000"
+"=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u0000-net.sourceforge.czt.core.jaxb.gen.FactEl"
+"ementq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6"
+"\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dt\u00000net.sourceforge.czt.core.jaxb"
+".gen.AndPredElementq\u0000~\u0000Hsq\u0000~\u0000\u0000\u0017\u00cfm\u009eppsq\u0000~\u0000\u0000\u0016Rv\u00c4ppsq\u0000~\u0000\u0000\u0014\u00d5\u007f\u00eapp"
+"sq\u0000~\u0000\u0000\u0013X\u0089\u0010ppsq\u0000~\u0000\u0000\u0011\u00db\u00926ppsq\u0000~\u0000\u0000\u0010^\u009b\\ppsq\u0000~\u0000\u0000\u000e\u00e1\u00a4\u0082ppsq\u0000~\u0000\u0000\rd\u00ad\u00a8pp"
+"sq\u0000~\u0000\u0000\u000b\u00e7\u00b6\u00ceppsq\u0000~\u0000\u0000\nj\u00bf\u00f4ppsq\u0000~\u0000\u0000\b\u00ed\u00c9\u001appsq\u0000~\u0000\u0000\u0007p\u00d2@ppsq\u0000~\u0000\u0000\u0005\u00f3\u00dbfpp"
+"sq\u0000~\u0000\u0000\u0004v\u00e4\u008cppsq\u0000~\u0000\u0000\u0002\u00f9\u00ed\u00b2ppsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q"
+"\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002Cq\u0000~\u0000Hsq\u0000~\u00000\u0001|"
+"\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq"
+"\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002Iq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009"
+"psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002Oq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp"
+"\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000C"
+"sq\u0000~\u0000Dq\u0000~\u0002Uq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000"
+"~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002[q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000"
+"~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~"
+"\u0000Dq\u0000~\u0002aq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001"
+"|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002gq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001"
+"|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000"
+"~\u0002mq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq"
+"\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002sq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdp"
+"psq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002yq"
+"\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009"
+"pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002\u007fq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000"
+"~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002\u0085q\u0000~\u0000H"
+"sq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~"
+"\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002\u008bq\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001"
+"|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002\u0091q\u0000~\u0000Hsq\u0000~"
+"\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000"
+"~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002\u0097q\u0000~\u0000Hsq\u0000~\u00000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00cdppsq\u0000~\u00005\u0001|\u00f6\u00c2q"
+"\u0000~\u00009psq\u0000~\u0000:\u0001|\u00f6\u00bfq\u0000~\u00009pq\u0000~\u0000=q\u0000~\u0000Aq\u0000~\u0000Csq\u0000~\u0000Dq\u0000~\u0002\u009dq\u0000~\u0000Hsr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthres"
+"holdL\u0000\u0006parentq\u0000~\u0002\u00fe[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressio"
+"n;xp\u0000\u0000\u0001U\u0000\u0000\u0001\u00ccpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000"
+"\u0000xp\u0000\u0000\u0005\u00ffpppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001Rq"
+"\u0000~\u0000!q\u0000~\u0002/q\u0000~\u0002\u009eppppppppppppppppppppppppq\u0000~\u0002\u0017q\u0000~\u0002\u0012q\u0000~\u0002\rq\u0000~\u0002\bq\u0000"
+"~\u0002\u0003q\u0000~\u0001\u00feq\u0000~\u0001\u00f9q\u0000~\u0001\u00f4q\u0000~\u0001\u00efq\u0000~\u0001\u00eaq\u0000~\u0001\u00e5q\u0000~\u0002\u0011q\u0000~\u0002\fq\u0000~\u0002\u0007q\u0000~\u0002\u0002q\u0000~\u0001\u00fdq\u0000"
+"~\u0001\u00f8q\u0000~\u0001\u00f3q\u0000~\u0001\u00eeq\u0000~\u0001\u00e9q\u0000~\u0001\u00e4q\u0000~\u0001Bq\u0000~\u0000\u0011q\u0000~\u0001\u00dfq\u0000~\u0001\u00e0q\u0000~\u0001\u00daq\u0000~\u0001\u00dbq\u0000~\u0001\u00d5q\u0000"
+"~\u0001\u00d6q\u0000~\u0001\u00d0q\u0000~\u0001\u00d1q\u0000~\u0001\u00cbq\u0000~\u0001\u00ccq\u0000~\u0001\u00c6q\u0000~\u0001\u00c7q\u0000~\u0001\u00c1q\u0000~\u0001\u00c2q\u0000~\u0001\u00bcq\u0000~\u0001\u00bdq\u0000~\u0001\u00b7q\u0000"
+"~\u0001\u00b8q\u0000~\u0001\u00b2q\u0000~\u0001\u00b3q\u0000~\u0001\u00adq\u0000~\u0001\u00aeq\u0000~\u0001\u00a8q\u0000~\u0001\u00a9q\u0000~\u0001\u00a3q\u0000~\u0001\u00a4q\u0000~\u0001\u009eq\u0000~\u0001\u009fq\u0000~\u0001\u0099q\u0000"
+"~\u0001\u009aq\u0000~\u0001\u0094q\u0000~\u0001\u0095q\u0000~\u0001\u008fq\u0000~\u0001\u0090q\u0000~\u0001\u008aq\u0000~\u0001\u008bq\u0000~\u0001\u0085q\u0000~\u0001\u0086q\u0000~\u0001\u0080q\u0000~\u0001\u0081q\u0000~\u0001{q\u0000"
+"~\u0001|q\u0000~\u0001vq\u0000~\u0001wq\u0000~\u0001qq\u0000~\u0001rq\u0000~\u0001lq\u0000~\u0001mq\u0000~\u0001Qq\u0000~\u0000 q\u0000~\u0001gq\u0000~\u0001hq\u0000~\u0001bq\u0000"
+"~\u0001cq\u0000~\u00014q\u0000~\u00015q\u0000~\u0001.q\u0000~\u0001/q\u0000~\u0001(q\u0000~\u0000\u00b7q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000\u0099q\u0000"
+"~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~\u0000\u00b0q\u0000~\u0000\u00aaq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000\u0098q\u0000~\u0000\u0092q\u0000~\u0000\u008cq\u0000"
+"~\u0000\u0086q\u0000~\u0000\u0080q\u0000~\u0000zq\u0000~\u0000tq\u0000~\u0000nq\u0000~\u0000hq\u0000~\u0000bq\u0000~\u0000\\q\u0000~\u0000Vq\u0000~\u0000Pq\u0000~\u0000Jq\u0000~\u00004q\u0000"
+"~\u0000uq\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000Wq\u0000~\u0000Qq\u0000~\u0000Kq\u0000~\u00007q\u0000~\u0001`q\u0000~\u0000/q\u0000~\u0000\u00b6q\u0000"
+"~\u0000\u00bdq\u0000~\u0000\u00bcq\u0000~\u0000\u00c3q\u0000~\u0000\u00c2q\u0000~\u0000\u00c9q\u0000~\u0000\u00c8q\u0000~\u0000\u00cfq\u0000~\u0000\u00ceq\u0000~\u0000\u00d5q\u0000~\u0000\u00d4q\u0000~\u0000\u00dbq\u0000~\u0000\u00daq\u0000"
+"~\u0000\u00e1q\u0000~\u0000\u00e0q\u0000~\u0000\u00e7q\u0000~\u0000\u00e6q\u0000~\u0000\u00ecq\u0000~\u0000\u00f2q\u0000~\u0000\u00f8q\u0000~\u0000\u00feq\u0000~\u0001\u0004q\u0000~\u0001\nq\u0000~\u0001\u0010q\u0000~\u0001\u0016q\u0000"
+"~\u0001\u001cq\u0000~\u0001\"q\u0000~\u0000\u00edq\u0000~\u0000\u00f3q\u0000~\u0000\u00f9q\u0000~\u0000\u00ffq\u0000~\u0001\u0005q\u0000~\u0001\u000bq\u0000~\u0001\u0011q\u0000~\u0001\u0017q\u0000~\u0001\u001dq\u0000~\u0001#q\u0000"
+"~\u0001)q\u0000~\u0001Aq\u0000~\u0000\u0010q\u0000~\u0002\u0016q\u0000~\u0002\u001cq\u0000~\u0002\u001bq\u0000~\u0002!q\u0000~\u0002 q\u0000~\u0002&q\u0000~\u0002%q\u0000~\u0001Pq\u0000~\u0000\u001fq\u0000"
+"~\u0002+q\u0000~\u0002*q\u0000~\u0002@q\u0000~\u0002?q\u0000~\u0002Fq\u0000~\u0002Eq\u0000~\u0002=q\u0000~\u0002Lq\u0000~\u0002Kq\u0000~\u0002Rq\u0000~\u0002Qq\u0000~\u0002Xq\u0000"
+"~\u0002Wq\u0000~\u0002^q\u0000~\u0002]q\u0000~\u0002dq\u0000~\u0002cq\u0000~\u0002jq\u0000~\u0002iq\u0000~\u0002pq\u0000~\u0002oq\u0000~\u0002vq\u0000~\u0002uq\u0000~\u0002|q\u0000"
+"~\u0002{q\u0000~\u0002\u0082q\u0000~\u0002\u0081q\u0000~\u0002\u0088q\u0000~\u0002\u0087q\u0000~\u0002\u008eq\u0000~\u0002\u008dq\u0000~\u0002\u0094q\u0000~\u0002\u0093q\u0000~\u0002\u009aq\u0000~\u0002\u0099q\u0000~\u0002\u00afq\u0000"
+"~\u0002\u00aeq\u0000~\u0002\u00b4q\u0000~\u0002\u00b3q\u0000~\u0002\u00acq\u0000~\u0002\u00b9q\u0000~\u0002\u00b8q\u0000~\u0002\u00beq\u0000~\u0002\u00bdq\u0000~\u0002\u00c3q\u0000~\u0002\u00c2q\u0000~\u0002\u00c8q\u0000~\u0001@q\u0000"
+"~\u0000\u000fq\u0000~\u0001_q\u0000~\u0000.q\u0000~\u0002<q\u0000~\u0002\u00abq\u0000~\u0002\u00c7q\u0000~\u0002\u00cdq\u0000~\u0002\u00ccq\u0000~\u0002\u00d2q\u0000~\u0002\u00d1q\u0000~\u0002\u00d7q\u0000~\u0002\u00d6q\u0000"
+"~\u0002\u00dcq\u0000~\u0002\u00dbq\u0000~\u0002\u00e1q\u0000~\u0002\u00e0q\u0000~\u0002\u00e6q\u0000~\u0002\u00e5q\u0000~\u0002\u00ebq\u0000~\u0002\u00eaq\u0000~\u0002\u00f0q\u0000~\u0002\u00efq\u0000~\u0002\u00f5q\u0000~\u0002\u00f4q\u0000"
+"~\u0002\u00faq\u0000~\u0002\u00f9q\u0000~\u0002.q\u0000~\u0000\u0005pppppppppppppppppppppq\u0000~\u0001Oq\u0000~\u0000\u001eppppppppppp"
+"ppppppppppppppppppppppppppppppppppppq\u0000~\u0001?q\u0000~\u0000\u000eq\u0000~\u0001^q\u0000~\u0000-q\u0000~\u0002"
+";q\u0000~\u0002\u00aappppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001Nq\u0000~\u0000\u001d"
+"q\u0000~\u0000\u0007ppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001>q\u0000~\u0001"
+"]q\u0000~\u0000,q\u0000~\u0000\rq\u0000~\u0002:q\u0000~\u0002\u00a9ppppppppppppppppppppppppppppppppppppppp"
+"pppppq\u0000~\u0001Mq\u0000~\u0000\u001cppppppppppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000\fq\u0000~\u0001\\q\u0000~\u0000+q\u0000~\u0001=q\u0000~\u00029q\u0000~\u0002\u00a8pppppppppppppppppppppppppppp"
+"ppppppppppppppppq\u0000~\u0001Lq\u0000~\u0000\u001bpppppppppppppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000\u000bq\u0000~\u0001[q\u0000~\u0000*q\u0000~\u0001<q\u0000~\u00028q\u0000~\u0002\u00a7ppppppppppppppppp"
+"pppppppppppppppppppppppppppq\u0000~\u0001Kq\u0000~\u0000\u001appppppppppppppppppppppp"
+"ppppppppppppppppppppppppq\u0000~\u0000\nq\u0000~\u0001Zq\u0000~\u0000)q\u0000~\u0001;q\u0000~\u00027q\u0000~\u0002\u00a6pppppp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0001Jq\u0000~\u0000\u0019pppppppppppp"
+"pppppppppppppppppppppppppppppppppppq\u0000~\u0000\tq\u0000~\u0001Yq\u0000~\u0000(q\u0000~\u0001:q\u0000~\u00026"
+"q\u0000~\u0002\u00a5ppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001Iq\u0000~\u0000\u0018p"
+"ppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\bq\u0000~\u0001Xq\u0000~\u0000"
+"\'q\u0000~\u00019q\u0000~\u00025q\u0000~\u0002\u00a4pppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0001Hq\u0000~\u0000\u0017ppppppppppppppppppppppppppppppppppppppppppppppppq\u0000"
+"~\u0001Wq\u0000~\u0000&q\u0000~\u00024q\u0000~\u0002\u00a3pppppppppppppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0001Gq\u0000~\u0000\u0016ppppppppppppppppppppppppppppppppppppppppppppppp"
+"pq\u0000~\u0001Vq\u0000~\u0000%q\u0000~\u00023q\u0000~\u0002\u00a2ppppppppppppppppppppppppppppppppppppppp"
+"ppppppq\u0000~\u0001Fq\u0000~\u0000\u0015pppppppppppppppppppppppppppppppppppppppppppp"
+"ppppq\u0000~\u0001Uq\u0000~\u0000$q\u0000~\u00022q\u0000~\u0002\u00a1pppppppppppppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0001Eq\u0000~\u0000\u0014ppppppppppppppppppppppppppppppppppppppppp"
+"pppppppq\u0000~\u0001Tq\u0000~\u0000#q\u0000~\u00021q\u0000~\u0002\u00a0ppppppppppppppppppppppppppppppppp"
+"ppppppppppppq\u0000~\u0001Dq\u0000~\u0000\u0013pppppppppppppppppppppppppppppppppppppp"
+"ppppppppppq\u0000~\u0001Sq\u0000~\u0000\"q\u0000~\u00020q\u0000~\u0002\u009fpppppppppppppppppppppppppppppp"
+"pppppppppppppppq\u0000~\u0001Cq\u0000~\u0000\u0012p"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "------");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.zpatt.jaxb.gen.impl.SubstituteImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  0 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Qnt1ExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.QntExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr2ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr1ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TruePredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Pred2ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MemPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1PredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FalsePredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.QntPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FactElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  4 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  1 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PreExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Qnt1ExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LetExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1ExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NumExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.QntExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExpr2ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr2ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr0NElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PowerExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetCompExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.BindSelExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr2NElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DecorExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CompExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProdExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ProjExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MuExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Expr1ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.PipeExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ApplExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SetExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.LambdaExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleSelExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RenameExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.CondExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.SchExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ThetaExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.RefExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.HideExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TupleExprImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.TruePredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Pred2ElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.MemPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.Exists1PredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FalsePredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.NegPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.IffPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ForallPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.OrPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.QntPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ImpliesPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.ExistsPredImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FactElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AndPredElementImpl.class), 1, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 1;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 1;
                            return ;
                        }
                        break;
                    case  2 :
                        _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname)));
                        return ;
                    case  1 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname)));
                        return ;
                    case  1 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname)));
                        return ;
                    case  1 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            _Pred.add(((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.PredImpl.class), 3, value)));
                            return ;
                        case  4 :
                            _Expr.add(((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.ExprImpl.class), 5, value)));
                            return ;
                        case  1 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
