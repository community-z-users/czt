//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.05 at 10:33:20 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class ExprPredImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.PredImpl
    implements net.sourceforge.czt.z.jaxb.gen.ExprPred, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.ExprPred.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.ExprPred.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp6[4\u0087ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u0007\u00e5\u00adppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0007\u00e5"
+"\u00a2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002\u0007\u00e5\u0097ppsq"
+"\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001F\u00b6\u00e7q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0001F\u00b6\u00e4q\u0000~\u0000\rpsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+http:/"
+"/java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006\u0000\u00c1.\u0095ppsq\u0000~\u0000\u0014\u0000\u00c1.\u008aq"
+"\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003\u00005\u00e6\u00f3ppsr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fname"
+"spaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp://czt.source"
+"forge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u00064SN\u00d5ppsq\u0000~\u0000\u00063\f\u0097\u00d6ppsq\u0000~\u0000\u00061\u00c5\u00e0\u00d7ppsq\u0000~\u0000\u0006"
+"0\u007f)\u00d8ppsq\u0000~\u0000\u0006/8r\u00d9ppsq\u0000~\u0000\u0006-\u00f1\u00bb\u00dappsq\u0000~\u0000\u0006,\u00ab\u0004\u00dbppsq\u0000~\u0000\u0006+dM\u00dcppsq\u0000~\u0000\u0006"
+"*\u001d\u0096\u00ddppsq\u0000~\u0000\u0006(\u00d6\u00df\u00deppsq\u0000~\u0000\u0006\'\u0090(\u00dfppsq\u0000~\u0000\u0006&Iq\u00e0ppsq\u0000~\u0000\u0006%\u0002\u00ba\u00e1ppsq\u0000~\u0000\u0006"
+"#\u00bc\u0003\u00e2ppsq\u0000~\u0000\u0006\"uL\u00e3ppsq\u0000~\u0000\u0006!.\u0095\u00e4ppsq\u0000~\u0000\u0006\u001f\u00e7\u00de\u00e5ppsq\u0000~\u0000\u0006\u001e\u00a1\'\u00e6ppsq\u0000~\u0000\u0006"
+"\u001dZp\u00e7ppsq\u0000~\u0000\u0006\u001c\u0013\u00b9\u00e8ppsq\u0000~\u0000\u0006\u001a\u00cd\u0002\u00e9ppsq\u0000~\u0000\u0006\u0019\u0086K\u00eappsq\u0000~\u0000\u0006\u0018?\u0094\u00ebppsq\u0000~\u0000\u0006"
+"\u0016\u00f8\u00dd\u00ecppsq\u0000~\u0000\u0006\u0015\u00b2&\u00edppsq\u0000~\u0000\u0006\u0014ko\u00eeppsq\u0000~\u0000\u0006\u0013$\u00b8\u00efppsq\u0000~\u0000\u0006\u0011\u00de\u0001\u00f0ppsq\u0000~\u0000\u0006"
+"\u0010\u0097J\u00f1ppsq\u0000~\u0000\u0006\u000fP\u0093\u00f2ppsq\u0000~\u0000\u0006\u000e\t\u00dc\u00f3ppsq\u0000~\u0000\u0006\f\u00c3%\u00f4ppsq\u0000~\u0000\u0006\u000b|n\u00f5ppsq\u0000~\u0000\u0006"
+"\n5\u00b7\u00f6ppsq\u0000~\u0000\u0006\b\u00ef\u0000\u00f7ppsq\u0000~\u0000\u0006\u0007\u00a8I\u00f8ppsq\u0000~\u0000\u0006\u0006a\u0092\u00f9ppsq\u0000~\u0000\u0006\u0005\u001a\u00db\u00fappsq\u0000~\u0000\u0006"
+"\u0003\u00d4$\u00fbppsq\u0000~\u0000\u0006\u0002\u008dm\u00fcppsq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z"
+".jaxb.gen.ApplExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000"
+"\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourc"
+"eforge.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq"
+"\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F"
+"\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~"
+"\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprEleme"
+"ntq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000"
+"~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.R"
+"efExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z"
+".jaxb.gen.CondExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000"
+"\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourc"
+"eforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006"
+"\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et"
+"\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp"
+"\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\b"
+"\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000\"sq"
+"\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq"
+"\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb.gen.Exis"
+"ts1Exprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001"
+"F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb."
+"gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge"
+".czt.z.jaxb.gen.OrExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F"
+"\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourcefo"
+"rge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001"
+"F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+"\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq"
+"\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdp"
+"p\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\b"
+"\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000\"sq\u0000"
+"~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExprq"
+"\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.z.jaxb.gen.Expr"
+"2NElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jax"
+"b.gen.Qnt1ExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6"
+"\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourcefor"
+"ge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2pps"
+"q\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.s"
+"ourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F"
+"\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000."
+"net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6"
+"\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000\"sq\u0000~"
+"\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.tcoz.jaxb.gen.ChannelEx"
+"prElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jax"
+"b.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.z"
+".jaxb.gen.Expr1Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F"
+"\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourcefo"
+"rge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000"
+"~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp"
+"\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq"
+"\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.z.jaxb.gen.Expr"
+"2Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014"
+"\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb"
+".gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.cz"
+"t.z.jaxb.gen.Expr0NElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~"
+"\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sour"
+"ceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000"
+"\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001e"
+"t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000"
+"\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000\"s"
+"q\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\b\u0001F\u00b6\u00fdpp\u0000sq\u0000~\u0000\u0006\u0001F\u00b6\u00f2ppsq\u0000~\u0000\u0011\u0001F\u00b6\u00e7q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0001F"
+"\u00b6\u00e4q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt.z.jaxb.g"
+"en.RenameExprElementq\u0000~\u0000\"sr\u0000\"com.sun.msv.grammar.ExpressionP"
+"ool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionP"
+"ool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clos"
+"edHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001][\u0000\u0005tablet"
+"\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0080\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun."
+"msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000\u00ebq\u0000~\u0000\u00e5q\u0000~\u0000\u00dfq\u0000~\u0000\u00d9"
+"q\u0000~\u0000\u00d3q\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0010q\u0000~\u0000gq\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~\u0000\u0085"
+"q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q\u0000~\u0000\u009dq\u0000~\u0000\u00a3q\u0000~\u0000\u00a9q\u0000~\u0000\u00afq\u0000~\u0000\u00b5q\u0000~\u0000\u00bbq\u0000~\u0000\u00c1q\u0000~\u0000\u00c7q\u0000~\u0000\u00cd"
+"q\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00bcq\u0000~\u0000\u00c2q\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~\u0000e"
+"q\u0000~\u0000dq\u0000~\u0001?q\u0000~\u0000cq\u0000~\u0001@q\u0000~\u00019q\u0000~\u0001:q\u0000~\u00013q\u0000~\u00014q\u0000~\u0001-q\u0000~\u0001.q\u0000~\u0001\'q\u0000~\u0001("
+"q\u0000~\u0001!q\u0000~\u0000bq\u0000~\u0001\"q\u0000~\u0001\u001bq\u0000~\u0001\u001cq\u0000~\u0001\u0015q\u0000~\u0001\u0016q\u0000~\u0001\u000fq\u0000~\u0001\u0010q\u0000~\u0001\tq\u0000~\u0001\nq\u0000~\u0001\u0003"
+"q\u0000~\u0000aq\u0000~\u0001\u0004q\u0000~\u0000\u00fdq\u0000~\u0000\u00feq\u0000~\u0001Fq\u0000~\u0001Eq\u0000~\u0001Lq\u0000~\u0001Kq\u0000~\u0001Rq\u0000~\u0001Qq\u0000~\u0001Xq\u0000~\u0000`"
+"q\u0000~\u0001Wq\u0000~\u0000\u0005ppppppppq\u0000~\u0000_ppppppppppq\u0000~\u0000^ppppppppppq\u0000~\u0000]ppppppp"
+"pppq\u0000~\u0000\\ppppppppppq\u0000~\u0000[ppppppppppq\u0000~\u0000Zppppppppppq\u0000~\u0000Yppppppp"
+"pppq\u0000~\u0000Xppppppppppq\u0000~\u0000Wppppppppppq\u0000~\u0000Vppppppppppq\u0000~\u0000Uppppppp"
+"pppq\u0000~\u0000Tppppppppppq\u0000~\u0000Sppppppppppq\u0000~\u0000Rppppppppppq\u0000~\u0000Qppppppp"
+"pppq\u0000~\u0000Pppppppppppq\u0000~\u0000Oppppppppq\u0000~\u0000#pq\u0000~\u0000Nppppppppppq\u0000~\u0000Mq\u0000~"
+"\u0000\u000epppppppppq\u0000~\u0000Lppppppppppq\u0000~\u0000Kq\u0000~\u0000\u0007pppppppppq\u0000~\u0000Jpppppppppp"
+"q\u0000~\u0000Ippppppppppq\u0000~\u0000Hppppppppppq\u0000~\u0000Gppppppppppq\u0000~\u0000Fpppppppppp"
+"q\u0000~\u0000Eppppppppppq\u0000~\u0000Dppppppppppq\u0000~\u0000Cppppppppppq\u0000~\u0000Bpppppppppp"
+"q\u0000~\u0000Appppppppppq\u0000~\u0000@ppppppppppq\u0000~\u0000?ppppppppppq\u0000~\u0000>pppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u00f8q"
+"\u0000~\u0000\u00f2q\u0000~\u0000\u00ecq\u0000~\u0000\u00e6q\u0000~\u0000\u00e0q\u0000~\u0000\u00daq\u0000~\u0000\u00d4q\u0000~\u0000\u0013q\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000\u00f7q\u0000~\u0000\u00f1"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl)net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl)net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl)net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl)net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl)net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl)net.sourceforge.czt.z.jaxb.gen.impl.ExprPredImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 4, value));
                            return ;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
