//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.12.09 at 10:30:14 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class HideExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.z.jaxb.gen.HideExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.HideExpr.class);
    }

    public java.util.List getName() {
        return _Name;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Name.size();
        super.serializeBody(context);
        while (idx1 != len1) {
            context.startElement("http://czt.sourceforge.net/zml", "Name");
            int idx_0 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name.get(idx_0 ++)), "Name");
            context.endNamespaceDecls();
            int idx_1 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name.get(idx_1 ++)), "Name");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name.get(idx1 ++)), "Name");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Name.size();
        super.serializeAttributes(context);
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Name.size();
        super.serializeURIs(context);
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.HideExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u001cEe\u0097ppsq\u0000~\u0000\u0000\u0018\u00d7\u007f3ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002!\u0095\u0087ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0002!\u0095|sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0002!\u0095qppsq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u008d\u00cdiq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000\u008d\u00cdfq\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0001\u0093\u00c7\u00edp"
+"psq\u0000~\u0000\u0015\u0001\u0093\u00c7\u00e2q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001s.\u00e2ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0016\u00b5\u00e9\u00a7ppsq\u0000~\u0000\u0007\u0016(\u001c&ppsq\u0000~\u0000\u0007"
+"\u0015\u009aN\u00a5ppsq\u0000~\u0000\u0007\u0015\f\u0081$ppsq\u0000~\u0000\u0007\u0014~\u00b3\u00a3ppsq\u0000~\u0000\u0007\u0013\u00f0\u00e6\"ppsq\u0000~\u0000\u0007\u0013c\u0018\u00a1ppsq\u0000~\u0000\u0007"
+"\u0012\u00d5K ppsq\u0000~\u0000\u0007\u0012G}\u009fppsq\u0000~\u0000\u0007\u0011\u00b9\u00b0\u001eppsq\u0000~\u0000\u0007\u0011+\u00e2\u009dppsq\u0000~\u0000\u0007\u0010\u009e\u0015\u001cppsq\u0000~\u0000\u0007"
+"\u0010\u0010G\u009bppsq\u0000~\u0000\u0007\u000f\u0082z\u001appsq\u0000~\u0000\u0007\u000e\u00f4\u00ac\u0099ppsq\u0000~\u0000\u0007\u000ef\u00df\u0018ppsq\u0000~\u0000\u0007\r\u00d9\u0011\u0097ppsq\u0000~\u0000\u0007"
+"\rKD\u0016ppsq\u0000~\u0000\u0007\f\u00bdv\u0095ppsq\u0000~\u0000\u0007\f/\u00a9\u0014ppsq\u0000~\u0000\u0007\u000b\u00a1\u00db\u0093ppsq\u0000~\u0000\u0007\u000b\u0014\u000e\u0012ppsq\u0000~\u0000\u0007"
+"\n\u0086@\u0091ppsq\u0000~\u0000\u0007\t\u00f8s\u0010ppsq\u0000~\u0000\u0007\tj\u00a5\u008fppsq\u0000~\u0000\u0007\b\u00dc\u00d8\u000eppsq\u0000~\u0000\u0007\bO\n\u008dppsq\u0000~\u0000\u0007"
+"\u0007\u00c1=\fppsq\u0000~\u0000\u0007\u00073o\u008bppsq\u0000~\u0000\u0007\u0006\u00a5\u00a2\nppsq\u0000~\u0000\u0007\u0006\u0017\u00d4\u0089ppsq\u0000~\u0000\u0007\u0005\u008a\u0007\bppsq\u0000~\u0000\u0007"
+"\u0004\u00fc9\u0087ppsq\u0000~\u0000\u0007\u0004nl\u0006ppsq\u0000~\u0000\u0007\u0003\u00e0\u009e\u0085ppsq\u0000~\u0000\u0007\u0003R\u00d1\u0004ppsq\u0000~\u0000\u0007\u0002\u00c5\u0003\u0083ppsq\u0000~\u0000\u0007"
+"\u000276\u0002ppsq\u0000~\u0000\u0007\u0001\u00a9h\u0081ppsq\u0000~\u0000\u0007\u0001\u001b\u009b\u0000ppsq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000"
+"\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourc"
+"eforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq"
+"\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.so"
+"urceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdt"
+"ppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)ne"
+"t.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000"
+"~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.tcoz.jaxb.gen.Chann"
+"elExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z"
+".jaxb.gen.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012"
+"\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.source"
+"forge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d"
+"\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&"
+"net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~"
+"\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000"
+"sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d"
+"\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq"
+"\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.Bind"
+"ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.j"
+"axb.gen.QntExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d"
+"\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourcefo"
+"rge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq"
+"\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.so"
+"urceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007"
+"\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq"
+"\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007f"
+"pp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d"
+"\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.g"
+"en.ForallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z"
+".jaxb.gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012"
+"\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.source"
+"forge.czt.z.jaxb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007"
+"\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp"
+"\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd"
+"\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~"
+"\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.HideEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jax"
+"b.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge"
+".czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtp"
+"psq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net"
+".sourceforge.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd"
+"\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.DecorEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jax"
+"b.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt"
+".z.jaxb.gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000"
+"~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sou"
+"rceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000"
+"\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fp"
+"p\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d"
+"\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.g"
+"en.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge."
+"czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\u0012\u0003m\u00e6_ppsq\u0000~\u0000\t\u0003m\u00e6\\p"
+"p\u0000sq\u0000~\u0000\u0000\u0003m\u00e6Qppsq\u0000~\u0000\t\u0000\u008d\u00cd\u007fpp\u0000sq\u0000~\u0000\u0007\u0000\u008d\u00cdtppsq\u0000~\u0000\u0012\u0000\u008d\u00cdiq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000\u008d\u00cdfq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jax"
+"b.gen.RefNameq\u0000~\u0000#sq\u0000~\u0000\u0007\u0002\u00e0\u0018\u00cdppsq\u0000~\u0000\u0015\u0002\u00e0\u0018\u00c2q\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000\u001fq\u0000~"
+"\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Nameq\u0000~\u0000>sr\u0000\"com.sun.msv.grammar.Expres"
+"sionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expres"
+"sionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool"
+"$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001l[\u0000\u0005t"
+"ablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0086\u0000\u0000\u0000\u00e6pur\u0000![Lcom"
+".sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffppppppppppppppp"
+"ppppppppppppppppppppppppq\u0000~\u0000Kq\u0000~\u0000]pppppppppppppppppppppppppp"
+"ppppppppppppppq\u0000~\u0000@q\u0000~\u0000Rq\u0000~\u0000dppppppppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000Gq\u0000~\u0000Yppppppppppppq\u0000~\u0000\u000fpppppppppppppppppppppq\u0000~"
+"\u0000\bppppppq\u0000~\u0000Nq\u0000~\u0000`ppppppppppppppppppppq\u0000~\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000"
+"~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0001@q\u0000~\u0001:q\u0000~\u00014q\u0000~\u0001.q\u0000~\u0001(q\u0000"
+"~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\nq\u0000~\u0000Uq\u0000~\u0001\u0004q\u0000~\u0000\u00feq\u0000~\u0000\u00ffq\u0000~\u0000\u00f8q\u0000~\u0000\u00f9q\u0000~\u0000\u00f2q\u0000"
+"~\u0000\u00f3q\u0000~\u0000\u00ecq\u0000~\u0000\u00edq\u0000~\u0000\u00e6q\u0000~\u0000\u00e7q\u0000~\u0000\u00e0q\u0000~\u0000\u00e1q\u0000~\u0000\u00daq\u0000~\u0000\u00dbq\u0000~\u0000\u00d4q\u0000~\u0000\u00d5q\u0000~\u0000\u0014q\u0000"
+"~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0011q\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000tq\u0000"
+"~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000Jq\u0000"
+"~\u0000\\q\u0000~\u0000\u00bcq\u0000~\u0000\u00c2q\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000\u00abq\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000"
+"~\u0000\u00c3q\u0000~\u0000\u00c9q\u0000~\u0000\u00cfq\u0000~\u0000Cq\u0000~\u0001Gq\u0000~\u0001Fq\u0000~\u0001Mq\u0000~\u0001Lq\u0000~\u0001Sq\u0000~\u0001Rq\u0000~\u0001Yq\u0000~\u0001Xq\u0000"
+"~\u0001bq\u0000~\u0001apppppppppppppppq\u0000~\u0000?q\u0000~\u0000Qq\u0000~\u0000cppppppppppq\u0000~\u0000\u0005ppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000Fq\u0000~\u0000Xpppppppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000Mq\u0000~\u0000_q\u0000~\u0001fpppppppppppppppppppppppppppppppp"
+"pppppppq\u0000~\u0000Bq\u0000~\u0000Tq\u0000~\u0000fppppppppppppppppppppppppppppppppppq\u0000~\u0000"
+"\u0006pppppq\u0000~\u0000Iq\u0000~\u0000[pppppppppppppppppppppppppppppppppppppppppq\u0000~"
+"\u0000Pq\u0000~\u0000bppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Eq\u0000~\u0000Wppp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Lq\u0000~\u0000^pq\u0000~\u0001_pppppp"
+"pppppppq\u0000~\u0001]ppppppppppppppppppppppppq\u0000~\u0000Aq\u0000~\u0000Sq\u0000~\u0000eppppppppp"
+"pppppppppppppppppppppppppppppppq\u0000~\u0000Hq\u0000~\u0000Zpppppppppq\u0000~\u0000$ppppp"
+"ppppppppppppppppppppppppppq\u0000~\u0000Oq\u0000~\u0000apppppppppppppppppppppppp"
+"ppppppppppppppppq\u0000~\u0000Dq\u0000~\u0000Vpp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name.add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, value)));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.HideExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
