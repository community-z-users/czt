//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.06.09 at 01:28:31 NZST 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class AndPredImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl
    implements net.sourceforge.czt.z.jaxb.gen.AndPred, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected java.lang.String _Op;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.AndPred.class);
    }

    public java.lang.String getOp() {
        if (_Op == null) {
            return "And";
        } else {
            return _Op;
        }
    }

    public void setOp(java.lang.String value) {
        _Op = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Op!= null) {
            context.startAttribute("", "Op");
            try {
                context.text(((java.lang.String) _Op), "Op");
            } catch (java.lang.Exception e) {
                net.sourceforge.czt.oz.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.AndPred.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp9l\u00ab\u008fppsq\u0000~\u0000\u00007/\u00f4\u007fppsq\u0000~\u0000\u0000\u001e"
+"H\u008b\u0019ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0005a!\u00b3p"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0005a!\u00a8sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0005a!\u009dppsq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001w\u0006\u001bq\u0000~\u0000\u000fpsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bx"
+"q\u0000~\u0000\u0003\u0001w\u0006\u0018q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen"
+".TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\b\u0003\u00ea\u001bgppsq\u0000~\u0000\u0016\u0003\u00ea\u001b\\q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00f6\u00ef\u0011ppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000"
+"~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004"
+"Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\b\u0018\u00e7iappsq\u0000~\u0000\b"
+"\u0017pc.ppsq\u0000~\u0000\b\u0015\u00f9\\\u00fbppsq\u0000~\u0000\b\u0014\u0082V\u00c8ppsq\u0000~\u0000\b\u0013\u000bP\u0095ppsq\u0000~\u0000\b\u0011\u0094Jbppsq\u0000~\u0000\b"
+"\u0010\u001dD/ppsq\u0000~\u0000\b\u000e\u00a6=\u00fcppsq\u0000~\u0000\b\r/7\u00c9ppsq\u0000~\u0000\b\u000b\u00b81\u0096ppsq\u0000~\u0000\b\nA+cppsq\u0000~\u0000\b"
+"\b\u00ca%0ppsq\u0000~\u0000\b\u0007S\u001e\u00fdppsq\u0000~\u0000\b\u0005\u00dc\u0018\u00cappsq\u0000~\u0000\b\u0004e\u0012\u0097ppsq\u0000~\u0000\b\u0002\u00ee\fdppsq\u0000~\u0000\n"
+"\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000"
+"\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Predq\u0000~"
+"\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.OrPred"
+"q\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.Tru"
+"ePredq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006"
+"\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.ge"
+"n.ExistsPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.zp"
+"att.jaxb.gen.JokerPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&pps"
+"q\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.s"
+"ourceforge.czt.z.jaxb.gen.Pred2Elementq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~"
+"\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000*net.sourceforge.czt.z.jaxb.gen.FactElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u0006"
+"1pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.QntPredElementq\u0000~"
+"\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.AndPre"
+"dElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb"
+".gen.ImpliesPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.cz"
+"t.z.jaxb.gen.FalsePredq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w"
+"\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourcefo"
+"rge.czt.z.jaxb.gen.ExprPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w"
+"\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007"
+"net.sourceforge.czt.oz.jaxb.gen.PromotedInitPredElementq\u0000~\u0000$"
+"sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.IffPredq"
+"\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.NegP"
+"redElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.ja"
+"xb.gen.ForallPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.c"
+"zt.z.jaxb.gen.MemPredElementq\u0000~\u0000$sq\u0000~\u0000\b\u0018\u00e7iappsq\u0000~\u0000\b\u0017pc.ppsq\u0000"
+"~\u0000\b\u0015\u00f9\\\u00fbppsq\u0000~\u0000\b\u0014\u0082V\u00c8ppsq\u0000~\u0000\b\u0013\u000bP\u0095ppsq\u0000~\u0000\b\u0011\u0094Jbppsq\u0000~\u0000\b\u0010\u001dD/ppsq\u0000"
+"~\u0000\b\u000e\u00a6=\u00fcppsq\u0000~\u0000\b\r/7\u00c9ppsq\u0000~\u0000\b\u000b\u00b81\u0096ppsq\u0000~\u0000\b\nA+cppsq\u0000~\u0000\b\b\u00ca%0ppsq\u0000"
+"~\u0000\b\u0007S\u001e\u00fdppsq\u0000~\u0000\b\u0005\u00dc\u0018\u00cappsq\u0000~\u0000\b\u0004e\u0012\u0097ppsq\u0000~\u0000\b\u0002\u00ee\fdppsq\u0000~\u0000\n\u0001w\u00061pp\u0000sq"
+"\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 q\u0000~\u0000Uq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000[q\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b"
+"\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q"
+"\u0000~\u0000aq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000gq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&"
+"ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000m"
+"q\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000sq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq"
+"\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000yq\u0000~\u0000"
+"$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u007fq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013"
+"\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u0085q\u0000~\u0000$sq\u0000"
+"~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u008bq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001b"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u0091q\u0000~\u0000$sq\u0000~\u0000\n\u0001"
+"w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u0097q\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u009dq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061p"
+"p\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000"
+"\u001fsq\u0000~\u0000 q\u0000~\u0000\u00a3q\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u00a9q\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq"
+"\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 q\u0000~\u0000\u00afq\u0000~\u0000$sq\u0000~\u0000\n\u0001w\u00061pp\u0000sq\u0000~\u0000\b\u0001w\u0006&ppsq\u0000~\u0000\u0013\u0001w\u0006\u001bq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0001w\u0006\u0018q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 q\u0000~\u0000\u00b5q\u0000~\u0000$sq\u0000~\u0000\b\u0002<\u00b7\u000bppsq\u0000~\u0000\u0016\u0002"
+"<\u00b7\u0000q\u0000~\u0000\u000fpsq\u0000~\u0000\'\u0001\u00b0\u00b0\u00b0ppsr\u0000)com.sun.msv.datatype.xsd.Enumeratio"
+"nFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0006valuest\u0000\u000fLjava/util/Set;xr\u00009com.sun.msv."
+"datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*"
+"com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFa"
+"cetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/data"
+"type/xsd/XSDatatypeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datat"
+"ype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000!xq\u0000~\u0000.q\u0000~\u0000?t\u0000\u0002Opsr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u00004\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001"
+"Z\u0000\risAlwaysValidxq\u0000~\u0000,q\u0000~\u00001t\u0000\u0006stringq\u0000~\u0001\'\u0001q\u0000~\u0001)t\u0000\u000benumeratio"
+"nsr\u0000\u0011java.util.HashSet\u00baD\u0085\u0095\u0096\u00b8\u00b74\u0003\u0000\u0000xpw\f\u0000\u0000\u0000\u0010?@\u0000\u0000\u0000\u0000\u0000\u0004t\u0000\u0002NLt\u0000\u0003And"
+"t\u0000\u0004Semit\u0000\u0005Chainxq\u0000~\u00007sq\u0000~\u00008q\u0000~\u0001%q\u0000~\u0000?sq\u0000~\u0000 t\u0000\u0002Opt\u0000\u0000q\u0000~\u0000\u001fsr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tt"
+"hresholdL\u0000\u0006parentq\u0000~\u00017[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expre"
+"ssion;xp\u0000\u0000\u0000m\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad"
+"\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fppppppppppppppppppppppppq\u0000~\u0000\u0005q\u0000~\u0000\u0010ppppppppppppppp"
+"ppppppq\u0000~\u0000\tppppppppppppppppq\u0000~\u0000@q\u0000~\u0000\u00b6ppppq\u0000~\u0000\u00c8q\u0000~\u0000\u00b2q\u0000~\u0000\u00acq\u0000~\u0000"
+"\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000~\u0000\u0094q\u0000~\u0000\u008eq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000~\u0000|q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000"
+"\u0099q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~\u0000uq\u0000~\u0000oq\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000Wq\u0000~\u0000"
+"Qq\u0000~\u0000\u0012q\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000jq\u0000~\u0000dq\u0000~\u0000^q\u0000~\u0000Xq\u0000~\u0000Rq\u0000~\u0000\u0015q\u0000~\u0000Lq\u0000~\u0000Hq\u0000~\u0000"
+"Dq\u0000~\u0000\u00c7q\u0000~\u0000\u00cdq\u0000~\u0000\u00ccq\u0000~\u0000\u00d2q\u0000~\u0000\u00d1q\u0000~\u0000\u00d7q\u0000~\u0000\u0007q\u0000~\u0000\u00d6q\u0000~\u0000\u00dcq\u0000~\u0000\u00dbq\u0000~\u0000\u00c2q\u0000~\u0000"
+"\u00e1q\u0000~\u0000\u00e0q\u0000~\u0000\u00e6q\u0000~\u0000\u00e5q\u0000~\u0000\u00ebq\u0000~\u0000\u00eaq\u0000~\u0000\u00f0q\u0000~\u0000\u00efq\u0000~\u0000\u00beq\u0000~\u0000\u00f5q\u0000~\u0000\u00f4q\u0000~\u0000\u00faq\u0000~\u0000"
+"\u00f9q\u0000~\u0000\u00ffq\u0000~\u0000\u00feq\u0000~\u0001\u0004q\u0000~\u0001\u0003q\u0000~\u0000\u00baq\u0000~\u0001\tq\u0000~\u0001\bq\u0000~\u0001\u000eq\u0000~\u0001\rq\u0000~\u0001\u0013q\u0000~\u0001\u0012q\u0000~\u0001"
+"\u0018q\u0000~\u0001\u0017ppppppppppppppppppq\u0000~\u0000Cq\u0000~\u0000\u00b9pppppq\u0000~\u0000Gq\u0000~\u0000\u00bdpppppq\u0000~\u0000Kq"
+"\u0000~\u0000\u00c1ppppq\u0000~\u0000\u0006q\u0000~\u0000Oq\u0000~\u0000\u00c5pppppppppppppppppppppppppppppq\u0000~\u0001\u001bppp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Bq\u0000~\u0000\u00b8pppppq\u0000~\u0000Fq\u0000"
+"~\u0000\u00bcpppppq\u0000~\u0000Jq\u0000~\u0000\u00c0pppppq\u0000~\u0000Nq\u0000~\u0000\u00c4ppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000%pppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Aq\u0000~\u0000\u00b7pp"
+"pppq\u0000~\u0000Eq\u0000~\u0000\u00bbpppppq\u0000~\u0000Iq\u0000~\u0000\u00bfpppppq\u0000~\u0000Mq\u0000~\u0000\u00c3ppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Op");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Op = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Op");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Op" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Op" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "Op");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Pred2Impl)net.sourceforge.czt.z.jaxb.gen.impl.AndPredImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Op");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
