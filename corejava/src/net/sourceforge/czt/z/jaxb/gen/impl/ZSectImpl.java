//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.02.13 at 10:27:41 GMT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class ZSectImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.SectImpl
    implements net.sourceforge.czt.z.jaxb.gen.ZSect, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Parent;
    protected java.lang.String _Name;
    protected com.sun.xml.bind.util.ListImpl _Para;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.ZSect.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getParent() {
        if (_Parent == null) {
            _Parent = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Parent;
    }

    public java.util.List getParent() {
        return _getParent();
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getPara() {
        if (_Para == null) {
            _Para = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Para;
    }

    public java.util.List getPara() {
        return _getPara();
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Parent == null)? 0 :_Parent.size());
        int idx3 = 0;
        final int len3 = ((_Para == null)? 0 :_Para.size());
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/zml", "Name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            net.sourceforge.czt.oz.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Parent");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_2 ++)), "Parent");
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parent.get(idx_3 ++)), "Parent");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_Para.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)), "Para");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Para");
                int idx_4 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx_4 ++)), "Para");
                context.endNamespaceDecls();
                int idx_5 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx_5 ++)), "Para");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)), "Para");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Parent == null)? 0 :_Parent.size());
        int idx3 = 0;
        final int len3 = ((_Para == null)? 0 :_Para.size());
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
            } else {
                idx1 += 1;
            }
        }
        while (idx3 != len3) {
            if (_Para.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)), "Para");
            } else {
                idx3 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Parent == null)? 0 :_Parent.size());
        int idx3 = 0;
        final int len3 = ((_Para == null)? 0 :_Para.size());
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_Parent.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Parent.get(idx1 ++)), "Parent");
            } else {
                idx1 += 1;
            }
        }
        while (idx3 != len3) {
            if (_Para.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Para.get(idx3 ++)), "Para");
            } else {
                idx3 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.ZSect.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsr"
+"\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv"
+".grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000 com.s"
+"un.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClas"
+"sq\u0000~\u0000\u000bxq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStri"
+"ngExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gra"
+"mmar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClas"
+"s\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpr"
+"ession\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.grammar.Sim"
+"pleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen.Term"
+"A.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~"
+"\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000"
+"\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.dataty"
+"pe.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Buil"
+"tinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concret"
+"eType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000~\u0000!L\u0000\nwhiteSpacet"
+"\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://"
+"www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xs"
+"d.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.dat"
+"atype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gr"
+"ammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u000fpsr\u0000"
+"\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fn"
+"amespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004typet\u0000)http://www.w3.or"
+"g/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sou"
+"rceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\'q\u0000~\u0000\u000fpsr\u0000#com.su"
+"n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxq\u0000~"
+"\u0000,q\u0000~\u00001t\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004\u0001q\u0000~\u00007sq\u0000~\u00008q\u0000~\u0000Eq\u0000~\u00001sq\u0000~\u0000\bpp"
+"sq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Nameq\u0000~\u0000?sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.z.jaxb.gen.Par"
+"entElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\npp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt"
+".z.jaxb.gen.Parentq\u0000~\u0000$sq\u0000~\u0000\bppsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000*q\u0000~\u0000:q\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000\u0006Parentq\u0000~\u0000?q\u0000~\u0000\u001fsq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\bq\u0000~\u0000\u000fpsq\u0000~\u0000\bq\u0000~\u0000\u000fpsq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.F"
+"reeParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.C"
+"onjParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.z.jaxb.gen.O"
+"ptempParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00005net.sourceforge.czt.z.jaxb.gen"
+".LatexMarkupParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00002net.sourceforge.czt.z.j"
+"axb.gen.UnparsedParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt"
+".z.jaxb.gen.NarrParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt"
+".oz.jaxb.gen.ClassParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000"
+"\u0013q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.c"
+"zt.z.jaxb.gen.AxParaElementq\u0000~\u0000$sq\u0000~\u0000\nq\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\bppsq\u0000~\u0000\u0013q"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt"
+".z.jaxb.gen.GivenParaElementq\u0000~\u0000$q\u0000~\u0000\u001fsr\u0000\"com.sun.msv.gramma"
+"r.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramma"
+"r/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expres"
+"sionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006par"
+"entt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000/\u0001pq\u0000~\u0000\tq\u0000~\u0000\u0010"
+"q\u0000~\u0000Wq\u0000~\u0000%q\u0000~\u0000Iq\u0000~\u0000Aq\u0000~\u0000^q\u0000~\u0000gq\u0000~\u0000\u0006q\u0000~\u0000kq\u0000~\u0000eq\u0000~\u0000cq\u0000~\u0000\u0005q\u0000~\u0000\u0015"
+"q\u0000~\u0000Rq\u0000~\u0000Zq\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000f"
+"q\u0000~\u0000bq\u0000~\u0000Oq\u0000~\u0000jq\u0000~\u0000hq\u0000~\u0000\u0012q\u0000~\u0000Qq\u0000~\u0000Yq\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~\u0000i"
+"q\u0000~\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q\u0000~\u0000\u009dq\u0000~\u0000dq\u0000~\u0000Nq\u0000~\u0000\u0007q\u0000~\u0000Mx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LatexMarkupPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  7 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LatexMarkupPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  4 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentElementImpl.class), 7, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("Parent" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  8 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  5 :
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  5 :
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  5 :
                        _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            eatText1(value);
                            state = 3;
                            return ;
                        case  8 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.SectImpl)net.sourceforge.czt.z.jaxb.gen.impl.ZSectImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  9 :
                            _getPara().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 10, value)));
                            return ;
                        case  7 :
                            state = 8;
                            continue outer;
                        case  5 :
                            _getParent().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParentImpl.class), 6, value)));
                            return ;
                        case  4 :
                            state = 7;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
