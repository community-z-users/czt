//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.05.10 at 09:41:23 NZST 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class ThetaExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.z.jaxb.gen.ThetaExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Stroke = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.ThetaExpr.class);
    }

    public java.util.List getStroke() {
        return _Stroke;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Stroke.size();
        super.serializeBody(context);
        while (idx1 != len1) {
            if (_Stroke.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Stroke.get(idx1 ++)), "Stroke");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Stroke");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Stroke.get(idx_0 ++)), "Stroke");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Stroke.get(idx_1 ++)), "Stroke");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Stroke.get(idx1 ++)), "Stroke");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Stroke.size();
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_Stroke.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Stroke.get(idx1 ++)), "Stroke");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Stroke.size();
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_Stroke.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Stroke.get(idx1 ++)), "Stroke");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.ThetaExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0012rv\u0098ppsq\u0000~\u0000\u0000\u0011C0+ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00efX\u009dppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00efX\u0092sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0003\u00efX\u0087ppsq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000K\u00d1\u007fq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000K\u00d1|q\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0003\u00a3\u0086\u00edp"
+"psq\u0000~\u0000\u0015\u0003\u00a3\u0086\u00e2q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00c3\t\u00a3ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\rS\u00d7\u0089ppsq\u0000~\u0000\u0007\r\b\u0005\u00f2ppsq\u0000~\u0000\u0007"
+"\f\u00bc4[ppsq\u0000~\u0000\u0007\fpb\u00c4ppsq\u0000~\u0000\u0007\f$\u0091-ppsq\u0000~\u0000\u0007\u000b\u00d8\u00bf\u0096ppsq\u0000~\u0000\u0007\u000b\u008c\u00ed\u00ffppsq\u0000~\u0000\u0007"
+"\u000bA\u001chppsq\u0000~\u0000\u0007\n\u00f5J\u00d1ppsq\u0000~\u0000\u0007\n\u00a9y:ppsq\u0000~\u0000\u0007\n]\u00a7\u00a3ppsq\u0000~\u0000\u0007\n\u0011\u00d6\fppsq\u0000~\u0000\u0007"
+"\t\u00c6\u0004uppsq\u0000~\u0000\u0007\tz2\u00deppsq\u0000~\u0000\u0007\t.aGppsq\u0000~\u0000\u0007\b\u00e2\u008f\u00b0ppsq\u0000~\u0000\u0007\b\u0096\u00be\u0019ppsq\u0000~\u0000\u0007"
+"\bJ\u00ec\u0082ppsq\u0000~\u0000\u0007\u0007\u00ff\u001a\u00ebppsq\u0000~\u0000\u0007\u0007\u00b3ITppsq\u0000~\u0000\u0007\u0007gw\u00bdppsq\u0000~\u0000\u0007\u0007\u001b\u00a6&ppsq\u0000~\u0000\u0007"
+"\u0006\u00cf\u00d4\u008fppsq\u0000~\u0000\u0007\u0006\u0084\u0002\u00f8ppsq\u0000~\u0000\u0007\u000681appsq\u0000~\u0000\u0007\u0005\u00ec_\u00cappsq\u0000~\u0000\u0007\u0005\u00a0\u008e3ppsq\u0000~\u0000\u0007"
+"\u0005T\u00bc\u009cppsq\u0000~\u0000\u0007\u0005\b\u00eb\u0005ppsq\u0000~\u0000\u0007\u0004\u00bd\u0019nppsq\u0000~\u0000\u0007\u0004qG\u00d7ppsq\u0000~\u0000\u0007\u0004%v@ppsq\u0000~\u0000\u0007"
+"\u0003\u00d9\u00a4\u00a9ppsq\u0000~\u0000\u0007\u0003\u008d\u00d3\u0012ppsq\u0000~\u0000\u0007\u0003B\u0001{ppsq\u0000~\u0000\u0007\u0002\u00f6/\u00e4ppsq\u0000~\u0000\u0007\u0002\u00aa^Mppsq\u0000~\u0000\u0007"
+"\u0002^\u008c\u00b6ppsq\u0000~\u0000\u0007\u0002\u0012\u00bb\u001fppsq\u0000~\u0000\u0007\u0001\u00c6\u00e9\u0088ppsq\u0000~\u0000\u0007\u0001{\u0017\u00f1ppsq\u0000~\u0000\u0007\u0001/FZppsq\u0000~\u0000\u0007"
+"\u0000\u00e3t\u00c3ppsq\u0000~\u0000\u0007\u0000\u0097\u00a3,ppsq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z"
+".jaxb.gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000"
+"\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourc"
+"eforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000"
+"\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExpr"
+"q\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.Pip"
+"eExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1"
+"|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.RefExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.cz"
+"t.z.jaxb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq"
+"\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.so"
+"urceforge.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp"
+"\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElemen"
+"tq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.Fo"
+"rallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb"
+".gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z."
+"jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt"
+".z.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000"
+"K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourcef"
+"orge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000"
+"~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000"
+"\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen."
+"SchExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt."
+"z.jaxb.gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000"
+"K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00007net.sourcef"
+"orge.czt.oz.jaxb.gen.PromotedAttrExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095p"
+"p\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000#s"
+"q\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.tcoz.jaxb.gen.Channe"
+"lExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z."
+"jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge."
+"czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008app"
+"sq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net."
+"sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K"
+"\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000("
+"net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq"
+"\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq"
+"\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen."
+"JokerExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.cz"
+"t.z.jaxb.gen.LambdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000"
+"K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourcef"
+"orge.czt.z.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000"
+"~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sou"
+"rceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq"
+"\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095p"
+"p\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K"
+"\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000"
+"~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.QntEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jax"
+"b.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.z"
+".jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000"
+"~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sou"
+"rceforge.czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq"
+"\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000"
+"~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.Impli"
+"esExprq\u0000~\u0000#sq\u0000~\u0000\u0007\u0001/Fhppsq\u0000~\u0000\u0012\u0001/F]q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001/FZq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0007\u0000\u00e3t\u00c3q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u0097\u00a3,q\u0000~\u0000\u000epsq\u0000~\u0000\t\u0000K\u00d1\u0095q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~"
+"\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sour"
+"ceforge.czt.z.jaxb.gen.InStrokeq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000"
+"K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+")net.sourceforge.czt.z.jaxb.gen.NextStrokeq\u0000~\u0000#sq\u0000~\u0000\t\u0000K\u00d1\u0095q\u0000~"
+"\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jaxb.gen.OutStrokeq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0000K\u00d1\u0095q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000K\u00d1\u008appsq\u0000~\u0000\u0012\u0000K\u00d1\u007fq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000K\u00d1|q\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.NumStro"
+"keElementq\u0000~\u0000#q\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$Cl"
+"osedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash"
+"\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u0097[\u0000\u0005tablet\u0000![Lco"
+"m/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u009a\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.gr"
+"ammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppppppppppppppppppppp"
+"ppppppppq\u0000~\u0000Gppppppppppq\u0000~\u0000Qppppppppppq\u0000~\u0000[ppppppppppq\u0000~\u0000epp"
+"pppppppppppppppppppppppppppppppppq\u0000~\u0000@ppppppppppq\u0000~\u0000Jppppppp"
+"pppq\u0000~\u0000Tppppppppppq\u0000~\u0000^ppppppppppq\u0000~\u0000hq\u0000~\u0001{pq\u0000~\u0001zppppppppppq"
+"\u0000~\u0001ypppppppppppppppppppppq\u0000~\u0000Cpppppppq\u0000~\u0000\u000fppq\u0000~\u0000Mppppppppppq"
+"\u0000~\u0000Wq\u0000~\u0001Eq\u0000~\u0001?q\u0000~\u00019q\u0000~\u00013q\u0000~\u0001-q\u0000~\u0001\'q\u0000~\u0001!q\u0000~\u0001\u001bq\u0000~\u0001\u0015q\u0000~\u0001\u000fq\u0000~\u0001Dq"
+"\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0001,q\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0000aq\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\bq\u0000~\u0001\tq"
+"\u0000~\u0001\u0002q\u0000~\u0001\u0003q\u0000~\u0000\u00fcq\u0000~\u0000\u00fdq\u0000~\u0000\u00f6q\u0000~\u0000\u00f7q\u0000~\u0000\u00f0q\u0000~\u0000\u00f1q\u0000~\u0000\u00eaq\u0000~\u0000\u00ebq\u0000~\u0000\u00e4q\u0000~\u0000\u00e5q"
+"\u0000~\u0000\u00deq\u0000~\u0000\u00dfq\u0000~\u0000\u00d8q\u0000~\u0000\u00d9q\u0000~\u0000\u00c1q\u0000~\u0000\u00c0q\u0000~\u0000\u00c7q\u0000~\u0000\u00c6q\u0000~\u0000\u00cdq\u0000~\u0000\u00ccq\u0000~\u0000\u00d3q\u0000~\u0000\u00d2q"
+"\u0000~\u0000\u0014q\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u0011q\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000~q\u0000~\u0000\u0084q\u0000~\u0000\u008aq\u0000~\u0000\u0090q"
+"\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0000\u00a8q\u0000~\u0000\u00aeq\u0000~\u0000\u00b4q\u0000~\u0000\u00baq\u0000~\u0000\u007fq\u0000~\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q"
+"\u0000~\u0000\u009dq\u0000~\u0000\u00a3q\u0000~\u0000\u00a9q\u0000~\u0000\u00afq\u0000~\u0000\u00b5q\u0000~\u0000\u00bbq\u0000~\u0000Pq\u0000~\u0000\bq\u0000~\u0000Zq\u0000~\u0001Kq\u0000~\u0001Jq\u0000~\u0000Fq"
+"\u0000~\u0001Qq\u0000~\u0001Pq\u0000~\u0001Wq\u0000~\u0001Vq\u0000~\u0001]q\u0000~\u0001\\q\u0000~\u0001cq\u0000~\u0000dq\u0000~\u0001bq\u0000~\u0001iq\u0000~\u0001hq\u0000~\u0001oq"
+"\u0000~\u0001nq\u0000~\u0001uq\u0000~\u0001tq\u0000~\u0001\u0080q\u0000~\u0001\u007fq\u0000~\u0001\u0086q\u0000~\u0001\u0085q\u0000~\u0001\u008cq\u0000~\u0001\u008bq\u0000~\u0001\u0092q\u0000~\u0001\u0091pppppp"
+"ppppppppppppppq\u0000~\u0000?ppppppppppq\u0000~\u0000Ippppppppppq\u0000~\u0000Sppppppppppq"
+"\u0000~\u0000]ppppppppppq\u0000~\u0000gpppppppppppppppppppppppppppppppppppq\u0000~\u0000Bp"
+"pppppppppq\u0000~\u0000Lppppppppppq\u0000~\u0000Vppppppppppq\u0000~\u0000`ppppppppppq\u0000~\u0000jq"
+"\u0000~\u0001}ppppppppppppppppppppppppppppppppppq\u0000~\u0000Eppppppppppq\u0000~\u0000Opp"
+"ppppppppq\u0000~\u0000Yppppppppppq\u0000~\u0000cppppppppppppppppppppppppq\u0000~\u0000\u0006ppp"
+"ppppppppppppppppppq\u0000~\u0000Hppppppppppq\u0000~\u0000Rppppppppppq\u0000~\u0000\\ppppppp"
+"pppq\u0000~\u0000fpppppppppppppppppppppppppppppppppppq\u0000~\u0000Appppppppppq\u0000"
+"~\u0000Kppppppppppq\u0000~\u0000Uppppppppppq\u0000~\u0000_ppppppppppq\u0000~\u0000iq\u0000~\u0001|ppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000\u0005ppppq\u0000~\u0000Dppppq\u0000~\u0000$pppppq\u0000~\u0000Nppppp"
+"pppppq\u0000~\u0000Xppppppppppq\u0000~\u0000bpppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("InStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.InStrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.InStrokeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NextStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.NextStrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NextStrokeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OutStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.OutStrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OutStrokeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.NumStrokeElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumStrokeElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Stroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Stroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.StrokeElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  2 :
                        if (("InStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.InStrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.InStrokeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NextStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.NextStrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NextStrokeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OutStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.OutStrokeImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OutStrokeImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumStroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.NumStrokeElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumStrokeElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Stroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        if (("Stroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.StrokeElementImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        if (("Stroke" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  2 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  2 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl.class), 4, ___uri, ___local, ___qname)));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  2 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            _Stroke.add(((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.StrokeImpl.class), 4, value)));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            state = 2;
                            continue outer;
                        case  2 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
