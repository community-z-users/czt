//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.11.04 at 10:24:55 GMT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class QntExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl
    implements net.sourceforge.czt.z.jaxb.gen.QntExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.SchText _SchText;
    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.QntExpr.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.SchText getSchText() {
        return _SchText;
    }

    public void setSchText(net.sourceforge.czt.z.jaxb.gen.SchText value) {
        _SchText = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_SchText instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "SchText");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
            context.endElement();
        }
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_SchText instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
        }
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_SchText instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
        }
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.QntExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0012\u0080n\u00d2ppsq\u0000~\u0000\u0000\u0004\u0086Q\u00f8ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00dfW\u00fdppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00dfW\u00f2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0002\u00dfW\u00e7ppsq\u0000~\u0000\t\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000O\u0083dq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000O\u0083aq\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0002\u008f\u00d4hp"
+"psq\u0000~\u0000\u0015\u0002\u008f\u00d4]q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00ec\u00cf\u00f7ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0001\u00a6\u00f9\u00f6ppsq\u0000~\u0000\t\u0000O\u0083zpp\u0000sq\u0000~\u0000"
+"\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000-net.sourceforge.czt.z.jaxb.gen.SchTextElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001"
+"Wvzpp\u0000sq\u0000~\u0000\u0000\u0001Wvoppsq\u0000~\u0000\t\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z"
+".jaxb.gen.SchTextq\u0000~\u0000#sq\u0000~\u0000\u0007\u0001\u0007\u00f2\u00f0ppsq\u0000~\u0000\u0015\u0001\u0007\u00f2\u00e5q\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000"
+"\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0007SchTextq\u0000~\u0000>sq\u0000~\u0000\u0007\r\u00fa\u001c\u00d5ppsq\u0000~\u0000\u0007\r\u00fa\u001c\u00caq"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0007\r\u00aa\u0099Nq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\r[\u0015\u00d2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\r\u000b\u0092Vq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\f"
+"\u00bc\u000e\u00daq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\fl\u008b^q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\f\u001d\u0007\u00e2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u000b\u00cd\u0084fq\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0007\u000b~\u0000\u00eaq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u000b.}nq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\n\u00de\u00f9\u00f2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\n\u008fvvq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0007\n?\u00f2\u00faq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\t\u00f0o~q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\t\u00a0\u00ec\u0002q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\tQh\u0086q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0007\t\u0001\u00e5\nq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\b\u00b2a\u008eq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\bb\u00de\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\b"
+"\u0013Z\u0096q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0007\u00c3\u00d7\u001aq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0007tS\u009eq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0007$\u00d0\"q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0007\u0006\u00d5L\u00a6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0006\u0085\u00c9*q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u00066E\u00aeq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0005\u00e6\u00c22q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0007\u0005\u0097>\u00b6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0005G\u00bb:q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0004\u00f87\u00beq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0004\u00a8\u00b4Bq"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0004Y0\u00c6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0004\t\u00adJq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0003\u00ba)\u00ceq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0003"
+"j\u00a6Rq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0003\u001b\"\u00d6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0002\u00cb\u009fZq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0002|\u001b\u00deq\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0007\u0002,\u0098bq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001\u00dd\u0014\u00e6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001\u008d\u0091jq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001>\r\u00eeq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0007\u0000\u00ee\u008arq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u009f\u0006\u00f6q\u0000~\u0000\u000epsq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083o"
+"ppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003ne"
+"t.sourceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jax"
+"b.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.c"
+"zt.z.jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000"
+"O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000"
+"O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000"
+"~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.z.jaxb.gen.B"
+"indSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083"
+"dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourcefor"
+"ge.czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~"
+"\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083z"
+"q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.CondExp"
+"rElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z."
+"jaxb.gen.RefExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000"
+"~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sou"
+"rceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000"
+"sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000#s"
+"q\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2"
+"NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z."
+"jaxb.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O"
+"\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourcefo"
+"rge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000"
+"O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+")net.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~"
+"\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprElementq"
+"\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.tcoz.jaxb.g"
+"en.ChannelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000"
+"\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourc"
+"eforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O"
+"\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/"
+"net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O"
+"\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~"
+"\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Ex"
+"pr1Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt."
+"z.jaxb.gen.BindExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083opp"
+"sq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net."
+"sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~"
+"\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprEleme"
+"ntq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O"
+"\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.g"
+"en.ImpliesExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00007net.sourceforge."
+"czt.oz.jaxb.gen.PromotedAttrExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O"
+"\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~"
+"\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.La"
+"mbdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z."
+"jaxb.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~"
+"\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sour"
+"ceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000"
+"O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000"
+"sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083"
+"zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000#s"
+"q\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.Exist"
+"s1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.ja"
+"xb.gen.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000"
+"\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourc"
+"eforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083"
+"oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-n"
+"et.sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq"
+"\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1Ex"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000O\u0083zq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000O\u0083oppsq\u0000~\u0000\u0012\u0000O\u0083dq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0000O\u0083aq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z"
+".jaxb.gen.SetCompExprq\u0000~\u0000#q\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar.Expre"
+"ssionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expre"
+"ssionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPoo"
+"l$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u008f[\u0000\u0005"
+"tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0095\u0000\u0000\u0000\u00e6pur\u0000![Lco"
+"m.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001"
+"\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0001\u0006q\u0000~\u0000\u00ffq\u0000~\u0001\u0000q\u0000~\u0000\u00f9q\u0000~\u0000Nq\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq\u0000~\u0000"
+"\u00eeq\u0000~\u0000\u00e7q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq\u0000~\u0000\u00dcq\u0000~\u0000\u0014q\u0000~\u0000Bq\u0000~\u0000Jq\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000"
+"\u008eq\u0000~\u0000\u0094q\u0000~\u0000|q\u0000~\u0000\u0011q\u0000~\u0000Aq\u0000~\u0000Iq\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000"
+"\u00a5q\u0000~\u0000\u00abq\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000~\u0000\u00c3q\u0000~\u0000\u00c9q\u0000~\u0000\u00cfq\u0000~\u0000\u00d5q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000"
+"\u00acq\u0000~\u0000\u00b2q\u0000~\u0000xq\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u00c4q\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0000\u00d6q\u0000~\u0000Gq\u0000~\u0000wq\u0000~\u0000{q\u0000~\u0000"
+"\u007fq\u0000~\u0000?q\u0000~\u0000vq\u0000~\u0000zq\u0000~\u0000~q\u0000~\u0000yq\u0000~\u0000}q\u0000~\u0001Nq\u0000~\u0000uq\u0000~\u0001Mq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0001"
+"Zq\u0000~\u0001Yq\u0000~\u0000tq\u0000~\u0000$q\u0000~\u0001`q\u0000~\u0001_q\u0000~\u0001fq\u0000~\u0001eq\u0000~\u0000sq\u0000~\u0001lq\u0000~\u0001kq\u0000~\u0001rq\u0000~\u0000"
+"\u000fq\u0000~\u0001qq\u0000~\u0000rq\u0000~\u0001xq\u0000~\u0001wq\u0000~\u0001~q\u0000~\u0001}q\u0000~\u0001\u0084q\u0000~\u0000qq\u0000~\u0001\u0083q\u0000~\u0001\u008aq\u0000~\u0001\u0089ppq\u0000"
+"~\u0000ppppppq\u0000~\u0000opq\u0000~\u0000\bpppq\u0000~\u0000npppppq\u0000~\u0000mpppppq\u0000~\u0000lpppppq\u0000~\u0000kppp"
+"ppq\u0000~\u0000jpppppq\u0000~\u0000ipppppq\u0000~\u0000hq\u0000~\u0000\u0006ppppq\u0000~\u0000gpppppq\u0000~\u0000fpppppq\u0000~\u0000"
+"epppppq\u0000~\u0000dpppppq\u0000~\u0000cpppppq\u0000~\u0000bpppppq\u0000~\u0000apppppq\u0000~\u0000`pppppq\u0000~\u0000"
+"_pppppq\u0000~\u0000^pppppq\u0000~\u0000]pppppq\u0000~\u0000\\pppppq\u0000~\u0000[pppppq\u0000~\u0000Zpppppq\u0000~\u0000"
+"Ypppppq\u0000~\u0000Xpppppq\u0000~\u0000Wpppppq\u0000~\u0000Vpppppq\u0000~\u0000Upppppq\u0000~\u0000Tppppppppp"
+"pq\u0000~\u0000Spppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppq"
+"\u0000~\u0001Hq\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001Gq"
+"\u0000~\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  2 :
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  2 :
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  2 :
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            state = 5;
                            continue outer;
                        case  2 :
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.QntExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  6 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
