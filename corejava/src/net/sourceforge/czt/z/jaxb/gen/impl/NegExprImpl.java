//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.12.24 at 11:29:45 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class NegExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.z.jaxb.gen.NegExpr, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.NegExpr.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "NegExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "NegExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.NegExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp2\u00c9\u00f3\u00dep"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u00042\u00c9\u00f3\u00d3ppsq\u0000~\u0000\u00071\u00bd\u00f7\u00c0ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0002JV\u00c5ppsq\u0000~\u0000\u0000\u0002JV\u00basr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0002JV\u00afppsq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsr\u0000 com.sun.msv"
+".grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001"
+"xq\u0000~\u0000\u0004\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssq\u0000~\u0000\u000b\u0001\u001a\u00a5\u00d9ppsq\u0000~\u0000\u0016\u0001\u001a\u00a5\u00ceq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"
+"q\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000\u00fa9\u00e7ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq"
+"\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004t"
+"ypet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\u000b/s\u00a0\u00f6ppsq\u0000~\u0000"
+"\u000b.C\u00f0#ppsq\u0000~\u0000\u000b-\u0014?Pppsq\u0000~\u0000\u000b+\u00e4\u008e}ppsq\u0000~\u0000\u000b*\u00b4\u00dd\u00aappsq\u0000~\u0000\u000b)\u0085,\u00d7ppsq\u0000~\u0000"
+"\u000b(U|\u0004ppsq\u0000~\u0000\u000b\'%\u00cb1ppsq\u0000~\u0000\u000b%\u00f6\u001a^ppsq\u0000~\u0000\u000b$\u00c6i\u008bppsq\u0000~\u0000\u000b#\u0096\u00b8\u00b8ppsq\u0000~\u0000"
+"\u000b\"g\u0007\u00e5ppsq\u0000~\u0000\u000b!7W\u0012ppsq\u0000~\u0000\u000b \u0007\u00a6?ppsq\u0000~\u0000\u000b\u001e\u00d7\u00f5lppsq\u0000~\u0000\u000b\u001d\u00a8D\u0099ppsq\u0000~\u0000"
+"\u000b\u001cx\u0093\u00c6ppsq\u0000~\u0000\u000b\u001bH\u00e2\u00f3ppsq\u0000~\u0000\u000b\u001a\u00192 ppsq\u0000~\u0000\u000b\u0018\u00e9\u0081Mppsq\u0000~\u0000\u000b\u0017\u00b9\u00d0zppsq\u0000~\u0000"
+"\u000b\u0016\u008a\u001f\u00a7ppsq\u0000~\u0000\u000b\u0015Zn\u00d4ppsq\u0000~\u0000\u000b\u0014*\u00be\u0001ppsq\u0000~\u0000\u000b\u0012\u00fb\r.ppsq\u0000~\u0000\u000b\u0011\u00cb\\[ppsq\u0000~\u0000"
+"\u000b\u0010\u009b\u00ab\u0088ppsq\u0000~\u0000\u000b\u000fk\u00fa\u00b5ppsq\u0000~\u0000\u000b\u000e<I\u00e2ppsq\u0000~\u0000\u000b\r\f\u0099\u000fppsq\u0000~\u0000\u000b\u000b\u00dc\u00e8<ppsq\u0000~\u0000"
+"\u000b\n\u00ad7ippsq\u0000~\u0000\u000b\t}\u0086\u0096ppsq\u0000~\u0000\u000b\bM\u00d5\u00c3ppsq\u0000~\u0000\u000b\u0007\u001e$\u00f0ppsq\u0000~\u0000\u000b\u0005\u00eet\u001dppsq\u0000~\u0000"
+"\u000b\u0004\u00be\u00c3Jppsq\u0000~\u0000\u000b\u0003\u008f\u0012wppsq\u0000~\u0000\u000b\u0002_a\u00a4ppsq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~"
+"\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sour"
+"ceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000"
+"\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000"
+"\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000"
+"\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elemen"
+"tq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~"
+"\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.Ne"
+"gExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0"
+"\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.ge"
+"n.MuExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb"
+".gen.ProdExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z"
+".jaxb.gen.ImpliesExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0"
+"\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourcefor"
+"ge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001"
+"/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"3net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000$sq\u0000"
+"~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprEle"
+"mentq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.z.jaxb.gen"
+".BindSelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge"
+".czt.z.jaxb.gen.TupleExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000"
+"\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourc"
+"eforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~"
+"\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000"
+"sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1"
+"pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000$sq\u0000~\u0000"
+"\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000$s"
+"q\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Ex"
+"prq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00002net.sourceforge.czt.z.jaxb.gen.T"
+"upleSelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge."
+"czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq"
+"\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.so"
+"urceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001"
+"/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1p"
+"p\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000"
+"\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000$sq\u0000~"
+"\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000"
+"~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprEleme"
+"ntq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.z.jaxb.gen.P"
+"owerExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb"
+".gen.LambdaExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge.czt"
+".z.jaxb.gen.Expr1Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013"
+"\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.source"
+"forge.czt.z.jaxb.gen.SetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq"
+"\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.so"
+"urceforge.czt.z.jaxb.gen.CondExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq"
+"\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000$sq\u0000"
+"~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.SetCompExpr"
+"q\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.z.jaxb.gen.The"
+"taExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z"
+".jaxb.gen.RefExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013"
+"\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.source"
+"forge.czt.z.jaxb.gen.CompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6pps"
+"q\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.s"
+"ourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0"
+"\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.n"
+"et.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1"
+"pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NE"
+"lementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001/"
+"\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.g"
+"en.ProjExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001/\u00b0\u00d1pp\u0000sq\u0000~\u0000\u000b\u0001/\u00b0\u00c6ppsq\u0000~\u0000\u0013\u0001/\u00b0\u00bbq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016\u0001/\u00b0\u00b8q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.j"
+"axb.gen.IffExprq\u0000~\u0000$sq\u0000~\u0000\u000b\u0001\u000b\u00fc\u000eppsq\u0000~\u0000\u0016\u0001\u000b\u00fc\u0003q\u0000~\u0000\u000fpq\u0000~\u0000*sq\u0000~\u0000 q"
+"\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0007NegExprq\u0000~\u0000?sr\u0000\"com.sun.msv.grammar.E"
+"xpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/E"
+"xpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressio"
+"nPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001"
+"][\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u007f\u0000\u0000\u0000\u00e6pur\u0000!"
+"[Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppppppp"
+"pq\u0000~\u0000]ppppppppppppq\u0000~\u0000Rppppppppppppq\u0000~\u0000Gpppppppppppppppppppp"
+"ppppppppppppppppppq\u0000~\u0000appppppppppppq\u0000~\u0000Vppppppppppppq\u0000~\u0000Kppp"
+"pppppppppq\u0000~\u0000@pppppppppppppppppppppppppq\u0000~\u0000eppppppppppppq\u0000~\u0000"
+"Zppppppppppppq\u0000~\u0000Oppppppppppppq\u0000~\u0000Dppppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000^ppppppppppppq\u0000~\u0000Sppppppppppppq\u0000~\u0000Hpppppppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0000bppppppppppppq\u0000~\u0000Wpppppppp"
+"ppppq\u0000~\u0000Lppppppppppppq\u0000~\u0000Apppppppppppppppppppppppppq\u0000~\u0000fpppp"
+"q\u0000~\u0000\u0010pppppppq\u0000~\u0000[ppppppppppq\u0000~\u0000\tpq\u0000~\u0000Pq\u0000~\u0000\fpppppppppppq\u0000~\u0000Ep"
+"pppppppppppppppppppppppppppppppppppppq\u0000~\u0000_ppppppppppppq\u0000~\u0000Tp"
+"pppppppppppq\u0000~\u0000Ippppppppppppppppppppppppppppppppppppppq\u0000~\u0000cp"
+"ppq\u0000~\u0000\nppppppppq\u0000~\u0000Xppppppppppppq\u0000~\u0000Mppppppppppppq\u0000~\u0000Bpppq\u0000~"
+"\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0001@q\u0000~"
+"\u0001:q\u0000~\u00014q\u0000~\u0001.q\u0000~\u0001(q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\nq\u0000~\u0001\u0004q\u0000~\u0000\u00feq\u0000~\u0000\u00ffq\u0000~"
+"\u0000%q\u0000~\u0000\u00f8q\u0000~\u0000\u00f9q\u0000~\u0000\u00f2q\u0000~\u0000\u00f3q\u0000~\u0000\u00ecq\u0000~\u0000\u00edq\u0000~\u0000\u00e6q\u0000~\u0000\u00e7q\u0000~\u0000\u00e0q\u0000~\u0000\u00e1q\u0000~\u0000\\q\u0000~"
+"\u0000\u00daq\u0000~\u0000\u00dbq\u0000~\u0000\u00d4q\u0000~\u0000\u00d5q\u0000~\u0000\u0015q\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~"
+"\u0000Qq\u0000~\u0000\u0012q\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~"
+"\u0000\u00a4q\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00bcq\u0000~\u0000\u00c2q\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~"
+"\u0000\u00abq\u0000~\u0000\u00b1q\u0000~\u0000\u00b7q\u0000~\u0000\u00bdq\u0000~\u0000\u00c3q\u0000~\u0000\u00c9q\u0000~\u0000\u00cfq\u0000~\u0000Fq\u0000~\u0001Gq\u0000~\u0001Fq\u0000~\u0001Mq\u0000~\u0001Lq\u0000~"
+"\u0001Sq\u0000~\u0001Rppppppppppppppq\u0000~\u0000`pppq\u0000~\u0001Wppppppppq\u0000~\u0000Uppppppppppppq"
+"\u0000~\u0000Jppppppppppppppppppppppppppppppppppppppq\u0000~\u0000dppppppppppppq"
+"\u0000~\u0000Yppppppppppppq\u0000~\u0000Nppppppppppppq\u0000~\u0000Cpppppppppppppppppppppp"
+"ppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
