//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.15 at 11:59:27 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class NegExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.z.jaxb.gen.NegExpr, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.NegExpr.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "NegExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "NegExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.NegExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u000b\u00e5\u00ab#p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u000b\u00e5\u00ab\u0018ppsq\u0000~\u0000\u0007\b\u00c1\u00f6\u00c8ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u00a4\u00d5tppsq\u0000~\u0000\u0000\u0001\u00a4\u00d5isr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0001\u00a4\u00d5^ppsq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000(x\u001dq\u0000~\u0000\u000fpsr\u0000 com.sun.msv"
+".grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001"
+"xq\u0000~\u0000\u0004\u0000(x\u001aq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssq\u0000~\u0000\u000b\u0001|]&ppsq\u0000~\u0000\u0016\u0001|]\u001bq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"
+"q\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0001[\u0001,ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq"
+"\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004t"
+"ypet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\u000b\u0007\u001d!Oppsq\u0000~\u0000"
+"\u000b\u0006\u00f4\u00a9\u001appsq\u0000~\u0000\u000b\u0006\u00cc0\u00e5ppsq\u0000~\u0000\u000b\u0006\u00a3\u00b8\u00b0ppsq\u0000~\u0000\u000b\u0006{@{ppsq\u0000~\u0000\u000b\u0006R\u00c8Fppsq\u0000~\u0000"
+"\u000b\u0006*P\u0011ppsq\u0000~\u0000\u000b\u0006\u0001\u00d7\u00dcppsq\u0000~\u0000\u000b\u0005\u00d9_\u00a7ppsq\u0000~\u0000\u000b\u0005\u00b0\u00e7rppsq\u0000~\u0000\u000b\u0005\u0088o=ppsq\u0000~\u0000"
+"\u000b\u0005_\u00f7\bppsq\u0000~\u0000\u000b\u00057~\u00d3ppsq\u0000~\u0000\u000b\u0005\u000f\u0006\u009eppsq\u0000~\u0000\u000b\u0004\u00e6\u008eippsq\u0000~\u0000\u000b\u0004\u00be\u00164ppsq\u0000~\u0000"
+"\u000b\u0004\u0095\u009d\u00ffppsq\u0000~\u0000\u000b\u0004m%\u00cappsq\u0000~\u0000\u000b\u0004D\u00ad\u0095ppsq\u0000~\u0000\u000b\u0004\u001c5`ppsq\u0000~\u0000\u000b\u0003\u00f3\u00bd+ppsq\u0000~\u0000"
+"\u000b\u0003\u00cbD\u00f6ppsq\u0000~\u0000\u000b\u0003\u00a2\u00cc\u00c1ppsq\u0000~\u0000\u000b\u0003zT\u008cppsq\u0000~\u0000\u000b\u0003Q\u00dcWppsq\u0000~\u0000\u000b\u0003)d\"ppsq\u0000~\u0000"
+"\u000b\u0003\u0000\u00eb\u00edppsq\u0000~\u0000\u000b\u0002\u00d8s\u00b8ppsq\u0000~\u0000\u000b\u0002\u00af\u00fb\u0083ppsq\u0000~\u0000\u000b\u0002\u0087\u0083Nppsq\u0000~\u0000\u000b\u0002_\u000b\u0019ppsq\u0000~\u0000"
+"\u000b\u00026\u0092\u00e4ppsq\u0000~\u0000\u000b\u0002\u000e\u001a\u00afppsq\u0000~\u0000\u000b\u0001\u00e5\u00a2zppsq\u0000~\u0000\u000b\u0001\u00bd*Eppsq\u0000~\u0000\u000b\u0001\u0094\u00b2\u0010ppsq\u0000~\u0000"
+"\u000b\u0001l9\u00dbppsq\u0000~\u0000\u000b\u0001C\u00c1\u00a6ppsq\u0000~\u0000\u000b\u0001\u001bIqppsq\u0000~\u0000\u000b\u0000\u00f2\u00d1<ppsq\u0000~\u0000\u000b\u0000\u00caY\u0007ppsq\u0000~\u0000"
+"\u000b\u0000\u00a1\u00e0\u00d2ppsq\u0000~\u0000\u000b\u0000yh\u009dppsq\u0000~\u0000\u000b\u0000P\u00f0hppsq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~"
+"\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sour"
+"ceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000"
+"(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+",net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3"
+"pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2El"
+"ementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x"
+"\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.SchExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.cz"
+"t.oz.jaxb.gen.ContainmentExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(pps"
+"q\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.s"
+"ourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x"
+"(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,n"
+"et.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp"
+"\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000("
+"x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000$sq\u0000"
+"~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq"
+"\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.Comp"
+"Exprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001a"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen"
+".SchExpr2Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.cz"
+"t.z.jaxb.gen.TupleExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000("
+"x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourcefo"
+"rge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(pp"
+"sq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net."
+"sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x"
+"(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000n"
+"et.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000("
+"x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprEleme"
+"ntq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.P"
+"ipeExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000"
+"(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.z.jaxb."
+"gen.ThetaExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001d"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforg"
+"e.czt.z.jaxb.gen.ProjExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000"
+"\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourc"
+"eforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x"
+"(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&n"
+"et.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000"
+"\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000$sq"
+"\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExpr"
+"q\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.Qnt"
+"ExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.z.j"
+"axb.gen.DecorExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013"
+"\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.source"
+"forge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x("
+"ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&ne"
+"t.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b"
+"\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t"
+"\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000"
+"sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000"
+"(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprEl"
+"ementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x"
+"\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.ge"
+"n.Qnt1ExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.c"
+"zt.z.jaxb.gen.RefExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq"
+"\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.so"
+"urceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000("
+"x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)"
+"net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000s"
+"q\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000$sq"
+"\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.tcoz.jaxb.gen.Channel"
+"ExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt.oz."
+"jaxb.gen.PromotedAttrExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x("
+"ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&ne"
+"t.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b"
+"\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t"
+"\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000"
+"(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001d"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElement"
+"q\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.Con"
+"dExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000(x3pp\u0000sq\u0000~\u0000\u000b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z."
+"jaxb.gen.ForallExprq\u0000~\u0000$sq\u0000~\u0000\u000b\u0003#\u00b4Kppsq\u0000~\u0000\u0016\u0003#\u00b4@q\u0000~\u0000\u000fpq\u0000~\u0000*sq\u0000"
+"~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0007NegExprq\u0000~\u0000?sr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parent"
+"q\u0000~\u0001\u0080[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u008e\u0000\u0000\u0000\u00e6p"
+"ur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Cq"
+"\u0000~\u0001vq\u0000~\u0001uq\u0000~\u0000\tppppppppppppppppppppppq\u0000~\u0000%ppppppppq\u0000~\u0000cq\u0000~\u0000Np"
+"ppppppppppppppppppppppppppppppppppq\u0000~\u0000Yq\u0000~\u0000Dpppppppppppppppp"
+"ppppppppppppppppppq\u0000~\u0000dq\u0000~\u0000Opppppppppppppppppppppppppppppq\u0000~"
+"\u0001zpppppq\u0000~\u0000Zq\u0000~\u0000Eppppppppppppppppppppppppppppppppppq\u0000~\u0000eq\u0000~\u0000"
+"Ppppppppppppppppppppppppppppppppppppq\u0000~\u0000[q\u0000~\u0000Fpppppppppppppp"
+"ppppppppppppppppppppq\u0000~\u0000fq\u0000~\u0000Qpppppppppppppppppppppppppppppp"
+"pppppq\u0000~\u0000\\q\u0000~\u0000Gppppppppppppppppppppppppppppppppppq\u0000~\u0000gq\u0000~\u0000Rp"
+"ppppppppppppppppppppppppppppppppppq\u0000~\u0000]q\u0000~\u0000Hpppppppppppppppp"
+"ppppppppppppppppppq\u0000~\u0000hq\u0000~\u0000Spppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0000^q\u0000~\u0000Ippppppppppppppppppppppppppppppppppq\u0000~\u0000iq\u0000~\u0000Tppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0000_q\u0000~\u0000Jpppppppppppppppppp"
+"pq\u0000~\u0000\nppppppppppppppq\u0000~\u0000jq\u0000~\u0000Uq\u0000~\u0000@ppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000`q\u0000~\u0000Kppppppppppppppppppppppppppppppppppq\u0000~\u0000kq\u0000"
+"~\u0000Vq\u0000~\u0000Appppppppppppppppppppppppppppppppppq\u0000~\u0000aq\u0000~\u0000Lpppppppp"
+"ppppq\u0000~\u0001Fq\u0000~\u0001@q\u0000~\u0001:q\u0000~\u00014q\u0000~\u0001.q\u0000~\u0001(q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\nq"
+"\u0000~\u0001Eq\u0000~\u0001?q\u0000~\u00019q\u0000~\u00013q\u0000~\u0001-q\u0000~\u0001\'q\u0000~\u0001!q\u0000~\u0001\u001bq\u0000~\u0001\u0015q\u0000~\u0001\u000fq\u0000~\u0001\tq\u0000~\u0001\u0003q"
+"\u0000~\u0001\u0004q\u0000~\u0000\u00fdq\u0000~\u0000\u00feq\u0000~\u0000\u00f7q\u0000~\u0000\u00f8q\u0000~\u0000\u00f1q\u0000~\u0000\u00f2q\u0000~\u0000\u00ebq\u0000~\u0000\u00ecq\u0000~\u0000\u00e5q\u0000~\u0000\u00e6q\u0000~\u0000\u00dfq"
+"\u0000~\u0000\u00e0q\u0000~\u0000\u00d9q\u0000~\u0000\u00daq\u0000~\u0000\u00ceq\u0000~\u0000\u00cdq\u0000~\u0000\u00d4q\u0000~\u0000\u00d3q\u0000~\u0000\u0015q\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q"
+"\u0000~\u0000\u0086q\u0000~\u0000\u0012q\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q\u0000~\u0000\u009dq\u0000~\u0000\u00a3q"
+"\u0000~\u0000\u00a9q\u0000~\u0000Mq\u0000~\u0000\u00afq\u0000~\u0000\u00b5q\u0000~\u0000\u00bbq\u0000~\u0000\u00c1q\u0000~\u0000\u00c7q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q"
+"\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00bcq\u0000~\u0000\fq\u0000~\u0000\u00c2q\u0000~\u0000\u00c8q\u0000~\u0000\u0010q\u0000~\u0000Wq\u0000~\u0000bq\u0000~\u0001Lq\u0000~\u0001Kq"
+"\u0000~\u0001Rq\u0000~\u0001Qq\u0000~\u0001Xq\u0000~\u0001Wq\u0000~\u0001^q\u0000~\u0001]q\u0000~\u0001dq\u0000~\u0001cq\u0000~\u0001jq\u0000~\u0001iq\u0000~\u0000Bq\u0000~\u0001pq"
+"\u0000~\u0001oq\u0000~\u0000X"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
