//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class TupleSelExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.z.jaxb.gen.TupleSelExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected java.lang.Integer _Select;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.TupleSelExpr.class);
    }

    public java.lang.Integer getSelect() {
        return _Select;
    }

    public void setSelect(java.lang.Integer value) {
        _Select = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startAttribute("", "Select");
        try {
            context.text(net.sourceforge.czt.base.util.CztDatatypeConverter.printInteger(((java.lang.Integer) _Select)), "Select");
        } catch (java.lang.Exception e) {
            net.sourceforge.czt.oz.jaxb.gen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.TupleSelExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0014\u00d7\u00ea\u00eeppsq\u0000~\u0000\u0000\u0012\u00b4\u0096]ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u0006\u00cb\u00a0ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u0006\u00cb\u0095sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0002\u0006\u00cb\u008appsq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000h$\u0012q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000h$\u000fq\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0001\u009e\u00a7]p"
+"psq\u0000~\u0000\u0015\u0001\u009e\u00a7Rq\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0014t\u00fappsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0010\u00ad\u00ca\u00b8ppsq\u0000~\u0000\u0007\u0010E\u00a6\u008eppsq\u0000~\u0000\u0007"
+"\u000f\u00dd\u0082dppsq\u0000~\u0000\u0007\u000fu^:ppsq\u0000~\u0000\u0007\u000f\r:\u0010ppsq\u0000~\u0000\u0007\u000e\u00a5\u0015\u00e6ppsq\u0000~\u0000\u0007\u000e<\u00f1\u00bcppsq\u0000~\u0000\u0007"
+"\r\u00d4\u00cd\u0092ppsq\u0000~\u0000\u0007\rl\u00a9hppsq\u0000~\u0000\u0007\r\u0004\u0085>ppsq\u0000~\u0000\u0007\f\u009ca\u0014ppsq\u0000~\u0000\u0007\f4<\u00eappsq\u0000~\u0000\u0007"
+"\u000b\u00cc\u0018\u00c0ppsq\u0000~\u0000\u0007\u000bc\u00f4\u0096ppsq\u0000~\u0000\u0007\n\u00fb\u00d0lppsq\u0000~\u0000\u0007\n\u0093\u00acBppsq\u0000~\u0000\u0007\n+\u0088\u0018ppsq\u0000~\u0000\u0007"
+"\t\u00c3c\u00eeppsq\u0000~\u0000\u0007\t[?\u00c4ppsq\u0000~\u0000\u0007\b\u00f3\u001b\u009appsq\u0000~\u0000\u0007\b\u008a\u00f7pppsq\u0000~\u0000\u0007\b\"\u00d3Fppsq\u0000~\u0000\u0007"
+"\u0007\u00ba\u00af\u001cppsq\u0000~\u0000\u0007\u0007R\u008a\u00f2ppsq\u0000~\u0000\u0007\u0006\u00eaf\u00c8ppsq\u0000~\u0000\u0007\u0006\u0082B\u009eppsq\u0000~\u0000\u0007\u0006\u001a\u001etppsq\u0000~\u0000\u0007"
+"\u0005\u00b1\u00faJppsq\u0000~\u0000\u0007\u0005I\u00d6 ppsq\u0000~\u0000\u0007\u0004\u00e1\u00b1\u00f6ppsq\u0000~\u0000\u0007\u0004y\u008d\u00ccppsq\u0000~\u0000\u0007\u0004\u0011i\u00a2ppsq\u0000~\u0000\u0007"
+"\u0003\u00a9Exppsq\u0000~\u0000\u0007\u0003A!Nppsq\u0000~\u0000\u0007\u0002\u00d8\u00fd$ppsq\u0000~\u0000\u0007\u0002p\u00d8\u00fappsq\u0000~\u0000\u0007\u0002\b\u00b4\u00d0ppsq\u0000~\u0000\u0007"
+"\u0001\u00a0\u0090\u00a6ppsq\u0000~\u0000\u0007\u00018l|ppsq\u0000~\u0000\u0007\u0000\u00d0HRppsq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000"
+"\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourc"
+"eforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp"
+"\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.z.jaxb.gen.TupleSel"
+"ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.z.j"
+"axb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000"
+"\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourc"
+"eforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dpps"
+"q\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.s"
+"ourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000s"
+"q\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000"
+"h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.SetComp"
+"Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000f"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen"
+".ForallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.j"
+"axb.gen.Expr1Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforg"
+"e.czt.z.jaxb.gen.NegExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012"
+"\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.source"
+"forge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000"
+"\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000s"
+"q\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$("
+"pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprEleme"
+"ntq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.M"
+"uExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$"
+"\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.ge"
+"n.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge."
+"czt.z.jaxb.gen.QntExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dpps"
+"q\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.s"
+"ourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000"
+"~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$("
+"pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.SchExpr"
+"Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000"
+"h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb."
+"gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge"
+".czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dp"
+"psq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net"
+".sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000s"
+"q\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExp"
+"rElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb"
+".gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt"
+".z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000"
+"~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sou"
+"rceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$"
+"\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'n"
+"et.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~"
+"\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000"
+"sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001es"
+"q\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.CondExprEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$"
+"\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.ge"
+"n.PipeExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.ja"
+"xb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge."
+"czt.z.jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000"
+"h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourcef"
+"orge.czt.z.jaxb.gen.CompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq"
+"\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.so"
+"urceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\u0015\u0002#T\u008cppsq\u0000~\u0000&\u0001V\u00a6\u00cep"
+"psr\u0000,com.sun.msv.datatype.xsd.PositiveIntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.s"
+"un.msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFace"
+"tst\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000+q\u0000~\u00000t\u0000\u000f"
+"positiveIntegerq\u0000~\u00004sr\u0000*com.sun.msv.datatype.xsd.MinInclusiv"
+"eFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.dat"
+"atype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com"
+".sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacet"
+"FixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0001bL\u0000\fconcreteTypet\u0000\'"
+"Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000 xq\u0000~"
+"\u0000-ppq\u0000~\u00004\u0000\u0000sr\u0000/com.sun.msv.datatype.xsd.NonNegativeIntegerTy"
+"pe\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0001`q\u0000~\u00000t\u0000\u0012nonNegativeIntegerq\u0000~\u00004sq\u0000~\u0001eppq\u0000"
+"~\u00004\u0000\u0000sq\u0000~\u0001`q\u0000~\u00000t\u0000\u0007integerq\u0000~\u00004sr\u0000,com.sun.msv.datatype.xsd."
+"FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.dataty"
+"pe.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0001ipp"
+"q\u0000~\u00004\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000+q\u0000~\u00000t\u0000\u0007decimalq\u0000~\u00004q\u0000~\u0001vt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0001pt\u0000\fmin"
+"Inclusivesr\u0000)com.sun.msv.datatype.xsd.IntegerValueType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0005valueq\u0000~\u0000 xr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xpt\u0000\u00010q\u0000~\u0001m"
+"q\u0000~\u0001ysq\u0000~\u0001zt\u0000\u00011q\u0000~\u00006sq\u0000~\u00007q\u0000~\u0001dq\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0006Selectt\u0000\u0000sr\u0000\"co"
+"m.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lco"
+"m/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.ms"
+"v.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthr"
+"esholdL\u0000\u0006parentq\u0000~\u0001\u0085[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Express"
+"ion;xp\u0000\u0000\u0000\u0081\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n"
+"\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Apppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppq\u0000~\u0000Dq\u0000~\u0000Qq\u0000~\u0000^ppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppq\u0000~\u0000Gq\u0000~\u0000Tq\u0000~\u0000apppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000dq\u0000~\u0000\u000fpppppppp"
+"pppppppppppppq\u0000~\u0000\bpppppppppppq\u0000~\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q"
+"\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0001:q\u0000~\u00014q\u0000~\u0001.q\u0000~\u0001(q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q"
+"\u0000~\u0001\u0010q\u0000~\u0001\nq\u0000~\u0001\u0004q\u0000~\u0000\u00feq\u0000~\u0000Mq\u0000~\u0000\u00ffq\u0000~\u0000\u00f8q\u0000~\u0000\u00f9q\u0000~\u0000\u00f2q\u0000~\u0000\u00f3q\u0000~\u0000\u00ecq\u0000~\u0000\u00edq"
+"\u0000~\u0000\u00e6q\u0000~\u0000\u00e7q\u0000~\u0000\u00e0q\u0000~\u0000\u00e1q\u0000~\u0000\u00daq\u0000~\u0000\u00dbq\u0000~\u0000\u00d4q\u0000~\u0000\u00d5q\u0000~\u0000\u0092q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a5q"
+"\u0000~\u0000Zq\u0000~\u0000\u00a4q\u0000~\u0000\u00abq\u0000~\u0000\u00aaq\u0000~\u0000\u00b1q\u0000~\u0000\u00b0q\u0000~\u0000\u00b7q\u0000~\u0000\u00b6q\u0000~\u0000\u00bdq\u0000~\u0000\u00bcq\u0000~\u0000\u00c3q\u0000~\u0000\u00c2q"
+"\u0000~\u0000\u00c9q\u0000~\u0000\u00c8q\u0000~\u0000\u00cfq\u0000~\u0000\u00ceq\u0000~\u0000\u0011q\u0000~\u0000hq\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq"
+"\u0000~\u0000\u0014q\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0001@q"
+"\u0000~\u0001Gq\u0000~\u0001Fq\u0000~\u0001Mq\u0000~\u0000Pq\u0000~\u0000]q\u0000~\u0000Cq\u0000~\u0001Lq\u0000~\u0001Sq\u0000~\u0001Rq\u0000~\u0000@q\u0000~\u0001Yq\u0000~\u0001Xq"
+"\u0000~\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Fq\u0000"
+"~\u0000Sq\u0000~\u0000`pppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppq\u0000~\u0000Iq\u0000~\u0000Vq\u0000~\u0000cppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppq\u0000~\u0000Lq\u0000~\u0000Yq\u0000~\u0000fq\u0000~\u0000?ppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0000Oq\u0000~\u0000\\q\u0000~\u0000Bppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000_pppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Hq\u0000~"
+"\u0000Uq\u0000~\u0000bpppppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppppppppppppppppp"
+"pppppppq\u0000~\u0000Kq\u0000~\u0000Xq\u0000~\u0000eq\u0000~\u0000$ppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000Nq\u0000~\u0000["));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Select");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Select = net.sourceforge.czt.base.util.CztDatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Select");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("Select" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Select" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, ___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "Select");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprImpl.this).new Unmarshaller(context)), 4, value);
                            return ;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "Select");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
