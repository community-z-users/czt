//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class Expr2NImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl
    implements net.sourceforge.czt.z.jaxb.gen.Expr2N, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.Expr2N.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.Expr2N.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0013\'+\u00bdppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002y`\u00f2ppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002y`"
+"\u00e7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002y`\u00dcppsq"
+"\u0000~\u0000\b\u0000h$(pp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000h$\u0012q\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0000h$\u000fq\u0000~\u0000\rpsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+http:/"
+"/java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006\u0002\u0011<\u00afppsq\u0000~\u0000\u0014\u0002\u0011<\u00a4q"
+"\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0014t\u00fappsr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fname"
+"spaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp://czt.source"
+"forge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u0006\u0010\u00ad\u00ca\u00c6ppsq\u0000~\u0000\u0011\u0010\u00ad\u00ca\u00bbq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0010\u00ad\u00ca\u00b8q\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0006\u0010E\u00a6\u008eq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000f\u00dd\u0082dq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000fu^:q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000f\r:\u0010"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000e\u00a5\u0015\u00e6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000e<\u00f1\u00bcq\u0000~\u0000\rpsq\u0000~\u0000\u0006\r\u00d4\u00cd\u0092q\u0000~\u0000\rpsq\u0000~\u0000\u0006"
+"\rl\u00a9hq\u0000~\u0000\rpsq\u0000~\u0000\u0006\r\u0004\u0085>q\u0000~\u0000\rpsq\u0000~\u0000\u0006\f\u009ca\u0014q\u0000~\u0000\rpsq\u0000~\u0000\u0006\f4<\u00eaq\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0006\u000b\u00cc\u0018\u00c0q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000bc\u00f4\u0096q\u0000~\u0000\rpsq\u0000~\u0000\u0006\n\u00fb\u00d0lq\u0000~\u0000\rpsq\u0000~\u0000\u0006\n\u0093\u00acBq\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0006\n+\u0088\u0018q\u0000~\u0000\rpsq\u0000~\u0000\u0006\t\u00c3c\u00eeq\u0000~\u0000\rpsq\u0000~\u0000\u0006\t[?\u00c4q\u0000~\u0000\rpsq\u0000~\u0000\u0006\b\u00f3\u001b\u009a"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0006\b\u008a\u00f7pq\u0000~\u0000\rpsq\u0000~\u0000\u0006\b\"\u00d3Fq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0007\u00ba\u00af\u001cq\u0000~\u0000\rpsq\u0000~\u0000\u0006"
+"\u0007R\u008a\u00f2q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0006\u00eaf\u00c8q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0006\u0082B\u009eq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0006\u001a\u001etq\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0006\u0005\u00b1\u00faJq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0005I\u00d6 q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0004\u00e1\u00b1\u00f6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0004y\u008d\u00ccq\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0006\u0004\u0011i\u00a2q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0003\u00a9Exq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0003A!Nq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0002\u00d8\u00fd$"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0002p\u00d8\u00faq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0002\b\u00b4\u00d0q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0001\u00a0\u0090\u00a6q\u0000~\u0000\rpsq\u0000~\u0000\u0006"
+"\u00018l|q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0000\u00d0HRq\u0000~\u0000\rpsq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000"
+"\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourc"
+"eforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000"
+"~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000"
+"\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000"
+"\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.gen.OrE"
+"xprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000"
+"h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00002net.sourceforge.czt.z.jaxb."
+"gen.TupleSelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000"
+"~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sou"
+"rceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000"
+"\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\b"
+"\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprEl"
+"ementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jax"
+"b.gen.LambdaExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforg"
+"e.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001d"
+"ppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*ne"
+"t.sourceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\r"
+"p\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000\"sq\u0000~"
+"\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Ele"
+"mentq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014"
+"\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb"
+".gen.NegExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.cz"
+"t.z.jaxb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$"
+"\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&n"
+"et.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000s"
+"q\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq"
+"\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$("
+"q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~"
+"\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.ja"
+"xb.gen.MuExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~"
+"\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge.c"
+"zt.z.jaxb.gen.DecorExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h"
+"$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-"
+"net.sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$("
+"q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq"
+"\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq"
+"\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.jaxb.gen."
+"PowerExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z"
+".jaxb.gen.RefExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq"
+"\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.so"
+"urceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp"
+"\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000\""
+"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.Appl"
+"ExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\r"
+"psq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt"
+".z.jaxb.gen.Expr2NElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dpps"
+"q\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.s"
+"ourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000"
+"\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprElement"
+"q\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000f"
+"q\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen"
+".ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\r"
+"psq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt"
+".z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dp"
+"psq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net"
+".sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000s"
+"q\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq"
+"\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$"
+"(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000\"s"
+"q\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb.gen.NumEx"
+"prElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rps"
+"q\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z"
+".jaxb.gen.CondExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dpps"
+"q\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.s"
+"ourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~"
+"\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$"
+"(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000\""
+"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000h$\u000fq\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.Comp"
+"Exprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000h$(q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000h$\u001dppsq\u0000~\u0000\u0011\u0000h$\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0014"
+"\u0000h$\u000fq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb"
+".gen.IffExprq\u0000~\u0000\"q\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool"
+"$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedH"
+"ash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001_[\u0000\u0005tablet\u0000!["
+"Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0082\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv"
+".grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Bpppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Eq\u0000~\u0000Rq\u0000~\u0000_ppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Hq\u0000~\u0000Uq"
+"\u0000~\u0000bpppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000Kq\u0000~\u0000Xq\u0000~\u0000eppppppppppppppppppppppppppppppppppq\u0000~\u00016q\u0000~\u00010q"
+"\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0000\u00faq\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q"
+"\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0001\u0005q\u0000~\u0000\u00ffq\u0000~\u0000\u00f9q\u0000~\u0000Nq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq"
+"\u0000~\u0000\u00eeq\u0000~\u0000\u00e7q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq\u0000~\u0000\u00dcq\u0000~\u0000\u00d5q\u0000~\u0000\u00d6q\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq"
+"\u0000~\u0000\u00a6q\u0000~\u0000\u00a5q\u0000~\u0000[q\u0000~\u0000\u00acq\u0000~\u0000\u00abq\u0000~\u0000\u00b2q\u0000~\u0000\u00b1q\u0000~\u0000\u00b8q\u0000~\u0000\u00b7q\u0000~\u0000\u00beq\u0000~\u0000\u00bdq\u0000~\u0000\u00c4q"
+"\u0000~\u0000\u00c3q\u0000~\u0000\u00caq\u0000~\u0000\u00c9q\u0000~\u0000\u00d0q\u0000~\u0000\u00cfq\u0000~\u0000\u0010q\u0000~\u0000iq\u0000~\u0000oq\u0000~\u0000uq\u0000~\u0000{q\u0000~\u0000\u0081q\u0000~\u0000\u0087q"
+"\u0000~\u0000\u008dq\u0000~\u0000\u0013q\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q"
+"\u0000~\u0001Aq\u0000~\u0001Bq\u0000~\u0001;q\u0000~\u0001<q\u0000~\u0001Hq\u0000~\u0001Gq\u0000~\u0001Nq\u0000~\u0000Qq\u0000~\u0000^q\u0000~\u0000Dq\u0000~\u0001Mq\u0000~\u0001Tq"
+"\u0000~\u0001Sq\u0000~\u0000Aq\u0000~\u0001Zq\u0000~\u0001Yppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppppp"
+"q\u0000~\u0000#ppppppppppppq\u0000~\u0000Gq\u0000~\u0000Tq\u0000~\u0000apppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppq\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000dppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Mq\u0000~\u0000Zq\u0000~\u0000gq\u0000~\u0000@q"
+"\u0000~\u0000?pppppppppq\u0000~\u0000>pppppppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000Pq\u0000~\u0000]q\u0000~\u0000Cppppppppppppppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0000\u000epppppppppq\u0000~\u0000Fq\u0000~\u0000Sq\u0000~\u0000`pppppppppq\u0000~\u0000\u0007pppppppppppppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0000Iq\u0000~\u0000Vq\u0000~\u0000cppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Lq\u0000~\u0000Yq\u0000~\u0000fpp"
+"ppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Oq"
+"\u0000~\u0000\\"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
