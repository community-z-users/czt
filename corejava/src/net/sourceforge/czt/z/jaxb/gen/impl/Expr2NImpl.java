//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.11.04 at 10:24:55 GMT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class Expr2NImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl
    implements net.sourceforge.czt.z.jaxb.gen.Expr2N, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.Expr2N.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.Expr2N.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000ftt(ppsr\u0000\u001dcom.sun.msv.gra"
+"mmar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001zWKppsr\u0000\'com.sun.msv.grammar"
+".trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/g"
+"rammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001zW"
+"@sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001zW5ppsq"
+"\u0000~\u0000\b\u0000O\u0083zpp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq"
+"\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000O\u0083dq\u0000~\u0000\rpsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003\u0000O\u0083aq\u0000~\u0000\rpsr\u00002com.s"
+"un.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\f\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.s"
+"un.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
+"\u0000\u0000\u0000\tq\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001fxq\u0000"
+"~\u0000\u001at\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+http:/"
+"/java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0006\u0001*\u00d3\u00b6ppsq\u0000~\u0000\u0014\u0001*\u00d3\u00abq"
+"\u0000~\u0000\rpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/"
+"relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/m"
+"sv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u00ec\u00cf\u00f7ppsr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtom"
+"icType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/"
+"sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3."
+"org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.White"
+"SpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.x"
+"sd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\rpsr\u0000\u001bco"
+"m.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fname"
+"spaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et\u0000\u0004typet\u0000)http://www.w3.org/2"
+"001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\u0004Annst\u0000\u001ehttp://czt.source"
+"forge.net/zmlq\u0000~\u0000\u001dsq\u0000~\u0000\u0006\r\u00fa\u001c\u00d8ppsq\u0000~\u0000\u0011\r\u00fa\u001c\u00cdq\u0000~\u0000\rpsq\u0000~\u0000\u0006\r\u00fa\u001c\u00caq\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0006\r\u00aa\u0099Nq\u0000~\u0000\rpsq\u0000~\u0000\u0006\r[\u0015\u00d2q\u0000~\u0000\rpsq\u0000~\u0000\u0006\r\u000b\u0092Vq\u0000~\u0000\rpsq\u0000~\u0000\u0006\f\u00bc\u000e\u00da"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0006\fl\u008b^q\u0000~\u0000\rpsq\u0000~\u0000\u0006\f\u001d\u0007\u00e2q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000b\u00cd\u0084fq\u0000~\u0000\rpsq\u0000~\u0000\u0006"
+"\u000b~\u0000\u00eaq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u000b.}nq\u0000~\u0000\rpsq\u0000~\u0000\u0006\n\u00de\u00f9\u00f2q\u0000~\u0000\rpsq\u0000~\u0000\u0006\n\u008fvvq\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0006\n?\u00f2\u00faq\u0000~\u0000\rpsq\u0000~\u0000\u0006\t\u00f0o~q\u0000~\u0000\rpsq\u0000~\u0000\u0006\t\u00a0\u00ec\u0002q\u0000~\u0000\rpsq\u0000~\u0000\u0006\tQh\u0086q\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0006\t\u0001\u00e5\nq\u0000~\u0000\rpsq\u0000~\u0000\u0006\b\u00b2a\u008eq\u0000~\u0000\rpsq\u0000~\u0000\u0006\bb\u00de\u0012q\u0000~\u0000\rpsq\u0000~\u0000\u0006\b\u0013Z\u0096"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0007\u00c3\u00d7\u001aq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0007tS\u009eq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0007$\u00d0\"q\u0000~\u0000\rpsq\u0000~\u0000\u0006"
+"\u0006\u00d5L\u00a6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0006\u0085\u00c9*q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u00066E\u00aeq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0005\u00e6\u00c22q\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0006\u0005\u0097>\u00b6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0005G\u00bb:q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0004\u00f87\u00beq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0004\u00a8\u00b4Bq\u0000~\u0000"
+"\rpsq\u0000~\u0000\u0006\u0004Y0\u00c6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0004\t\u00adJq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0003\u00ba)\u00ceq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0003j\u00a6R"
+"q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0003\u001b\"\u00d6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0002\u00cb\u009fZq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0002|\u001b\u00deq\u0000~\u0000\rpsq\u0000~\u0000\u0006"
+"\u0002,\u0098bq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0001\u00dd\u0014\u00e6q\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0001\u008d\u0091jq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0001>\r\u00eeq\u0000~\u0000\rpsq"
+"\u0000~\u0000\u0006\u0000\u00ee\u008arq\u0000~\u0000\rpsq\u0000~\u0000\u0006\u0000\u009f\u0006\u00f6q\u0000~\u0000\rpsq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083opps"
+"q\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00003net.s"
+"ourceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083"
+"zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprEleme"
+"ntq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O"
+"\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.g"
+"en.PreExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rp"
+"sq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00000net.sourceforge.czt."
+"z.jaxb.gen.RenameExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083o"
+"ppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&ne"
+"t.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq"
+"\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083z"
+"q\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000\""
+"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\r"
+"pq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00001net.sourceforge.czt.z.jaxb.gen.Bind"
+"SelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000"
+"~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net.sourceforge."
+"czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000"
+"O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000"
+")net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~"
+"\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001dsq\u0000~\u0000\u001et\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000\"sq\u0000~\u0000\b"
+"\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.CondExprEl"
+"ementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jax"
+"b.gen.RefExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011"
+"\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.source"
+"forge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000"
+"~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000\"sq\u0000~"
+"\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NEl"
+"ementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.jax"
+"b.gen.PowerExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq"
+"\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge"
+".czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083o"
+"ppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)ne"
+"t.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp"
+"\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000"
+"\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000"
+"\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00004net.sourceforge.czt.tcoz.jaxb.gen."
+"ChannelExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O"
+"\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourcefo"
+"rge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083op"
+"psq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000/net"
+".sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq"
+"\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000\"s"
+"q\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1"
+"Elementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000"
+"~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.j"
+"axb.gen.BindExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000"
+"~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sou"
+"rceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp"
+"\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001d"
+"sq\u0000~\u0000\u001et\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq"
+"\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq"
+"\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb.gen."
+"ImpliesExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\r"
+"psq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u00007net.sourceforge.czt"
+".oz.jaxb.gen.PromotedAttrExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq"
+"\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000"
+"~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq"
+"\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000\"s"
+"q\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rp"
+"q\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000)net.sourceforge.czt.z.jaxb.gen.Lambd"
+"aExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000"
+"\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000,net.sourceforge.czt.z.jax"
+"b.gen.Expr0NElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000"
+"O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourcef"
+"orge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083o"
+"ppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000%ne"
+"t.sourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000"
+"~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~"
+"\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000"
+"~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq"
+"\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000\"sq\u0000~"
+"\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~"
+"\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1E"
+"xprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000"
+"O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net.sourceforge.czt.z.jaxb."
+"gen.SchExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O"
+"\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000&net.sourcefo"
+"rge.czt.z.jaxb.gen.LetExprq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083opp"
+"sq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000-net."
+"sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000"
+"\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001dsq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000\"sq\u0000~\u0000"
+"\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000"
+"\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprE"
+"lementq\u0000~\u0000\"sq\u0000~\u0000\b\u0000O\u0083zq\u0000~\u0000\rp\u0000sq\u0000~\u0000\u0006\u0000O\u0083oppsq\u0000~\u0000\u0011\u0000O\u0083dq\u0000~\u0000\rpsq\u0000~"
+"\u0000\u0014\u0000O\u0083aq\u0000~\u0000\rpq\u0000~\u0000\u0017q\u0000~\u0000\u001bq\u0000~\u0000\u001dsq\u0000~\u0000\u001et\u0000*net.sourceforge.czt.z.ja"
+"xb.gen.SetCompExprq\u0000~\u0000\"q\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.Expressi"
+"onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
+"onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
+"losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001{[\u0000\u0005tab"
+"let\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u008e\u0000\u0000\u0000\u00e6pur\u0000![Lcom.s"
+"un.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0001\u001bq\u0000~\u0001\u0015q\u0000~\u0001\u000fq\u0000"
+"~\u0001\tq\u0000~\u0001\u0003q\u0000~\u0001\u0004q\u0000~\u0000\u00fdq\u0000~\u0000\u00feq\u0000~\u0000\u00f7q\u0000~\u0000\u00f8q\u0000~\u0000\u00f1q\u0000~\u0000\u00f2q\u0000~\u0000\u00ebq\u0000~\u0000\u00ecq\u0000~\u0000\u00e5q\u0000"
+"~\u0000\u00e6q\u0000~\u0000\u00dfq\u0000~\u0000\u00e0q\u0000~\u0000\u00d9q\u0000~\u0000\u00daq\u0000~\u0000\u0013q\u0000~\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000"
+"~\u0000\u0092q\u0000~\u0000\u0010q\u0000~\u0000hq\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q\u0000~\u0000\u009dq\u0000"
+"~\u0000\u00a3q\u0000~\u0000\u00a9q\u0000~\u0000\u00afq\u0000~\u0000\u00b5q\u0000~\u0000\u00bbq\u0000~\u0000\u00c1q\u0000~\u0000\u00c7q\u0000~\u0000\u00cdq\u0000~\u0000\u00d3q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q\u0000"
+"~\u0000\u00aaq\u0000~\u0000dq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00bcq\u0000~\u0000\u00c2q\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~\u0000\u00d4q\u0000~\u0000cq\u0000~\u0000gq\u0000~\u0000kq\u0000"
+"~\u0000fq\u0000~\u0000bq\u0000~\u0000jq\u0000~\u0000eq\u0000~\u0000iq\u0000~\u0001Lq\u0000~\u0001Kq\u0000~\u0000aq\u0000~\u0001Rq\u0000~\u0001Qq\u0000~\u0001Xq\u0000~\u0001Wq\u0000"
+"~\u0001^q\u0000~\u0000`q\u0000~\u0001]q\u0000~\u0001dq\u0000~\u0001cq\u0000~\u0001jq\u0000~\u0001iq\u0000~\u0000_q\u0000~\u0001pq\u0000~\u0001oq\u0000~\u0001vq\u0000~\u0001upq"
+"\u0000~\u0000^pppppq\u0000~\u0000]pppppq\u0000~\u0000\\pppppq\u0000~\u0000[pppppq\u0000~\u0000Zppq\u0000~\u0000#ppq\u0000~\u0000Ypp"
+"pppq\u0000~\u0000Xq\u0000~\u0000\u000eppppq\u0000~\u0000Wpppppq\u0000~\u0000Vpppppq\u0000~\u0000Upppq\u0000~\u0000\u0007pq\u0000~\u0000Tpppp"
+"pq\u0000~\u0000Spppppq\u0000~\u0000Rpppppq\u0000~\u0000Qpppppq\u0000~\u0000Ppppppq\u0000~\u0000Opppppq\u0000~\u0000Npppp"
+"pq\u0000~\u0000Mpppppq\u0000~\u0000Lpppppq\u0000~\u0000Kpppppq\u0000~\u0000Jpppppq\u0000~\u0000Ipppppq\u0000~\u0000Hpppp"
+"pq\u0000~\u0000Gpppppq\u0000~\u0000Fpppppq\u0000~\u0000Epppppq\u0000~\u0000Dpppppq\u0000~\u0000Cpppppq\u0000~\u0000Bpppp"
+"pq\u0000~\u0000Apppppq\u0000~\u0000@ppq\u0000~\u0000?ppppppppppq\u0000~\u0000>pppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppq\u0000~\u0000\u0005ppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppq\u0000~\u0001Fq\u0000~\u0001@q\u0000~\u0001:q\u0000~\u00014q\u0000~\u0001.q\u0000~\u0001(q\u0000"
+"~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\nq\u0000~\u0001Eq\u0000~\u0001?q\u0000~\u00019q\u0000~\u00013q\u0000~\u0001-q\u0000~\u0001\'q\u0000~\u0001!"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
