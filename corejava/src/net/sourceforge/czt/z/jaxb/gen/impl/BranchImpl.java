//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.29 at 12:59:34 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class BranchImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.z.jaxb.gen.Branch, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _DeclName;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.Branch.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getDeclName() {
        return _DeclName;
    }

    public void setDeclName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _DeclName = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endElement();
        }
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.Branch.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpZ\u00ee\u00db_ppsq\u0000~\u0000\u0000\f\u0011K\u00a9ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0005\u00d8Y\u001cppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0005\u00d8Y\u0011sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0005\u00d8Y\u0006ppsq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001\u00f8\u00bd\u0016q\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0003\u00df\u009b\u00d2p"
+"psq\u0000~\u0000\u0015\u0003\u00df\u009b\u00c7q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00eb\u0090]ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u00068\u00f2\u0088ppsq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000"
+"\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000.net.sourceforge.czt.z.jaxb.gen.DeclNameElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0004@5Wpp\u0000sq\u0000~\u0000\u0000\u0004@5Lppsq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt."
+"z.jaxb.gen.DeclNameq\u0000~\u0000#sq\u0000~\u0000\u0007\u0002Gx\u0018ppsq\u0000~\u0000\u0015\u0002Gx\rq\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000"
+"~\u0000\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\bDeclNameq\u0000~\u0000>sq\u0000~\u0000\u0007N\u00dd\u008f\u00b1ppsq\u0000~\u0000\u0007N\u00dd"
+"\u008f\u00a6q\u0000~\u0000\u000epsq\u0000~\u0000\u0007L\u00e4\u00d2uq\u0000~\u0000\u000epsq\u0000~\u0000\u0007J\u00ec\u0015Dq\u0000~\u0000\u000epsq\u0000~\u0000\u0007H\u00f3X\u0013q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0007F\u00fa\u009a\u00e2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007E\u0001\u00dd\u00b1q\u0000~\u0000\u000epsq\u0000~\u0000\u0007C\t \u0080q\u0000~\u0000\u000epsq\u0000~\u0000\u0007A\u0010cOq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0007?\u0017\u00a6\u001eq\u0000~\u0000\u000epsq\u0000~\u0000\u0007=\u001e\u00e8\u00edq\u0000~\u0000\u000epsq\u0000~\u0000\u0007;&+\u00bcq\u0000~\u0000\u000epsq\u0000~\u0000\u00079-n\u008bq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u000774\u00b1Zq\u0000~\u0000\u000epsq\u0000~\u0000\u00075;\u00f4)q\u0000~\u0000\u000epsq\u0000~\u0000\u00073C6\u00f8q\u0000~\u0000\u000epsq\u0000~\u0000\u00071J"
+"y\u00c7q\u0000~\u0000\u000epsq\u0000~\u0000\u0007/Q\u00bc\u0096q\u0000~\u0000\u000epsq\u0000~\u0000\u0007-X\u00ffeq\u0000~\u0000\u000epsq\u0000~\u0000\u0007+`B4q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0007)g\u0085\u0003q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\'n\u00c7\u00d2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007%v\n\u00a1q\u0000~\u0000\u000epsq\u0000~\u0000\u0007#}Mpq\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0007!\u0084\u0090?q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u001f\u008b\u00d3\u000eq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u001d\u0093\u0015\u00ddq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u001b\u009aX\u00acq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0007\u0019\u00a1\u009b{q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0017\u00a8\u00deJq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0015\u00b0!\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0013\u00b7"
+"c\u00e8q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0011\u00be\u00a6\u00b7q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u000f\u00c5\u00e9\u0086q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\r\u00cd,Uq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0007\u000b\u00d4o$q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\t\u00db\u00b1\u00f3q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0007\u00e2\u00f4\u00c2q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0005\u00ea7\u0091q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0007\u0003\u00f1z`q\u0000~\u0000\u000epsq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt"
+".z.jaxb.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$"
+"ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'ne"
+"t.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000s"
+"q\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.LetExp"
+"rq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd"
+"\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.ge"
+"n.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.cz"
+"t.z.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd"
+"$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002n"
+"et.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExpr"
+"q\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen"
+".SetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z."
+"jaxb.gen.PipeExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd"
+"\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourcefor"
+"ge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd"
+"$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(n"
+"et.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen.Jok"
+"erExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.c"
+"zt.z.jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001"
+"\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000"
+"~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq"
+"\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen."
+"LambdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt."
+"z.jaxb.gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$pp"
+"sq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net."
+"sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000"
+"\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprEle"
+"mentq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb"
+".gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.cz"
+"t.z.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~"
+"\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sour"
+"ceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq"
+"\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000"
+"\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.ja"
+"xb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~"
+"\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sour"
+"ceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~"
+"\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~"
+"\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprElemen"
+"tq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd"
+"\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.ge"
+"n.ProjExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt."
+"z.jaxb.gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000"
+"~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sou"
+"rceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000#s"
+"q\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.CompE"
+"xprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001"
+"\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb."
+"gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8"
+"\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourcefo"
+"rge.czt.z.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$pps"
+"q\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.s"
+"ourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/q\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007"
+"\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000#q\u0000~\u0000\u001esr\u0000\"com.su"
+"n.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/su"
+"n/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gr"
+"ammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresho"
+"ldL\u0000\u0006parentq\u0000~\u0001l[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;"
+"xp\u0000\u0000\u0000\u0086\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000x"
+"p\u0000\u0000\u0002\u00ffpppppq\u0000~\u0000\\pppppppppppppppppppppq\u0000~\u0000eppppppppppppppppppp"
+"ppq\u0000~\u0000npppppppppppppppppppppq\u0000~\u0000wppppppq\u0000~\u0000Wpppppppppppppppp"
+"pppppq\u0000~\u0000`pppppppppppppppppppppq\u0000~\u0000ipppppppppppppppppppppq\u0000~"
+"\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000\u00d1q\u0000~\u0000rq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u0001Bq\u0000~"
+"\u0001<q\u0000~\u00016q\u0000~\u00017q\u0000~\u00010q\u0000~\u00011q\u0000~\u0001*q\u0000~\u0001+q\u0000~\u0001$q\u0000~\u0001%q\u0000~\u0001\u001eq\u0000~\u0001\u001fq\u0000~\u0001\u0018q\u0000~"
+"\u0001\u0019q\u0000~\u0001\u0012q\u0000~\u0001\u0013q\u0000~\u0001\fq\u0000~\u0001\rq\u0000~\u0000[q\u0000~\u0001\u0006q\u0000~\u0001\u0007q\u0000~\u0001\u0000q\u0000~\u0001\u0001q\u0000~\u0000\u00faq\u0000~\u0000\u00fbq\u0000~"
+"\u0000\u00f4q\u0000~\u0000\u00f5q\u0000~\u0000\u00eeq\u0000~\u0000\u00efq\u0000~\u0000\u00e8q\u0000~\u0000\u00e9q\u0000~\u0000\u00e2q\u0000~\u0000\u00e3q\u0000~\u0000\u00dcq\u0000~\u0000\u00ddq\u0000~\u0000\u00d6q\u0000~\u0000\u00d7q\u0000~"
+"\u0000\u0014q\u0000~\u0000Bq\u0000~\u0000Jq\u0000~\u0000dq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0011q\u0000~\u0000Aq\u0000~\u0000Iq\u0000~\u0000|q\u0000~"
+"\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000\u00b2q\u0000~\u0000\u00b8q\u0000~\u0000Nq\u0000~\u0000\u00beq\u0000~"
+"\u0000\u00c4q\u0000~\u0000mq\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0001Iq\u0000~\u0001Hq\u0000~\u0001Oq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~"
+"\u0001Tq\u0000~\u0001[q\u0000~\u0001Zq\u0000~\u0001aq\u0000~\u0001`q\u0000~\u0001gq\u0000~\u0001fppppq\u0000~\u0000vppppppq\u0000~\u0000Vpppppppp"
+"pppppppppppppq\u0000~\u0000_ppppppppppppppq\u0000~\u0000\u0005ppppppq\u0000~\u0000hpppppppppppp"
+"pppppppppq\u0000~\u0000qpppppppppppppppppppppq\u0000~\u0000zppppppq\u0000~\u0000Zppppppppp"
+"ppppppppppppq\u0000~\u0000cpppppppppppppppppppppq\u0000~\u0000Gq\u0000~\u0000lpppppppppppp"
+"ppppppppq\u0000~\u0000uppppppq\u0000~\u0000Upppppppppppppppppppppq\u0000~\u0000^pppppppppp"
+"pppppq\u0000~\u0000\u0006ppppq\u0000~\u0000$q\u0000~\u0000gpppppppppppppppppppppq\u0000~\u0000ppppppppppp"
+"pppppppppppq\u0000~\u0000yppppppq\u0000~\u0000Ypppppppppppppppppppppq\u0000~\u0000bppppppp"
+"ppppppppppppppq\u0000~\u0000kppppppppppq\u0000~\u0000?ppppppppppq\u0000~\u0000tppppppq\u0000~\u0000T"
+"ppppppppppq\u0000~\u0000Sppppppppppq\u0000~\u0000]pppppppppppppppppppppq\u0000~\u0000fpq\u0000~"
+"\u0000\u000fpppppppppppppppppppq\u0000~\u0000opq\u0000~\u0000\bpppppppppppppppppppq\u0000~\u0000xpppp"
+"ppq\u0000~\u0000Xpppppppppppppppppppppq\u0000~\u0000apppppppppppppppppppppq\u0000~\u0000jp"
+"ppppppppppppppppppppq\u0000~\u0000sppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  4 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        state = 3;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        state = 3;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        state = 3;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 5, value));
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 7, value));
                            return ;
                        case  2 :
                            state = 3;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.z.jaxb.gen.impl.BranchImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
