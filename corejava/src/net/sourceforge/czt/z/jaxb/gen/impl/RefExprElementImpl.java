//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class RefExprElementImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl
    implements net.sourceforge.czt.z.jaxb.gen.RefExprElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.RefExprElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "RefExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "RefExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.RefExprElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0016\u00bf!1p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0016\u00bf!&ppsq\u0000~\u0000\u0007\u0016`\u00b2!ppsq\u0000~\u0000\u0007\u0014D\u0005\u00feppsq\u0000~\u0000\u0007\u0003\u0096;3ppsr\u0000\u001dcom.sun.msv."
+"grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u00ee\u00b7kppsq\u0000~\u0000\u0000\u0001\u00ee\u00b7`sr\u0000\u0011java.l"
+"ang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0001\u00ee\u00b7Uppsq\u0000~\u0000\u0000\u0000h$(pp\u0000"
+"sq\u0000~\u0000\r\u0000h$\u001dppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000"
+"h$\u0012q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003e"
+"xpq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000h$\u000fq\u0000~\u0000\u0011psr\u00002com.sun.msv.gram"
+"mar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000"
+"\u0010\u0001q\u0000~\u0000\u001bsr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dco"
+"m.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gram"
+"mar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001cq\u0000"
+"~\u0000!sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
+"lNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000-net.s"
+"ourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun.c"
+"om/jaxb/xjc/dummy-elementssq\u0000~\u0000\r\u0001\u0086\u0093(ppsq\u0000~\u0000\u0018\u0001\u0086\u0093\u001dq\u0000~\u0000\u0011psr\u0000\u001bco"
+"m.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/dat"
+"atype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Str"
+"ingPair;xq\u0000~\u0000\u0004\u0000\u0014t\u00fappsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnames"
+"paceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/dat"
+"atype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XM"
+"LSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProces"
+"sor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$N"
+"ullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.u"
+"til.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~"
+"\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSche"
+"ma-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/z"
+"mlq\u0000~\u0000!sq\u0000~\u0000\r\u0001\u00a7\u0083\u00c3ppsq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011p"
+"sq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net.sourceforge.czt."
+"z.jaxb.gen.RefNameElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0001?_\u0099pp\u0000sq\u0000~\u0000\u0007\u0001?_\u008eppsq\u0000~\u0000"
+"\u0000\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~"
+"\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&net.sourceforge.czt.z.jaxb.gen.RefNameq\u0000~\u0000&s"
+"q\u0000~\u0000\r\u0000\u00d7;appsq\u0000~\u0000\u0018\u0000\u00d7;Vq\u0000~\u0000\u0011pq\u0000~\u0000,sq\u0000~\u0000\"q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000\u0007RefNameq\u0000~\u0000Asq\u0000~\u0000\r\u0010\u00ad\u00ca\u00c6ppsq\u0000~\u0000\u0015\u0010\u00ad\u00ca\u00bbq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0010\u00ad\u00ca\u00b8q\u0000~\u0000\u0011psq"
+"\u0000~\u0000\r\u0010E\u00a6\u008eq\u0000~\u0000\u0011psq\u0000~\u0000\r\u000f\u00dd\u0082dq\u0000~\u0000\u0011psq\u0000~\u0000\r\u000fu^:q\u0000~\u0000\u0011psq\u0000~\u0000\r\u000f\r:\u0010q\u0000~\u0000"
+"\u0011psq\u0000~\u0000\r\u000e\u00a5\u0015\u00e6q\u0000~\u0000\u0011psq\u0000~\u0000\r\u000e<\u00f1\u00bcq\u0000~\u0000\u0011psq\u0000~\u0000\r\r\u00d4\u00cd\u0092q\u0000~\u0000\u0011psq\u0000~\u0000\r\rl\u00a9h"
+"q\u0000~\u0000\u0011psq\u0000~\u0000\r\r\u0004\u0085>q\u0000~\u0000\u0011psq\u0000~\u0000\r\f\u009ca\u0014q\u0000~\u0000\u0011psq\u0000~\u0000\r\f4<\u00eaq\u0000~\u0000\u0011psq\u0000~\u0000\r"
+"\u000b\u00cc\u0018\u00c0q\u0000~\u0000\u0011psq\u0000~\u0000\r\u000bc\u00f4\u0096q\u0000~\u0000\u0011psq\u0000~\u0000\r\n\u00fb\u00d0lq\u0000~\u0000\u0011psq\u0000~\u0000\r\n\u0093\u00acBq\u0000~\u0000\u0011psq"
+"\u0000~\u0000\r\n+\u0088\u0018q\u0000~\u0000\u0011psq\u0000~\u0000\r\t\u00c3c\u00eeq\u0000~\u0000\u0011psq\u0000~\u0000\r\t[?\u00c4q\u0000~\u0000\u0011psq\u0000~\u0000\r\b\u00f3\u001b\u009aq\u0000~\u0000"
+"\u0011psq\u0000~\u0000\r\b\u008a\u00f7pq\u0000~\u0000\u0011psq\u0000~\u0000\r\b\"\u00d3Fq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0007\u00ba\u00af\u001cq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0007R\u008a\u00f2"
+"q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0006\u00eaf\u00c8q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0006\u0082B\u009eq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0006\u001a\u001etq\u0000~\u0000\u0011psq\u0000~\u0000\r"
+"\u0005\u00b1\u00faJq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0005I\u00d6 q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0004\u00e1\u00b1\u00f6q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0004y\u008d\u00ccq\u0000~\u0000\u0011psq"
+"\u0000~\u0000\r\u0004\u0011i\u00a2q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0003\u00a9Exq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0003A!Nq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0002\u00d8\u00fd$q\u0000~\u0000"
+"\u0011psq\u0000~\u0000\r\u0002p\u00d8\u00faq\u0000~\u0000\u0011psq\u0000~\u0000\r\u0002\b\u00b4\u00d0q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0001\u00a0\u0090\u00a6q\u0000~\u0000\u0011psq\u0000~\u0000\r\u00018l|"
+"q\u0000~\u0000\u0011psq\u0000~\u0000\r\u0000\u00d0HRq\u0000~\u0000\u0011psq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$"
+"\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00004net.sourcefor"
+"ge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p"
+"\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!"
+"sq\u0000~\u0000\"t\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000&sq\u0000"
+"~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq"
+"\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq"
+"\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00002net.sourceforge.czt.z.jaxb.gen."
+"TupleSelExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000"
+"h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00000net.sourcef"
+"orge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000s"
+"q\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq"
+"\u0000~\u0000\"t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$("
+"q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElemen"
+"tq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$"
+"\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000)net.sourceforge.czt.z.jaxb.ge"
+"n.LambdaExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000"
+"\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000*net.sourceforge.cz"
+"t.z.jaxb.gen.ImpliesExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq"
+"\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000*net.so"
+"urceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq"
+"\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000"
+"~\u0000\"t\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h"
+"$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000"
+"~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Element"
+"q\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000f"
+"q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&net.sourceforge.czt.z.jaxb.gen"
+".NegExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq"
+"\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000/net.sourceforge.czt.z."
+"jaxb.gen.ThetaExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dpps"
+"q\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&net.s"
+"ourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000"
+"\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""
+"t\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000"
+"\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~"
+"\u0000!sq\u0000~\u0000\"t\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprEleme"
+"ntq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h"
+"$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000%net.sourceforge.czt.z.jaxb.g"
+"en.MuExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011ps"
+"q\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000/net.sourceforge.czt.z"
+".jaxb.gen.DecorExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dpp"
+"sq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net."
+"sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000"
+"\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~"
+"\u0000!sq\u0000~\u0000\"t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000&"
+"sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011"
+"pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000(net.sourceforge.czt.z.jaxb.gen.Powe"
+"rExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000"
+"\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net.sourceforge.czt.z.jax"
+"b.gen.RefExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015"
+"\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net.source"
+"forge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000"
+"~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~"
+"\u0000\"t\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000&sq\u0000~"
+"\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExpr"
+"Elementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000"
+"~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000,net.sourceforge.czt.z.j"
+"axb.gen.Expr2NElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000"
+"\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourc"
+"eforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000s"
+"q\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq"
+"\u0000~\u0000\"t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000"
+"&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000"
+"\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000)net.sourceforge.czt.z.jaxb.gen.Exi"
+"stsExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000"
+"~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourceforge.czt.z.j"
+"axb.gen.Qnt1ExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000"
+"~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000(net.sou"
+"rceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000"
+"\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\""
+"t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~"
+"\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000"
+"~\u0000!sq\u0000~\u0000\"t\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000&sq\u0000~\u0000"
+"\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprEl"
+"ementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000"
+"\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000.net.sourceforge.czt.z.jax"
+"b.gen.CondExprElementq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000"
+"\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\'net.sourc"
+"eforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h"
+"$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000*"
+"net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~"
+"\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000"
+"~\u0000!sq\u0000~\u0000\"t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000&sq\u0000~"
+"\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000fq\u0000~\u0000\u0011pq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExpr"
+"q\u0000~\u0000&sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0015\u0000h$\u0012q\u0000~\u0000\u0011psq\u0000~\u0000\u0018\u0000h$\u000f"
+"q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&net.sourceforge.czt.z.jaxb.gen"
+".IffExprq\u0000~\u0000&q\u0000~\u0000!sq\u0000~\u0000\r\u0002\u001c\u00ac\u001eppsq\u0000~\u0000\u0018\u0002\u001c\u00ac\u0013q\u0000~\u0000\u0011psq\u0000~\u0000)\u0000S\u00c4\u0005ppsr"
+"\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00003"
+"t\u0000\u0007booleanq\u0000~\u00007q\u0000~\u00009sq\u0000~\u0000:q\u0000~\u0001{q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0006Mixfixt\u0000\u0000q\u0000~\u0000!s"
+"q\u0000~\u0000\r\u0000^o\u0000ppsq\u0000~\u0000\u0018\u0000^n\u00f5q\u0000~\u0000\u0011pq\u0000~\u0000,sq\u0000~\u0000\"q\u0000~\u0000=q\u0000~\u0000>q\u0000~\u0000!sq\u0000~\u0000\"t"
+"\u0000\u0007RefExprq\u0000~\u0000Asr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedH"
+"ash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef"
+"\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u0086[\u0000\u0005tablet\u0000![Lcom/sun"
+"/msv/grammar/Expression;xp\u0000\u0000\u0000\u008e\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar"
+".Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Zpppppppppppppppppppppppppp"
+"pppq\u0000~\u0000Bppppppppppppppppq\u0000~\u0000\npppppppppq\u0000~\u0000jq\u0000~\u0000wq\u0000~\u0000]ppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000`q\u0000~\u0000mq"
+"\u0000~\u0000zpppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000cq\u0000~\u0000pq\u0000~\u0000}ppppppppppppppppppppppppppppppppppq\u0000~\u0001Hq\u0000~\u0001Bq"
+"\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001Gq\u0000~\u0001Aq\u0000~\u0001;q"
+"\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000bq\u0000~\u0000fq\u0000~\u0001\u0005q\u0000~\u0001\u0006q\u0000~\u0000\u00ffq"
+"\u0000~\u0001\u0000q\u0000~\u0000\u00f9q\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq\u0000~\u0000\u00eeq\u0000~\u0000\u00e7q\u0000~\u0000\u00e8q\u0000~\u0000\u00e1q\u0000~\u0000\u00e2q\u0000~\u0000\u00dbq"
+"\u0000~\u0000\u00dcq\u0000~\u0000\u00a5q\u0000~\u0000\u00acq\u0000~\u0000\u00abq\u0000~\u0000sq\u0000~\u0000\u00b2q\u0000~\u0000\u00b1q\u0000~\u0000\u00b8q\u0000~\u0000\u00b7q\u0000~\u0000\u00beq\u0000~\u0000\u00bdq\u0000~\u0000\u00c4q"
+"\u0000~\u0000\u00c3q\u0000~\u0000\u00caq\u0000~\u0000\u00c9q\u0000~\u0000\u00d0q\u0000~\u0000\u00cfq\u0000~\u0000\u00d5q\u0000~\u0000\u0014q\u0000~\u0000Dq\u0000~\u0000Lq\u0000~\u0000\u0081q\u0000~\u0000\u0087q\u0000~\u0000\u008dq"
+"\u0000~\u0000\u0093q\u0000~\u0000\u0099q\u0000~\u0000\u009fq\u0000~\u0000\u00d6q\u0000~\u0000\u0017q\u0000~\u0000Eq\u0000~\u0000Mq\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq"
+"\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0001Nq\u0000~\u0001Mq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0001Zq\u0000~\u0000iq\u0000~\u0000vq\u0000~\u0001Yq\u0000~\u0000\\q\u0000~\u0001`q"
+"\u0000~\u0001_q\u0000~\u0001fq\u0000~\u0001eq\u0000~\u0001lq\u0000~\u0001kq\u0000~\u0000Yq\u0000~\u0001rq\u0000~\u0001qpppppq\u0000~\u0000Qppppppppppp"
+"pppppppppppppppppppppppppppppq\u0000~\u0000_q\u0000~\u0000lq\u0000~\u0000ypppppppppppppppp"
+"pppppppppppppppppq\u0000~\u0000\'ppppppppppppppq\u0000~\u0001vppq\u0000~\u0000\u000bppppq\u0000~\u0000bq\u0000~"
+"\u0000oq\u0000~\u0000|ppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0000eq\u0000~\u0000rq\u0000~\u0000\u007fq\u0000~\u0000Xq\u0000~\u0000Wpppppppppq\u0000~\u0000Vpppppppppppppppppp"
+"ppppppppppppppppppppppppppq\u0000~\u0000hq\u0000~\u0000uq\u0000~\u0000[ppppppppppppppppppq"
+"\u0000~\u0000Jpppppppppppppppppppppppppppppppppppppq\u0000~\u0000kq\u0000~\u0000xq\u0000~\u0000^pppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0000\u0012ppppppppppppppppq\u0000~\u0001\u0080pp"
+"q\u0000~\u0000aq\u0000~\u0000nq\u0000~\u0000{q\u0000~\u0000\u000epppppppppppppppppppppppppppppppppq\u0000~\u0000\fpp"
+"pppppppppq\u0000~\u0000\tpppppppppq\u0000~\u0000dq\u0000~\u0000qq\u0000~\u0000~pppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppq\u0000~\u0000gq\u0000~\u0000t"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Mixfix" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Mixfix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "Mixfix");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.RefExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
