//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class SetExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl
    implements net.sourceforge.czt.z.jaxb.gen.SetExpr, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.SetExpr.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "SetExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "SetExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.SetExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0013]=\u00d1p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0013]=\u00c6ppsq\u0000~\u0000\u0007\u0012N3dppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u00a0h\u0099ppsq\u0000~\u0000\u0000\u0001\u00a0h\u008esr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0001\u00a0h\u0083ppsq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000h$\u0012q\u0000~\u0000\u000fpsr\u0000 com.sun.msv"
+".grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001"
+"xq\u0000~\u0000\u0004\u0000h$\u000fq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssq\u0000~\u0000\u000b\u00018DVppsq\u0000~\u0000\u0016\u00018DKq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"
+"q\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000\u0014t\u00fappsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq"
+"\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004t"
+"ypet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\u000b\u0010\u00ad\u00ca\u00c6ppsq\u0000~\u0000"
+"\u0013\u0010\u00ad\u00ca\u00bbq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0010\u00ad\u00ca\u00b8q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0010E\u00a6\u008eq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000f\u00dd\u0082dq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u000b\u000fu^:q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000f\r:\u0010q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000e\u00a5\u0015\u00e6q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000e<\u00f1\u00bcq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u000b\r\u00d4\u00cd\u0092q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\rl\u00a9hq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\r\u0004\u0085>q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\f\u009ca"
+"\u0014q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\f4<\u00eaq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000b\u00cc\u0018\u00c0q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000bc\u00f4\u0096q\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u000b\n\u00fb\u00d0lq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\n\u0093\u00acBq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\n+\u0088\u0018q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\t\u00c3c\u00eeq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u000b\t[?\u00c4q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\b\u00f3\u001b\u009aq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\b\u008a\u00f7pq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\b\"\u00d3Fq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u000b\u0007\u00ba\u00af\u001cq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0007R\u008a\u00f2q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0006\u00eaf\u00c8q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0006\u0082B"
+"\u009eq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0006\u001a\u001etq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0005\u00b1\u00faJq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0005I\u00d6 q\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u000b\u0004\u00e1\u00b1\u00f6q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0004y\u008d\u00ccq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0004\u0011i\u00a2q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0003\u00a9Exq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u000b\u0003A!Nq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0002\u00d8\u00fd$q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0002p\u00d8\u00faq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0002\b\u00b4\u00d0q\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u000b\u0001\u00a0\u0090\u00a6q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u00018l|q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0000\u00d0HRq\u0000~\u0000\u000fpsq\u0000~\u0000\u0000\u0000h$"
+"(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourceforge.czt.tcoz.jaxb.gen.ChannelExp"
+"rElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge.czt.z."
+"jaxb.gen.Expr2Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000"
+"\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourc"
+"eforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001d"
+"ppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00002ne"
+"t.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000"
+"h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.z.jaxb.gen.RenameExprE"
+"lementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.ja"
+"xb.gen.AndExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge."
+"czt.z.jaxb.gen.HideExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h"
+"$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)"
+"net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000"
+"\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000$sq"
+"\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.SetCom"
+"pExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jax"
+"b.gen.ForallExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforg"
+"e.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$"
+"\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&n"
+"et.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000s"
+"q\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000$s"
+"q\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.SetEx"
+"prq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h"
+"$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.g"
+"en.PreExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt."
+"zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000"
+"h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000"
+"sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000$"
+"sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.QntE"
+"xprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt."
+"z.jaxb.gen.Expr0NElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq"
+"\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.so"
+"urceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~"
+"\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000"
+"\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprEle"
+"mentq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb"
+".gen.SchExpr2Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013"
+"\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.source"
+"forge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000$sq\u0000~\u0000"
+"\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprE"
+"lementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforge.czt.z.ja"
+"xb.gen.BindSelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dpps"
+"q\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.s"
+"ourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000$sq\u0000"
+"~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.z.jaxb.gen.TupleEx"
+"prq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h"
+"$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.g"
+"en.ProdExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt"
+".z.jaxb.gen.LetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000"
+"h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourcef"
+"orge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~"
+"\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000.net.sourceforge.czt.z.jaxb.gen.CondExprElementq\u0000~\u0000$sq\u0000~\u0000"
+"\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq"
+"\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen."
+"Exists1Exprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt"
+".z.jaxb.gen.ProjExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$\u001dppsq\u0000~\u0000\u0013"
+"\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.source"
+"forge.czt.z.jaxb.gen.CompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0000h$(q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0000h$"
+"\u001dppsq\u0000~\u0000\u0013\u0000h$\u0012q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000h$\u000fq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&n"
+"et.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000$q\u0000~\u0000\u001fsq\u0000~\u0000\u000b\u0001\u000f\n]pps"
+"q\u0000~\u0000\u0016\u0001\u000f\nRq\u0000~\u0000\u000fpq\u0000~\u0000*sq\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0007SetExprq\u0000~"
+"\u0000?sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"
+"let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"
+"m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005cou"
+"ntI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001f[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar"
+"/Expression;xp\u0000\u0000\u0000\u0084\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;"
+"\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Dpppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppq\u0000~\u0000Gq\u0000~\u0000Tq\u0000~\u0000appppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppq\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000dpppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Mq\u0000~\u0000Zq\u0000~\u0000gppppp"
+"pppppppppppppppppppppppppppppq\u0000~\u0001Dq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q\u0000~\u0001,q\u0000~\u0001&q"
+"\u0000~\u0001 q\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\bq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q"
+"\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001\u0001q\u0000~\u0000Pq\u0000~\u0001\u0002q\u0000~\u0000\u00fbq\u0000~\u0000\u00fcq\u0000~\u0000\u00f5q\u0000~\u0000\u00f6q\u0000~\u0000\u00efq\u0000~\u0000\u00f0q"
+"\u0000~\u0000\u00e9q\u0000~\u0000\u00eaq\u0000~\u0000\u00e3q\u0000~\u0000\u00e4q\u0000~\u0000\u00ddq\u0000~\u0000\u00deq\u0000~\u0000\u00d7q\u0000~\u0000\u00d8q\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a8q"
+"\u0000~\u0000]q\u0000~\u0000\u00a7q\u0000~\u0000\u00aeq\u0000~\u0000\u00adq\u0000~\u0000\u00b4q\u0000~\u0000\u00b3q\u0000~\u0000\u00baq\u0000~\u0000\u00b9q\u0000~\u0000\u00c0q\u0000~\u0000\u00bfq\u0000~\u0000\u00c6q\u0000~\u0000\u00c5q"
+"\u0000~\u0000\u00ccq\u0000~\u0000\u00cbq\u0000~\u0000\u00d2q\u0000~\u0000\u00d1q\u0000~\u0000\u0012q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq"
+"\u0000~\u0000\u0015q\u0000~\u0000lq\u0000~\u0000rq\u0000~\u0000xq\u0000~\u0000~q\u0000~\u0000\u0084q\u0000~\u0000\u008aq\u0000~\u0000\u0090q\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u00a2q\u0000~\u0001Cq"
+"\u0000~\u0001Jq\u0000~\u0001Iq\u0000~\u0001Pq\u0000~\u0000Sq\u0000~\u0000`q\u0000~\u0000Fq\u0000~\u0001Oq\u0000~\u0001Vq\u0000~\u0001Uq\u0000~\u0000Cq\u0000~\u0001\\q\u0000~\u0001[p"
+"ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppq\u0000~\u0000Iq\u0000"
+"~\u0000Vq\u0000~\u0000cpppppppppppppppppppppppppppq\u0000~\u0000\nppppppppppppppppq\u0000~\u0000"
+"%pppppppppppq\u0000~\u0000Lq\u0000~\u0000Yq\u0000~\u0000fppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppq\u0000~\u0000Oq\u0000~\u0000\\q\u0000~\u0000iq\u0000~\u0000Bq\u0000~\u0000Apppppppppq\u0000~"
+"\u0000@ppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Rq\u0000~\u0000_q\u0000~\u0000"
+"Eppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~"
+"\u0000Hq\u0000~\u0000Uq\u0000~\u0000bpppppppppppppppppppppppppppppppppppppppppppppppq"
+"\u0000~\u0000\u0010ppppppppq\u0000~\u0000Kq\u0000~\u0000Xq\u0000~\u0000eppppppppppq\u0000~\u0000\fpppppppppppppppppp"
+"pppppppppppppppppppppppppppq\u0000~\u0000Nq\u0000~\u0000[q\u0000~\u0000hppppppppppppppq\u0000~\u0001"
+"`pppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Qq\u0000~\u0000^"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NImpl)net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
