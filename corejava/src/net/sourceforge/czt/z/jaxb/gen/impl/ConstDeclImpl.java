//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class ConstDeclImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl
    implements net.sourceforge.czt.z.jaxb.gen.ConstDecl, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _DeclName;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.ConstDecl.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getDeclName() {
        return _DeclName;
    }

    public void setDeclName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _DeclName = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "DeclName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
            context.endElement();
        }
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_DeclName instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeclName), "DeclName");
        }
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.ConstDecl.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0013\u00d4{\u001dppsq\u0000~\u0000\u0000\u0003&\u00b0`ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001_o\u00acppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001_o\u00a1sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0001_o\u0096ppsq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000h$\u0012q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000h$\u000fq\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0000\u00f7Kip"
+"psq\u0000~\u0000\u0015\u0000\u00f7K^q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0014t\u00fappsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0001\u00c7@\u00afppsq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000"
+"\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000.net.sourceforge.czt.z.jaxb.gen.DeclNameElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0001_\u001c\u0085pp\u0000sq\u0000~\u0000\u0000\u0001_\u001czppsq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt."
+"z.jaxb.gen.DeclNameq\u0000~\u0000#sq\u0000~\u0000\u0007\u0000\u00f6\u00f8Mppsq\u0000~\u0000\u0015\u0000\u00f6\u00f8Bq\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000"
+"~\u0000\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\bDeclNameq\u0000~\u0000>sq\u0000~\u0000\u0007\u0010\u00ad\u00ca\u00b8ppsq\u0000~\u0000\u0007\u0010E"
+"\u00a6\u008eppsq\u0000~\u0000\u0007\u000f\u00dd\u0082dppsq\u0000~\u0000\u0007\u000fu^:ppsq\u0000~\u0000\u0007\u000f\r:\u0010ppsq\u0000~\u0000\u0007\u000e\u00a5\u0015\u00e6ppsq\u0000~\u0000\u0007\u000e<"
+"\u00f1\u00bcppsq\u0000~\u0000\u0007\r\u00d4\u00cd\u0092ppsq\u0000~\u0000\u0007\rl\u00a9hppsq\u0000~\u0000\u0007\r\u0004\u0085>ppsq\u0000~\u0000\u0007\f\u009ca\u0014ppsq\u0000~\u0000\u0007\f4"
+"<\u00eappsq\u0000~\u0000\u0007\u000b\u00cc\u0018\u00c0ppsq\u0000~\u0000\u0007\u000bc\u00f4\u0096ppsq\u0000~\u0000\u0007\n\u00fb\u00d0lppsq\u0000~\u0000\u0007\n\u0093\u00acBppsq\u0000~\u0000\u0007\n+"
+"\u0088\u0018ppsq\u0000~\u0000\u0007\t\u00c3c\u00eeppsq\u0000~\u0000\u0007\t[?\u00c4ppsq\u0000~\u0000\u0007\b\u00f3\u001b\u009appsq\u0000~\u0000\u0007\b\u008a\u00f7pppsq\u0000~\u0000\u0007\b\""
+"\u00d3Fppsq\u0000~\u0000\u0007\u0007\u00ba\u00af\u001cppsq\u0000~\u0000\u0007\u0007R\u008a\u00f2ppsq\u0000~\u0000\u0007\u0006\u00eaf\u00c8ppsq\u0000~\u0000\u0007\u0006\u0082B\u009eppsq\u0000~\u0000\u0007\u0006\u001a"
+"\u001etppsq\u0000~\u0000\u0007\u0005\u00b1\u00faJppsq\u0000~\u0000\u0007\u0005I\u00d6 ppsq\u0000~\u0000\u0007\u0004\u00e1\u00b1\u00f6ppsq\u0000~\u0000\u0007\u0004y\u008d\u00ccppsq\u0000~\u0000\u0007\u0004\u0011"
+"i\u00a2ppsq\u0000~\u0000\u0007\u0003\u00a9Exppsq\u0000~\u0000\u0007\u0003A!Nppsq\u0000~\u0000\u0007\u0002\u00d8\u00fd$ppsq\u0000~\u0000\u0007\u0002p\u00d8\u00fappsq\u0000~\u0000\u0007\u0002\b"
+"\u00b4\u00d0ppsq\u0000~\u0000\u0007\u0001\u00a0\u0090\u00a6ppsq\u0000~\u0000\u0007\u00018l|ppsq\u0000~\u0000\u0007\u0000\u00d0HRppsq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000"
+"h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"4net.sourceforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Eleme"
+"ntq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.O"
+"rExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$"
+"\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.z.jaxb.ge"
+"n.TupleSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$"
+"\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourcefor"
+"ge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000"
+"h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000"
+"~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000"
+"~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.Impli"
+"esExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h"
+"$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.g"
+"en.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000ep"
+"sq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt."
+"z.jaxb.gen.ForallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$"
+"\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourcefor"
+"ge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dpp"
+"sq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net."
+"sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h"
+"$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/"
+"net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h"
+"$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen.Joke"
+"rExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z."
+"jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt"
+".z.jaxb.gen.DecorExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq"
+"\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.so"
+"urceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000"
+"~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h"
+"$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.g"
+"en.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.c"
+"zt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dpps"
+"q\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.s"
+"ourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000s"
+"q\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.z.jaxb.gen."
+"BindSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge."
+"czt.z.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000"
+"\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourc"
+"eforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000"
+"\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp"
+"\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000"
+"h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen."
+"CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt"
+".z.jaxb.gen.PipeExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforg"
+"e.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$\u001dppsq"
+"\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.so"
+"urceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~\u0000\u0007\u0000h$"
+"\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'n"
+"et.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000h$(pp\u0000sq\u0000~"
+"\u0000\u0007\u0000h$\u001dppsq\u0000~\u0000\u0012\u0000h$\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000h$\u000fq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000#sr\u0000\"com.sun.m"
+"sv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/m"
+"sv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramm"
+"ar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL"
+"\u0000\u0006parentq\u0000~\u0001r[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000"
+"\u0000\u0000\u0088\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000"
+"\u0002\u00ffq\u0000~\u0000Uppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppq\u0000~\u0000eq\u0000~\u0000rq\u0000~\u0000Xpppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppq\u0000~\u0000[q\u0000~\u0000hq\u0000~\u0000uppppppppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000\u0006pppppppppppppppq\u0000~\u0000^q\u0000~\u0000kq\u0000~\u0000xpppppppppq\u0000~\u0000Npp"
+"ppppppppppppppppppppppq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~"
+"\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u0000\u000fq\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~"
+"\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0000aq\u0000~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0001\u0001q\u0000~\u0000\u00faq\u0000~\u0000\u00fbq\u0000~\u0000\u00f4q\u0000~\u0000\u00f5q\u0000~\u0000\u00eeq\u0000~"
+"\u0000\u00efq\u0000~\u0000\u00e8q\u0000~\u0000\u00e9q\u0000~\u0000\u00e2q\u0000~\u0000\u00e3q\u0000~\u0000\u00dcq\u0000~\u0000\u00ddq\u0000~\u0000\u00d6q\u0000~\u0000\u00d7q\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000nq\u0000~"
+"\u0000\u00adq\u0000~\u0000\u00acq\u0000~\u0000\u00b3q\u0000~\u0000\u00b2q\u0000~\u0000\u00b9q\u0000~\u0000\u00b8q\u0000~\u0000\u00bfq\u0000~\u0000\u00beq\u0000~\u0000\u00c5q\u0000~\u0000\u00c4q\u0000~\u0000\u00cbq\u0000~\u0000\u00caq\u0000~"
+"\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u0011q\u0000~\u0000Aq\u0000~\u0000Iq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u0014q\u0000~"
+"\u0000Bq\u0000~\u0000Jq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\bq\u0000~\u0001Iq\u0000~"
+"\u0001Hq\u0000~\u0001Oq\u0000~\u0000dq\u0000~\u0000qq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001Tq\u0000~\u0000Wq\u0000~\u0001[q\u0000~\u0001Zq\u0000~\u0001aq\u0000~\u0001`q\u0000~"
+"\u0001gq\u0000~\u0001fq\u0000~\u0000Tq\u0000~\u0001mq\u0000~\u0001lpppppppppppppppppppppppppppppppppppppp"
+"ppppppq\u0000~\u0000Zq\u0000~\u0000gq\u0000~\u0000tppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppq\u0000~\u0000]q\u0000~\u0000jq\u0000~\u0000wppppppppppppq\u0000~\u0000Gppppppppppp"
+"ppppppppppppppppppppppppppppppppq\u0000~\u0000`q\u0000~\u0000mq\u0000~\u0000zq\u0000~\u0000Spppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000cq\u0000~\u0000pq\u0000~"
+"\u0000Vppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000"
+"~\u0000fq\u0000~\u0000sq\u0000~\u0000Ypppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000"
+"\u0005ppppppppppppq\u0000~\u0000\\q\u0000~\u0000iq\u0000~\u0000vpppppppppppppppppppppppq\u0000~\u0000?pppp"
+"ppppppppppppppppppppppppppppq\u0000~\u0000_q\u0000~\u0000lq\u0000~\u0000yppppppppppppppppp"
+"ppppppppppppppppppppppppppppq\u0000~\u0000$ppppppppppq\u0000~\u0000bq\u0000~\u0000o"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  4 :
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  1 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl)net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  6 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _DeclName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
