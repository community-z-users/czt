//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.01 at 10:48:15 NZST 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class NameExprPairImpl implements net.sourceforge.czt.z.jaxb.gen.NameExprPair, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.NameExprPair.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.NameExprPairImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.NameExprPair.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0003I\u0095\u00eappsr\u0000\'com.sun.msv.gra"
+"mmar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/m"
+"sv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003\u0001\u00ed\u00b9\u00e4pp\u0000sq\u0000~\u0000\u0000\u0001\u00ed\u00b9\u00d9ppsq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sr\u0000\u001dcom.sun.msv.grammar.Cho"
+"iceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u0007\u00ba\u00e2ppsr\u0000 com.sun.msv.grammar.OneOrMo"
+"reExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0007\u00ba\u00d7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.E"
+"xpression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0011\u0001q\u0000~"
+"\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017q\u0000~\u0000\u001csr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"t\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000\'net.source"
+"forge.czt.z.jaxb.gen.DeclNamet\u0000+http://java.sun.com/jaxb/xjc"
+"/dummy-elementssq\u0000~\u0000\f\u0001\u00e5\u00fe\u00e7ppsq\u0000~\u0000\u0013\u0001\u00e5\u00fe\u00dcq\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003\u0000\f\u00bf\u00a2ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%c"
+"om.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.m"
+"sv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000"
+"\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/W"
+"hiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005Q"
+"Namesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringP"
+"air\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000"
+"~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instance"
+"q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0004Namet\u0000\u001ehttp://czt.sourceforge.net/zmlsq\u0000~\u0000\f\u0001[\u00dc"
+"\u0001ppsq\u0000~\u0000\f\u0001T!\u0012ppsq\u0000~\u0000\f\u0001Lf#ppsq\u0000~\u0000\f\u0001D\u00ab4ppsq\u0000~\u0000\f\u0001<\u00f0Eppsq\u0000~\u0000\f\u000155"
+"Vppsq\u0000~\u0000\f\u0001-zgppsq\u0000~\u0000\f\u0001%\u00bfxppsq\u0000~\u0000\f\u0001\u001e\u0004\u0089ppsq\u0000~\u0000\f\u0001\u0016I\u009appsq\u0000~\u0000\f\u0001\u000e\u008e"
+"\u00abppsq\u0000~\u0000\f\u0001\u0006\u00d3\u00bcppsq\u0000~\u0000\f\u0000\u00ff\u0018\u00cdppsq\u0000~\u0000\f\u0000\u00f7]\u00deppsq\u0000~\u0000\f\u0000\u00ef\u00a2\u00efppsq\u0000~\u0000\f\u0000\u00e7\u00e8"
+"\u0000ppsq\u0000~\u0000\f\u0000\u00e0-\u0011ppsq\u0000~\u0000\f\u0000\u00d8r\"ppsq\u0000~\u0000\f\u0000\u00d0\u00b73ppsq\u0000~\u0000\f\u0000\u00c8\u00fcDppsq\u0000~\u0000\f\u0000\u00c1A"
+"Uppsq\u0000~\u0000\f\u0000\u00b9\u0086fppsq\u0000~\u0000\f\u0000\u00b1\u00cbwppsq\u0000~\u0000\f\u0000\u00aa\u0010\u0088ppsq\u0000~\u0000\f\u0000\u00a2U\u0099ppsq\u0000~\u0000\f\u0000\u009a\u009a"
+"\u00aappsq\u0000~\u0000\f\u0000\u0092\u00df\u00bbppsq\u0000~\u0000\f\u0000\u008b$\u00ccppsq\u0000~\u0000\f\u0000\u0083i\u00ddppsq\u0000~\u0000\f\u0000{\u00ae\u00eeppsq\u0000~\u0000\f\u0000s\u00f3"
+"\u00ffppsq\u0000~\u0000\f\u0000l9\u0010ppsq\u0000~\u0000\f\u0000d~!ppsq\u0000~\u0000\f\u0000\\\u00c32ppsq\u0000~\u0000\f\u0000U\bCppsq\u0000~\u0000\f\u0000MM"
+"Tppsq\u0000~\u0000\f\u0000E\u0092eppsq\u0000~\u0000\f\u0000=\u00d7vppsq\u0000~\u0000\f\u00006\u001c\u0087ppsq\u0000~\u0000\f\u0000.a\u0098ppsq\u0000~\u0000\f\u0000&\u00a6"
+"\u00a9ppsq\u0000~\u0000\f\u0000\u001e\u00eb\u00bappsq\u0000~\u0000\f\u0000\u00170\u00cbppsq\u0000~\u0000\f\u0000\u000fu\u00dcppsq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007"
+"\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000."
+"net.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba"
+"\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000"
+"~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000"
+"~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012p"
+"q\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.z.jaxb.gen.Power"
+"Exprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4"
+"q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00007net.sourceforge.czt.oz.jaxb.ge"
+"n.PromotedAttrExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000"
+"\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourc"
+"eforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2"
+"ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00000ne"
+"t.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba"
+"\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000"
+"~\u0000\u001csq\u0000~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000!sq\u0000~\u0000"
+"\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+net.sourceforge.czt.z.jaxb.gen.Expr2Elementq"
+"\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012"
+"pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.z.jaxb.gen.SetC"
+"ompExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000"
+"\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb."
+"gen.CondExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q"
+"\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge"
+".czt.z.jaxb.gen.TupleExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000"
+"\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000&net.sourc"
+"eforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2pps"
+"q\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00002net.s"
+"ourceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00ed"
+"pp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001csq\u0000~\u0000\u001dt\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000"
+"\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElemen"
+"tq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~"
+"\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb.gen.Bi"
+"ndExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012ps"
+"q\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00004net.sourceforge.czt.t"
+"coz.jaxb.gen.ChannelExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2p"
+"psq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net"
+".sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000s"
+"q\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq"
+"\u0000~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00ed"
+"pp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001csq\u0000~\u0000\u001dt\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000!sq"
+"\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.z.jaxb.gen.ForallExpr"
+"q\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000"
+"\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.z.jaxb.gen.Exi"
+"stsExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000"
+"\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.oz.jaxb"
+".gen.PolyExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012ps"
+"q\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z"
+".jaxb.gen.NumExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e"
+"\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.source"
+"forge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f"
+"\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt"
+"\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq"
+"\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000"
+"~\u0000\u001dt\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000!sq\u0000~"
+"\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprEleme"
+"ntq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000"
+"~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.oz.jaxb.gen."
+"SelfExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013"
+"\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000%net.sourceforge.czt.z.jaxb"
+".gen.OrExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000"
+"~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000&net.sourceforge.czt.z.j"
+"axb.gen.LetExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012"
+"psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00003net.sourceforge.czt"
+".zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2"
+"ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000&ne"
+"t.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f"
+"\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt"
+"\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edp"
+"p\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000!"
+"sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb.gen.HideExpr"
+"Elementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000"
+"\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.sourceforge.czt.oz.jaxb"
+".gen.ContainmentExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7"
+"q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+net.sourceforg"
+"e.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2pps"
+"q\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.s"
+"ourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000"
+"sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001cs"
+"q\u0000~\u0000\u001dt\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007"
+"\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExprEleme"
+"ntq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000"
+"~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.z.jaxb.gen.E"
+"xpr2NElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u0012psq"
+"\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.sourceforge.czt.z."
+"jaxb.gen.PipeExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007\u00ba\u00d7q\u0000~"
+"\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.sourceforge.c"
+"zt.z.jaxb.gen.ProjExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\f\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u000e\u0000\u0007"
+"\u00ba\u00d7q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.sourcefo"
+"rge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000!sr\u0000\"com.sun.msv.grammar.Expr"
+"essionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expr"
+"essionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPo"
+"ol$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001x[\u0000"
+"\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u008b\u0000\u0000\u0000\u00e6pur\u0000![Lc"
+"om.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffpppppq\u0000~\u0000hppp"
+"pppq\u0000~\u0000fppppppq\u0000~\u0000dppppppq\u0000~\u0000bppppppq\u0000~\u0000`ppppppq\u0000~\u0000^ppppppq\u0000"
+"~\u0000\\ppppppq\u0000~\u0000Zppppppq\u0000~\u0000Xppppppq\u0000~\u0000Vppppppq\u0000~\u0000Tppppppq\u0000~\u0000Rpp"
+"ppppq\u0000~\u0000Pppppppq\u0000~\u0000Nppppppq\u0000~\u0000Lppppppq\u0000~\u0000Jppppppq\u0000~\u0000Hppppppq"
+"\u0000~\u0000Fppppppq\u0000~\u0000Dppppppq\u0000~\u0000Bppppppq\u0000~\u0000@ppppppq\u0000~\u0000>ppppppppppq\u0000"
+"~\u0000\nppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~"
+"\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~"
+"\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0001\u0001q\u0000~\u0000\u00faq\u0000~\u0000\u00fbq\u0000~\u0000\u00f4q\u0000~\u0000\u00f5q\u0000~\u0000\u00eeq\u0000~\u0000\u00efq\u0000~\u0000\u00e8q\u0000~"
+"\u0000\u00e9q\u0000~\u0000\u00e2q\u0000~\u0000\u00e3q\u0000~\u0000\u00dcq\u0000~\u0000\u00ddq\u0000~\u0000\u00d6q\u0000~\u0000\u00d7q\u0000~\u0000\u0010q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~"
+"\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\rq\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~"
+"\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000\u00b2q\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u00c4q\u0000~\u0000\u00caq\u0000~\u0000\u00d0q\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~"
+"\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000\u00cbq\u0000~\u0000\u00d1q\u0000~\u0000eq\u0000~\u0000aq\u0000~\u0000]q\u0000~"
+"\u0000Yq\u0000~\u0000gq\u0000~\u0000cq\u0000~\u0000_q\u0000~\u0000[q\u0000~\u0001Iq\u0000~\u0000Wq\u0000~\u0001Hq\u0000~\u0001Oq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001Tq\u0000~"
+"\u0001[q\u0000~\u0000Uq\u0000~\u0001Zq\u0000~\u0001aq\u0000~\u0001`q\u0000~\u0001gq\u0000~\u0001fq\u0000~\u0001mq\u0000~\u0000Sq\u0000~\u0001lq\u0000~\u0001sq\u0000~\u0001rppp"
+"q\u0000~\u0000Qppppppq\u0000~\u0000Oppppppq\u0000~\u0000Mppppppq\u0000~\u0000Kppppppq\u0000~\u0000Ippppppq\u0000~\u0000G"
+"ppppppq\u0000~\u0000Eppppppq\u0000~\u0000Cppppppq\u0000~\u0000Appppppq\u0000~\u0000?ppppppq\u0000~\u0000=q\u0000~\u0000\""
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppq\u0000~"
+"\u0000\u0005pppppppppppppppppppppppppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.NameExprPairImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, value));
                            return ;
                        case  5 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
