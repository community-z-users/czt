//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.15 at 11:59:27 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class NameExprPairImpl implements net.sourceforge.czt.z.jaxb.gen.NameExprPair, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.NameExprPair.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.NameExprPairImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "Expr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Expr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.NameExprPair.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\b\u00b3\u0081\u00fcppsr\u0000\'com.sun.msv.gra"
+"mmar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/m"
+"sv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003\u0001\u0096`\u00a8pp\u0000sq\u0000~\u0000\u0000\u0001\u0096`\u009dppsq\u0000~\u0000\u0006\u0000(x3pp\u0000sr\u0000\u001dcom.sun.msv.grammar.Cho"
+"iceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000(x(ppsr\u0000 com.sun.msv.grammar.OneOrMo"
+"reExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000(x\u001dsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~"
+"\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003\u0000(x\u001aq\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.E"
+"xpression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0011\u0001q\u0000~"
+"\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun"
+".msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.E"
+"xpression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0017q\u0000~\u0000\u001csr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"t\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000\'net.source"
+"forge.czt.z.jaxb.gen.DeclNamet\u0000+http://java.sun.com/jaxb/xjc"
+"/dummy-elementssq\u0000~\u0000\f\u0001m\u00e8eppsq\u0000~\u0000\u0013\u0001m\u00e8Zq\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.g"
+"rammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datat"
+"ype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000"
+"~\u0000\u0003\u0001[\u0001,ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%c"
+"om.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.m"
+"sv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000"
+"\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/W"
+"hiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005Q"
+"Namesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collaps"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringP"
+"air\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000"
+"~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instance"
+"q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0004Namet\u0000\u001ehttp://czt.sourceforge.net/zmlsq\u0000~\u0000\f\u0007\u001d!"
+"Oppsq\u0000~\u0000\f\u0006\u00f4\u00a9\u001appsq\u0000~\u0000\f\u0006\u00cc0\u00e5ppsq\u0000~\u0000\f\u0006\u00a3\u00b8\u00b0ppsq\u0000~\u0000\f\u0006{@{ppsq\u0000~\u0000\f\u0006R\u00c8"
+"Fppsq\u0000~\u0000\f\u0006*P\u0011ppsq\u0000~\u0000\f\u0006\u0001\u00d7\u00dcppsq\u0000~\u0000\f\u0005\u00d9_\u00a7ppsq\u0000~\u0000\f\u0005\u00b0\u00e7rppsq\u0000~\u0000\f\u0005\u0088o"
+"=ppsq\u0000~\u0000\f\u0005_\u00f7\bppsq\u0000~\u0000\f\u00057~\u00d3ppsq\u0000~\u0000\f\u0005\u000f\u0006\u009eppsq\u0000~\u0000\f\u0004\u00e6\u008eippsq\u0000~\u0000\f\u0004\u00be\u0016"
+"4ppsq\u0000~\u0000\f\u0004\u0095\u009d\u00ffppsq\u0000~\u0000\f\u0004m%\u00cappsq\u0000~\u0000\f\u0004D\u00ad\u0095ppsq\u0000~\u0000\f\u0004\u001c5`ppsq\u0000~\u0000\f\u0003\u00f3\u00bd"
+"+ppsq\u0000~\u0000\f\u0003\u00cbD\u00f6ppsq\u0000~\u0000\f\u0003\u00a2\u00cc\u00c1ppsq\u0000~\u0000\f\u0003zT\u008cppsq\u0000~\u0000\f\u0003Q\u00dcWppsq\u0000~\u0000\f\u0003)d"
+"\"ppsq\u0000~\u0000\f\u0003\u0000\u00eb\u00edppsq\u0000~\u0000\f\u0002\u00d8s\u00b8ppsq\u0000~\u0000\f\u0002\u00af\u00fb\u0083ppsq\u0000~\u0000\f\u0002\u0087\u0083Nppsq\u0000~\u0000\f\u0002_\u000b"
+"\u0019ppsq\u0000~\u0000\f\u00026\u0092\u00e4ppsq\u0000~\u0000\f\u0002\u000e\u001a\u00afppsq\u0000~\u0000\f\u0001\u00e5\u00a2zppsq\u0000~\u0000\f\u0001\u00bd*Eppsq\u0000~\u0000\f\u0001\u0094\u00b2"
+"\u0010ppsq\u0000~\u0000\f\u0001l9\u00dbppsq\u0000~\u0000\f\u0001C\u00c1\u00a6ppsq\u0000~\u0000\f\u0001\u001bIqppsq\u0000~\u0000\f\u0000\u00f2\u00d1<ppsq\u0000~\u0000\f\u0000\u00caY"
+"\u0007ppsq\u0000~\u0000\f\u0000\u00a1\u00e0\u00d2ppsq\u0000~\u0000\f\u0000yh\u009dppsq\u0000~\u0000\f\u0000P\u00f0hppsq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000("
+"x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+"
+"net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp"
+"\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001c"
+"sq\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000!sq"
+"\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016"
+"q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprEle"
+"mentq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001a"
+"q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000+net.sourceforge.czt.z.jaxb.gen"
+".Expr2Elementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012ps"
+"q\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z"
+".jaxb.gen.SchExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e"
+"\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.source"
+"forge.czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000"
+"\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001d"
+"t\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000s"
+"q\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq"
+"\u0000~\u0000\u001dt\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000!sq\u0000~"
+"\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000"
+"~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000!"
+"sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExpr"
+"q\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000"
+"\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.Set"
+"Exprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001a"
+"q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000%net.sourceforge.czt.z.jaxb.gen"
+".OrExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000"
+"(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.sourceforge.czt.z.jaxb."
+"gen.CompExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq"
+"\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z."
+"jaxb.gen.SchExpr2Elementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e"
+"\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.source"
+"forge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(pp"
+"sq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*net."
+"sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~"
+"\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000"
+"\u001dt\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000s"
+"q\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq"
+"\u0000~\u0000\u001dt\u00000net.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000!"
+"sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~"
+"\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001net.sourceforge.czt.z.jaxb.gen.BindSelE"
+"xprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~"
+"\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.sourceforge.czt.z.ja"
+"xb.gen.PipeExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012"
+"psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.sourceforge.czt"
+".z.jaxb.gen.ThetaExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq"
+"\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\'net.so"
+"urceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x"
+"(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*n"
+"et.sourceforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000s"
+"q\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq"
+"\u0000~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3"
+"pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001csq\u0000~\u0000\u001dt\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprElemen"
+"tq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~"
+"\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.z.jaxb.gen.La"
+"mbdaExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013"
+"\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourceforge.czt.z.jaxb"
+".gen.QntExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq"
+"\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000/net.sourceforge"
+".czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x("
+"ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000*ne"
+"t.sourceforge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq"
+"\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000"
+"~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3p"
+"p\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000!sq\u0000~\u0000"
+"\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000"
+"!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000"
+"~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00003net.sourceforge.czt.zpatt.jaxb.gen.Jok"
+"erExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012ps"
+"q\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z"
+".jaxb.gen.Qnt1ExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000"
+"\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000-net.sourc"
+"eforge.czt.z.jaxb.gen.RefExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f"
+"\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt"
+"\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000"
+"sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001cs"
+"q\u0000~\u0000\u001dt\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000!sq\u0000~\u0000\u0006"
+"\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000"
+"\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElemen"
+"tq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~"
+"\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00004net.sourceforge.czt.tcoz.jaxb.gen"
+".ChannelExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq"
+"\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00007net.sourceforge"
+".czt.oz.jaxb.gen.PromotedAttrExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq"
+"\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000"
+"~\u0000\u001dt\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3p"
+"p\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000"
+"!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000"
+"~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb.gen.BindExp"
+"rElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001dq\u0000~\u0000\u0012psq\u0000~\u0000\u0013"
+"\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000.net.sourceforge.czt.z.jaxb"
+".gen.CondExprElementq\u0000~\u0000!sq\u0000~\u0000\u0006\u0000(x3pp\u0000sq\u0000~\u0000\f\u0000(x(ppsq\u0000~\u0000\u000e\u0000(x\u001d"
+"q\u0000~\u0000\u0012psq\u0000~\u0000\u0013\u0000(x\u001aq\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000)net.sourceforg"
+"e.czt.z.jaxb.gen.ForallExprq\u0000~\u0000!sr\u0000\"com.sun.msv.grammar.Expr"
+"essionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expr"
+"essionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPo"
+"ol$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001x[\u0000"
+"\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u008b\u0000\u0000\u0000\u00e6pur\u0000![Lc"
+"om.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000@pppppppp"
+"ppppppppppppppppppppppppppq\u0000~\u0000`q\u0000~\u0000Kpppppppppppppppppppppppp"
+"pppppppppppq\u0000~\u0000Vq\u0000~\u0000Appppppppppppppppppppppppppppppppppq\u0000~\u0000a"
+"q\u0000~\u0000Lpppppppppppppppppppppppppppppppppppq\u0000~\u0000Wq\u0000~\u0000Bpppppppppp"
+"ppppppppppppppppppppppppq\u0000~\u0000bq\u0000~\u0000Mpppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000Xq\u0000~\u0000Cppppppppppppppppppppppppppppppppppq\u0000~\u0000cq\u0000"
+"~\u0000Npppppppppppppppppppppppppppppppppppq\u0000~\u0000Yq\u0000~\u0000Dpppppppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000dq\u0000~\u0000Opppppppppppppppppppppppppppp"
+"pppppppq\u0000~\u0000Zq\u0000~\u0000Eppppppq\u0000~\u0000\u0005pppppppppppppppppppppppppppq\u0000~\u0000e"
+"q\u0000~\u0000Ppppppppppppppppppppppppppppppppppppq\u0000~\u0000[q\u0000~\u0000Fpppppppppp"
+"ppppppppppppppppppppppppq\u0000~\u0000fq\u0000~\u0000Qpppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000\\q\u0000~\u0000Gppppppppppppppppppppppppppppppppppq\u0000~\u0000gq\u0000"
+"~\u0000Rq\u0000~\u0000=ppppppppppppppppppppppppppq\u0000~\u0000\npppppppq\u0000~\u0000]q\u0000~\u0000Hpppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0000hq\u0000~\u0000Sq\u0000~\u0000>ppppppppppppppp"
+"ppppppppq\u0000~\u0000\"ppppppppppq\u0000~\u0000^q\u0000~\u0000Ippppppppppppq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017"
+"q\u0000~\u00011q\u0000~\u0001+q\u0000~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010"
+"q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0001\u0001q\u0000~\u0000\u00faq\u0000~\u0000\u00fbq\u0000~\u0000\u00f4"
+"q\u0000~\u0000\u00f5q\u0000~\u0000\u00eeq\u0000~\u0000\u00efq\u0000~\u0000\u00e8q\u0000~\u0000\u00e9q\u0000~\u0000\u00e2q\u0000~\u0000\u00e3q\u0000~\u0000\u00dcq\u0000~\u0000\u00ddq\u0000~\u0000\u00d6q\u0000~\u0000\u00d7q\u0000~\u0000\u00cb"
+"q\u0000~\u0000\u00caq\u0000~\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u0010q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\rq\u0000~\u0000jq\u0000~\u0000p"
+"q\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008eq\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000Jq\u0000~\u0000\u00acq\u0000~\u0000\u00b2"
+"q\u0000~\u0000\u00b8q\u0000~\u0000\u00beq\u0000~\u0000\u00c4q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000~\u0000\u00a7q\u0000~\u0000\u00adq\u0000~\u0000\u00b3q\u0000~\u0000\u00b9"
+"q\u0000~\u0000\u00bfq\u0000~\u0000\u00c5q\u0000~\u0000Tq\u0000~\u0000_q\u0000~\u0001Iq\u0000~\u0001Hq\u0000~\u0001Oq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001Tq\u0000~\u0001[q\u0000~\u0001Z"
+"q\u0000~\u0001aq\u0000~\u0001`q\u0000~\u0001gq\u0000~\u0001fq\u0000~\u0000?q\u0000~\u0001mq\u0000~\u0001lq\u0000~\u0001sq\u0000~\u0001rq\u0000~\u0000U"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.NameExprPairImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  3 :
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, value));
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                        case  5 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 6, value));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
