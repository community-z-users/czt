//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class RenameExprElementImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl
    implements net.sourceforge.czt.z.jaxb.gen.RenameExprElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.RenameExprElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "RenameExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "RenameExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.RenameExprElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp\u0014\nr0p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004\u0014\nr%ppsq\u0000~\u0000\u0007\u0013\u0097\u00b9,ppsq\u0000~\u0000\u0007\u0012\u008c\u00d4\u008cppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001\u00df\t\u00cfppsq\u0000~\u0000\u0000\u0001\u00df\t\u00c4sr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0001\u00df\t\u00b9ppsq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dpp"
+"sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.m"
+"sv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0000h$\u0012q\u0000~\u0000\u0010psr\u0000"
+" com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tna"
+"meClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004\u0000h$\u000fq\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expressi"
+"on$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u001asr\u0000 c"
+"om.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.gr"
+"ammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expressi"
+"on$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001bq\u0000~\u0000 sr\u0000#com.s"
+"un.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljav"
+"a/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\"xq\u0000~\u0000\u001dt\u0000-net.sourceforge.c"
+"zt.z.jaxb.gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\f\u0001v\u00e5\u008cppsq\u0000~\u0000\u0017\u0001v\u00e5\u0081q\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.gr"
+"ammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dataty"
+"pe;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~"
+"\u0000\u0004\u0000\u0014t\u00fappsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
+"*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%co"
+"m.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.ms"
+"v.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\""
+"L\u0000\btypeNameq\u0000~\u0000\"L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Wh"
+"iteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QN"
+"amesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpres"
+"sion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u0010psr\u0000\u001bcom.sun.msv.util.StringPa"
+"ir\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\"L\u0000\fnamespaceURIq\u0000~\u0000\"xpq\u0000~\u00003q\u0000~"
+"\u00002sq\u0000~\u0000!t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq"
+"\u0000~\u0000 sq\u0000~\u0000!t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000 sq\u0000~\u0000"
+"\f\u0010\u00ad\u00ca\u00b8ppsq\u0000~\u0000\f\u0010E\u00a6\u008eppsq\u0000~\u0000\f\u000f\u00dd\u0082dppsq\u0000~\u0000\f\u000fu^:ppsq\u0000~\u0000\f\u000f\r:\u0010ppsq\u0000~\u0000"
+"\f\u000e\u00a5\u0015\u00e6ppsq\u0000~\u0000\f\u000e<\u00f1\u00bcppsq\u0000~\u0000\f\r\u00d4\u00cd\u0092ppsq\u0000~\u0000\f\rl\u00a9hppsq\u0000~\u0000\f\r\u0004\u0085>ppsq\u0000~\u0000"
+"\f\f\u009ca\u0014ppsq\u0000~\u0000\f\f4<\u00eappsq\u0000~\u0000\f\u000b\u00cc\u0018\u00c0ppsq\u0000~\u0000\f\u000bc\u00f4\u0096ppsq\u0000~\u0000\f\n\u00fb\u00d0lppsq\u0000~\u0000"
+"\f\n\u0093\u00acBppsq\u0000~\u0000\f\n+\u0088\u0018ppsq\u0000~\u0000\f\t\u00c3c\u00eeppsq\u0000~\u0000\f\t[?\u00c4ppsq\u0000~\u0000\f\b\u00f3\u001b\u009appsq\u0000~\u0000"
+"\f\b\u008a\u00f7pppsq\u0000~\u0000\f\b\"\u00d3Fppsq\u0000~\u0000\f\u0007\u00ba\u00af\u001cppsq\u0000~\u0000\f\u0007R\u008a\u00f2ppsq\u0000~\u0000\f\u0006\u00eaf\u00c8ppsq\u0000~\u0000"
+"\f\u0006\u0082B\u009eppsq\u0000~\u0000\f\u0006\u001a\u001etppsq\u0000~\u0000\f\u0005\u00b1\u00faJppsq\u0000~\u0000\f\u0005I\u00d6 ppsq\u0000~\u0000\f\u0004\u00e1\u00b1\u00f6ppsq\u0000~\u0000"
+"\f\u0004y\u008d\u00ccppsq\u0000~\u0000\f\u0004\u0011i\u00a2ppsq\u0000~\u0000\f\u0003\u00a9Exppsq\u0000~\u0000\f\u0003A!Nppsq\u0000~\u0000\f\u0002\u00d8\u00fd$ppsq\u0000~\u0000"
+"\f\u0002p\u00d8\u00fappsq\u0000~\u0000\f\u0002\b\u00b4\u00d0ppsq\u0000~\u0000\f\u0001\u00a0\u0090\u00a6ppsq\u0000~\u0000\f\u00018l|ppsq\u0000~\u0000\f\u0000\u00d0HRppsq\u0000~\u0000"
+"\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00004net.sourceforge.czt.tcoz.jaxb.gen.ChannelExp"
+"rElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017"
+"\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+net.sourceforge.czt.z.jaxb"
+".gen.Expr2Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~"
+"\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000%net.sourceforge.c"
+"zt.z.jaxb.gen.OrExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012"
+"q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00002net.sourceforg"
+"e.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f"
+"\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t"
+"\u00000net.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000%sq\u0000~\u0000"
+"\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~"
+"\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000%s"
+"q\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000"
+"\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprE"
+"lementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h"
+"$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.sourceforge.czt.z.jaxb.g"
+"en.LambdaExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourceforge.czt.z"
+".jaxb.gen.ImpliesExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$"
+"\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000*net.sourcefor"
+"ge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dpps"
+"q\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)net.s"
+"ourceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f"
+"\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t"
+"\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$("
+"pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~"
+"\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.NegExprq\u0000~\u0000%sq\u0000~\u0000\u0000"
+"\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000"
+"\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprEleme"
+"ntq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000"
+"~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.S"
+"etExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h"
+"$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.g"
+"en.PreExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~"
+"\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00003net.sourceforge.czt.zpat"
+"t.jaxb.gen.JokerExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000"
+"~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000%net.sou"
+"rceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dpp"
+"sq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000/net."
+"sourceforge.czt.z.jaxb.gen.DecorExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp"
+"\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 "
+"sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000%s"
+"q\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000"
+"\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NEle"
+"mentq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000f"
+"q\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourceforge.czt.z.jaxb.gen"
+".PowerExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~"
+"\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.ja"
+"xb.gen.RefExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$"
+"\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourcefor"
+"ge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001d"
+"ppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.ne"
+"t.sourceforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(p"
+"p\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000"
+" sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000"
+"%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000"
+"~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NE"
+"lementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h"
+"$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.g"
+"en.BindExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000"
+"~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00001net.sourceforge."
+"czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$"
+"\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000)n"
+"et.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq"
+"\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000"
+"~\u0000!t\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000%sq\u0000"
+"~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq"
+"\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000"
+"~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010p"
+"q\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdE"
+"xprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq"
+"\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen."
+"LetExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000"
+"h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb."
+"gen.NumExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000"
+"~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000.net.sourceforge."
+"czt.z.jaxb.gen.CondExprElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dpp"
+"sq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net."
+"sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000"
+"h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000"
+"*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000h$(pp"
+"\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 "
+"sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000"
+"h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001e"
+"q\u0000~\u0000 sq\u0000~\u0000!t\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExprq\u0000~\u0000%sq"
+"\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001a"
+"q\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~"
+"\u0000%sq\u0000~\u0000\u0014\u0001\n\u00e4\u009bppsq\u0000~\u0000\f\u0001\n\u00e4\u0098ppsq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$"
+"\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u00002net.sourcefor"
+"ge.czt.z.jaxb.gen.NameNamePairElementq\u0000~\u0000%sq\u0000~\u0000\u0000\u0000\u00a2\u00c0npp\u0000sq\u0000~\u0000"
+"\u0007\u0000\u00a2\u00c0cppsq\u0000~\u0000\u0000\u0000h$(pp\u0000sq\u0000~\u0000\f\u0000h$\u001dppsq\u0000~\u0000\u0014\u0000h$\u0012q\u0000~\u0000\u0010psq\u0000~\u0000\u0017\u0000h$\u000fq\u0000"
+"~\u0000\u0010pq\u0000~\u0000\u001aq\u0000~\u0000\u001eq\u0000~\u0000 sq\u0000~\u0000!t\u0000+net.sourceforge.czt.z.jaxb.gen.N"
+"ameNamePairq\u0000~\u0000%sq\u0000~\u0000\f\u0000:\u009c6ppsq\u0000~\u0000\u0017\u0000:\u009c+q\u0000~\u0000\u0010pq\u0000~\u0000+sq\u0000~\u0000!q\u0000~\u0000<"
+"q\u0000~\u0000=q\u0000~\u0000 sq\u0000~\u0000!t\u0000\fNameNamePairq\u0000~\u0000@sq\u0000~\u0000\f\u0000r\u00b8\u00f4ppsq\u0000~\u0000\u0017\u0000r\u00b8\u00e9q\u0000"
+"~\u0000\u0010pq\u0000~\u0000+sq\u0000~\u0000!q\u0000~\u0000<q\u0000~\u0000=q\u0000~\u0000 sq\u0000~\u0000!t\u0000\nRenameExprq\u0000~\u0000@sr\u0000\"co"
+"m.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lco"
+"m/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.ms"
+"v.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthr"
+"esholdL\u0000\u0006parentq\u0000~\u0001z[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Express"
+"ion;xp\u0000\u0000\u0000\u008b\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n"
+"\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0000Cpppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppq\u0000~\u0000Fq\u0000~\u0000Sq\u0000~\u0000`ppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppq\u0000~\u0000Iq\u0000~\u0000Vq\u0000~\u0000cpppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000\u0011ppppppppppppppppppq\u0000~\u0000Lq\u0000~\u0000Yq\u0000~\u0000fq\u0000~\u0000\rppq\u0000"
+"~\u0001hppppppppppppppppppppppppppppppq\u0000~\u0001Cq\u0000~\u0001=q\u0000~\u00017q\u0000~\u00011q\u0000~\u0001+q\u0000"
+"~\u0001%q\u0000~\u0001\u001fq\u0000~\u0001\u0019q\u0000~\u0001\u0013q\u0000~\u0001\rq\u0000~\u0001\u0007q\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000"
+"~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001\u0006q\u0000~\u0001\u0000q\u0000~\u0000Oq\u0000~\u0001\u0001q\u0000~\u0000\u00faq\u0000~\u0000\u00fbq\u0000~\u0000\u00f4q\u0000~\u0000\u00f5q\u0000~\u0000\u00eeq\u0000"
+"~\u0000\u00efq\u0000~\u0000\u00e8q\u0000~\u0000\u00e9q\u0000~\u0000\u00e2q\u0000~\u0000\u00e3q\u0000~\u0000\u00dcq\u0000~\u0000\u00ddq\u0000~\u0000\u00d6q\u0000~\u0000\u00d7q\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000"
+"~\u0000\u00a7q\u0000~\u0000\\q\u0000~\u0000\u00a6q\u0000~\u0000\u00adq\u0000~\u0000\u00acq\u0000~\u0000\u00b3q\u0000~\u0000\u00b2q\u0000~\u0000\u00b9q\u0000~\u0000\u00b8q\u0000~\u0000\u00bfq\u0000~\u0000\u00beq\u0000~\u0000\u00c5q\u0000"
+"~\u0000\u00c4q\u0000~\u0000\u00cbq\u0000~\u0000\u00caq\u0000~\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u0013q\u0000~\u0000jq\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000"
+"~\u0000\u008eq\u0000~\u0000\u0016q\u0000~\u0000kq\u0000~\u0000qq\u0000~\u0000wq\u0000~\u0000}q\u0000~\u0000\u0083q\u0000~\u0000\u0089q\u0000~\u0000\u008fq\u0000~\u0000\u0095q\u0000~\u0000\u009bq\u0000~\u0000\u00a1q\u0000"
+"~\u0001Bq\u0000~\u0001Iq\u0000~\u0001Hq\u0000~\u0001Oq\u0000~\u0000Rq\u0000~\u0000_q\u0000~\u0000Eq\u0000~\u0001Nq\u0000~\u0001Uq\u0000~\u0001Tq\u0000~\u0000Bq\u0000~\u0001[q\u0000"
+"~\u0001Zq\u0000~\u0001cq\u0000~\u0001bq\u0000~\u0001kq\u0000~\u0001jppppppppppppq\u0000~\u0001tpppq\u0000~\u0000\npppppppppppp"
+"pppppppppppppppppq\u0000~\u0000Hq\u0000~\u0000Uq\u0000~\u0000bpppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppq\u0000~\u0000Kq\u0000~\u0000Xq\u0000~\u0000eppppppppppppppq\u0000~"
+"\u0001`ppq\u0000~\u0001_ppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Nq\u0000~\u0000[q\u0000~"
+"\u0000hq\u0000~\u0000Appppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000Qq\u0000~\u0000^q\u0000~\u0000Dppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000Gq\u0000~\u0000Tq\u0000~\u0000apppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000\tpq\u0000~\u0000Jq\u0000~\u0000Wq\u0000~\u0000dpppq\u0000~\u0000\u000bppppppppp"
+"pppppppppppppppppppppq\u0000~\u0000&pppppppppppppppppppppq\u0000~\u0000Mq\u0000~\u0000Zq\u0000~"
+"\u0000gq\u0000~\u0001oppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppq\u0000~\u0000Pq\u0000~\u0000]"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprImpl)net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
