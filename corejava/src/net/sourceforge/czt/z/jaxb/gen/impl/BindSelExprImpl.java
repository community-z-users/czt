//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.05.14 at 01:55:34 NZST 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class BindSelExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl
    implements net.sourceforge.czt.z.jaxb.gen.BindSelExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.RefName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.BindSelExpr.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.RefName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.RefName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/zml", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.BindSelExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp^\u00ad\u00b1\u00bbppsq\u0000~\u0000\u0000\\\u0014S\u00fbppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00acJwppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00acJlsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0003\u00acJappsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001\u00f6\u00ef\nq\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0001\u00b5[9p"
+"psq\u0000~\u0000\u0015\u0001\u00b5[.q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000O;\u00b2ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007Xh\t\u007fppsq\u0000~\u0000\u0007Vq\u001aZppsq\u0000~\u0000\u0007"
+"Tz+5ppsq\u0000~\u0000\u0007R\u0083<\u0010ppsq\u0000~\u0000\u0007P\u008cL\u00ebppsq\u0000~\u0000\u0007N\u0095]\u00c6ppsq\u0000~\u0000\u0007L\u009en\u00a1ppsq\u0000~\u0000\u0007"
+"J\u00a7\u007f|ppsq\u0000~\u0000\u0007H\u00b0\u0090Wppsq\u0000~\u0000\u0007F\u00b9\u00a12ppsq\u0000~\u0000\u0007D\u00c2\u00b2\rppsq\u0000~\u0000\u0007B\u00cb\u00c2\u00e8ppsq\u0000~\u0000\u0007"
+"@\u00d4\u00d3\u00c3ppsq\u0000~\u0000\u0007>\u00dd\u00e4\u009eppsq\u0000~\u0000\u0007<\u00e6\u00f5yppsq\u0000~\u0000\u0007:\u00f0\u0006Tppsq\u0000~\u0000\u00078\u00f9\u0017/ppsq\u0000~\u0000\u0007"
+"7\u0002(\nppsq\u0000~\u0000\u00075\u000b8\u00e5ppsq\u0000~\u0000\u00073\u0014I\u00c0ppsq\u0000~\u0000\u00071\u001dZ\u009bppsq\u0000~\u0000\u0007/&kvppsq\u0000~\u0000\u0007"
+"-/|Qppsq\u0000~\u0000\u0007+8\u008d,ppsq\u0000~\u0000\u0007)A\u009e\u0007ppsq\u0000~\u0000\u0007\'J\u00ae\u00e2ppsq\u0000~\u0000\u0007%S\u00bf\u00bdppsq\u0000~\u0000\u0007"
+"#\\\u00d0\u0098ppsq\u0000~\u0000\u0007!e\u00e1sppsq\u0000~\u0000\u0007\u001fn\u00f2Nppsq\u0000~\u0000\u0007\u001dx\u0003)ppsq\u0000~\u0000\u0007\u001b\u0081\u0014\u0004ppsq\u0000~\u0000\u0007"
+"\u0019\u008a$\u00dfppsq\u0000~\u0000\u0007\u0017\u00935\u00bappsq\u0000~\u0000\u0007\u0015\u009cF\u0095ppsq\u0000~\u0000\u0007\u0013\u00a5Wpppsq\u0000~\u0000\u0007\u0011\u00aehKppsq\u0000~\u0000\u0007"
+"\u000f\u00b7y&ppsq\u0000~\u0000\u0007\r\u00c0\u008a\u0001ppsq\u0000~\u0000\u0007\u000b\u00c9\u009a\u00dcppsq\u0000~\u0000\u0007\t\u00d2\u00ab\u00b7ppsq\u0000~\u0000\u0007\u0007\u00db\u00bc\u0092ppsq\u0000~\u0000\u0007"
+"\u0005\u00e4\u00cdmppsq\u0000~\u0000\u0007\u0003\u00ed\u00deHppsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z"
+".jaxb.gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000"
+"\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourc"
+"eforge.czt.z.jaxb.gen.ImpliesExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef"
+"\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(n"
+"et.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000"
+"~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000#sq\u0000~\u0000\t"
+"\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq"
+"\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.Deco"
+"rExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z."
+"jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\r"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforg"
+"e.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018"
+"ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-ne"
+"t.sourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp"
+"\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.HideExprElementq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExp"
+"rq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.Fo"
+"rallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb"
+".gen.LetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z."
+"jaxb.gen.SetExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.cz"
+"t.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012"
+"\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.source"
+"forge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001"
+"\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"1net.sourceforge.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000#sq\u0000~\u0000"
+"\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExpr"
+"Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001"
+"\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00007net.sourceforge.czt.oz.jaxb"
+".gen.PromotedAttrExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq"
+"\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.so"
+"urceforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef"
+"#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000"
+"~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.CompExp"
+"rq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.Re"
+"fExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z."
+"jaxb.gen.OrExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt"
+".z.jaxb.gen.ProdExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\r"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforg"
+"e.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012"
+"\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.source"
+"forge.czt.z.jaxb.gen.PowerExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018pp"
+"sq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net."
+"sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000"
+"~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp"
+"\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.z.jaxb.gen.RenameE"
+"xprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.ja"
+"xb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.c"
+"zt.z.jaxb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018pps"
+"q\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.s"
+"ourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef"
+"\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.n"
+"et.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#"
+"pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.oz.jaxb.gen.ContainmentExprq\u0000"
+"~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000ep"
+"q\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.NegEx"
+"prq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.P"
+"ipeExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001"
+"\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb."
+"gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.cz"
+"t.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018"
+"ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(ne"
+"t.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~"
+"\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000"
+"\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.ProjExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp"
+"\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.QntExprE"
+"lementq\u0000~\u0000#sq\u0000~\u0000\t\u0002\u0099]\u00bbpp\u0000sq\u0000~\u0000\u0000\u0002\u0099]\u00b0ppsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018p"
+"psq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net"
+".sourceforge.czt.z.jaxb.gen.RefNameq\u0000~\u0000#sq\u0000~\u0000\u0007\u0000\u00a2n\u0088ppsq\u0000~\u0000\u0015\u0000\u00a2"
+"n}q\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Nameq\u0000~\u0000>sr\u0000\"com."
+"sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/"
+"sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv."
+"grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthres"
+"holdL\u0000\u0006parentq\u0000~\u0001\u0087[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expressio"
+"n;xp\u0000\u0000\u0000\u0091\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000"
+"\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0001\u0002q\u0000~\u0001\u0003q\u0000~\u0000jq\u0000~\u0000\u00fcq\u0000~\u0000iq\u0000~\u0000\u00fdq\u0000~\u0000hq\u0000~\u0000\u00f6q\u0000~\u0000\u00f7q\u0000~\u0000\u00f0q\u0000~"
+"\u0000\u00f1q\u0000~\u0000\u00eaq\u0000~\u0000eq\u0000~\u0000\u00ebq\u0000~\u0000dq\u0000~\u0000\u00e4q\u0000~\u0000cq\u0000~\u0000\u00e5q\u0000~\u0000\u00deq\u0000~\u0000\u00dfq\u0000~\u0000aq\u0000~\u0000\u00d8q\u0000~"
+"\u0000`q\u0000~\u0000\u00d9q\u0000~\u0000_q\u0000~\u0000\u00a2q\u0000~\u0000^q\u0000~\u0000\u00a9q\u0000~\u0000\u00a8q\u0000~\u0000\u00afq\u0000~\u0000\\q\u0000~\u0000fq\u0000~\u0000[q\u0000~\u0000\u00aeq\u0000~"
+"\u0000Zq\u0000~\u0000\u00b5q\u0000~\u0000Yq\u0000~\u0000\u00b4q\u0000~\u0000\u00bbq\u0000~\u0000\u00baq\u0000~\u0000Wq\u0000~\u0000\u00c1q\u0000~\u0000Vq\u0000~\u0000\u00c0q\u0000~\u0000Uq\u0000~\u0000\u00c7q\u0000~"
+"\u0000Tq\u0000~\u0000\u00c6q\u0000~\u0000Sq\u0000~\u0000\u00cdq\u0000~\u0000Rq\u0000~\u0000\u00ccq\u0000~\u0000Qq\u0000~\u0000\u00d3q\u0000~\u0000Pq\u0000~\u0000\u00d2q\u0000~\u0000Oq\u0000~\u0000\u0011q\u0000~"
+"\u0000Nq\u0000~\u0000lq\u0000~\u0000Mq\u0000~\u0000rq\u0000~\u0000Lq\u0000~\u0000xq\u0000~\u0000Kq\u0000~\u0000~q\u0000~\u0000\u0084q\u0000~\u0000\u008aq\u0000~\u0000Iq\u0000~\u0000\u0090q\u0000~"
+"\u0000Hq\u0000~\u0000\u0096q\u0000~\u0000\u009cq\u0000~\u0000\u0014q\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q\u0000~"
+"\u0000\u009dq\u0000~\u0000\u00a3q\u0000~\u0000Xq\u0000~\u0000]q\u0000~\u0000bq\u0000~\u0000gq\u0000~\u0000Jq\u0000~\u0000Gq\u0000~\u0001Kq\u0000~\u0001Jq\u0000~\u0000Fq\u0000~\u0001Qq\u0000~"
+"\u0001Pq\u0000~\u0000Eq\u0000~\u0001Wq\u0000~\u0001Vq\u0000~\u0000Dq\u0000~\u0001]q\u0000~\u0001\\q\u0000~\u0000Cq\u0000~\u0001cq\u0000~\u0001bq\u0000~\u0000Bq\u0000~\u0001iq\u0000~"
+"\u0001hq\u0000~\u0000Aq\u0000~\u0001oq\u0000~\u0001nq\u0000~\u0000@q\u0000~\u0001uq\u0000~\u0001tq\u0000~\u0000?q\u0000~\u0001}q\u0000~\u0001|ppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppq\u0000~\u0000$ppppq\u0000~\u0000\u000fpppppppppppppppppppppq\u0000~\u0000\bppppppp"
+"pppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppppppppp"
+"pppppppppppppppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppq\u0000~\u0001\u0081pp"
+"ppq\u0000~\u0001zpppppppppppppppppppppppppppppppppppppq\u0000~\u0001Eq\u0000~\u0001?q\u0000~\u00019q"
+"\u0000~\u00013q\u0000~\u0001-q\u0000~\u0001\'q\u0000~\u0001!q\u0000~\u0001\u001bq\u0000~\u0001\u0015q\u0000~\u0001\u000fq\u0000~\u0001\tq\u0000~\u0001Dq\u0000~\u0001>q\u0000~\u00018q\u0000~\u00012q"
+"\u0000~\u0001,q\u0000~\u0001&q\u0000~\u0001 q\u0000~\u0001\u001aq\u0000~\u0001\u0014q\u0000~\u0001\u000eq\u0000~\u0001\b"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  4 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr1Impl)net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, value));
                            return ;
                        case  4 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
