//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.05.13 at 03:14:32 NZST 
//


package net.sourceforge.czt.z.jaxb.gen.impl;

public class TupleExprImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl
    implements net.sourceforge.czt.z.jaxb.gen.TupleExpr, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.z.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.z.jaxb.gen.TupleExpr.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/zml";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "TupleExpr";
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/zml", "TupleExpr");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.z.jaxb.gen.TupleExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp]k<\u00a7p"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004]k<\u009cppsq\u0000~\u0000\u0007[\u00ef\u0088Rppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0003\u0087~\u00c0ppsq\u0000~\u0000\u0000\u0003\u0087~\u00b5sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000"
+"\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007\u0003\u0087~\u00aappsq\u0000~\u0000\u0000\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsr\u0000 com.sun.msv"
+".grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001"
+"xq\u0000~\u0000\u0004\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elemen"
+"tssq\u0000~\u0000\u000b\u0001\u0090\u008f\u0082ppsq\u0000~\u0000\u0016\u0001\u0090\u008fwq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataEx"
+"p\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006except"
+"q\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0004\u0000O;\u00b2ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq"
+"\u0000~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000"
+"\u0002L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004t"
+"ypet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\u000bXh\t\u008dppsq\u0000~\u0000"
+"\u0013Xh\t\u0082q\u0000~\u0000\u000fpsq\u0000~\u0000\u000bXh\t\u007fq\u0000~\u0000\u000fpsq\u0000~\u0000\u000bVq\u001aZq\u0000~\u0000\u000fpsq\u0000~\u0000\u000bTz+5q\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u000bR\u0083<\u0010q\u0000~\u0000\u000fpsq\u0000~\u0000\u000bP\u008cL\u00ebq\u0000~\u0000\u000fpsq\u0000~\u0000\u000bN\u0095]\u00c6q\u0000~\u0000\u000fpsq\u0000~\u0000\u000bL\u009en\u00a1q\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u000bJ\u00a7\u007f|q\u0000~\u0000\u000fpsq\u0000~\u0000\u000bH\u00b0\u0090Wq\u0000~\u0000\u000fpsq\u0000~\u0000\u000bF\u00b9\u00a12q\u0000~\u0000\u000fpsq\u0000~\u0000\u000bD\u00c2\u00b2"
+"\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u000bB\u00cb\u00c2\u00e8q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b@\u00d4\u00d3\u00c3q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b>\u00dd\u00e4\u009eq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u000b<\u00e6\u00f5yq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b:\u00f0\u0006Tq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b8\u00f9\u0017/q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b7\u0002(\nq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u000b5\u000b8\u00e5q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b3\u0014I\u00c0q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b1\u001dZ\u009bq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b/&kvq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u000b-/|Qq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b+8\u008d,q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b)A\u009e\u0007q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\'J\u00ae"
+"\u00e2q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b%S\u00bf\u00bdq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b#\\\u00d0\u0098q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b!e\u00e1sq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u000b\u001fn\u00f2Nq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u001dx\u0003)q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u001b\u0081\u0014\u0004q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0019\u008a$\u00dfq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u000b\u0017\u00935\u00baq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0015\u009cF\u0095q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0013\u00a5Wpq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0011\u00aehKq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u000b\u000f\u00b7y&q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\r\u00c0\u008a\u0001q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u000b\u00c9\u009a\u00dcq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\t\u00d2\u00ab"
+"\u00b7q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0007\u00db\u00bc\u0092q\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0005\u00e4\u00cdmq\u0000~\u0000\u000fpsq\u0000~\u0000\u000b\u0003\u00ed\u00deHq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.SchExpr2E"
+"lementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.ja"
+"xb.gen.ImpliesExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6"
+"\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourcefo"
+"rge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018"
+"ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,ne"
+"t.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~"
+"\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.z.jaxb.gen.Dec"
+"orExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~"
+"\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.c"
+"zt.z.jaxb.gen.SetCompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018pps"
+"q\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.s"
+"ourceforge.czt.z.jaxb.gen.BindExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000"
+"\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.Hid"
+"eExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.cz"
+"t.oz.jaxb.gen.PolyExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~"
+"\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sour"
+"ceforge.czt.z.jaxb.gen.ForallExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000"
+"\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u0000&net.sourceforge.czt.z.jaxb.gen.LetExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000"
+"\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.SetExprq\u0000~\u0000$sq\u0000~\u0000\u0000"
+"\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exp"
+"rq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef"
+"\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.ge"
+"n.NumExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\r"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sourceforg"
+"e.czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000"
+"~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~"
+"\u0000 t\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprElementq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt.oz.jaxb.gen.Pr"
+"omotedAttrExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000"
+"\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00004net.sourc"
+"eforge.czt.tcoz.jaxb.gen.ChannelExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000"
+"~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq"
+"\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000$s"
+"q\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.MuExp"
+"rq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef"
+"\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.ge"
+"n.CompExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt."
+"z.jaxb.gen.RefExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018pps"
+"q\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.s"
+"ourceforge.czt.z.jaxb.gen.OrExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b"
+"\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t"
+"\u0000\'net.sourceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000"
+"\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000$sq\u0000~\u0000\u0000"
+"\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.z.jaxb.gen.PowerExprq"
+"\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge.czt.z.jaxb.gen."
+"Expr1Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.cz"
+"t.z.jaxb.gen.IffExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013"
+"\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.source"
+"forge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000s"
+"q\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u00000net.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~\u0000$"
+"sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000f"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen.Exis"
+"tsExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.ja"
+"xb.gen.CondExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~"
+"\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sour"
+"ceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6"
+"\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000."
+"net.sourceforge.czt.z.jaxb.gen.Qnt1ExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef"
+"#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourceforge.czt.oz.jaxb.gen.ContainmentE"
+"xprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001"
+"\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb."
+"gen.NegExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt"
+".z.jaxb.gen.PipeExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013"
+"\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.source"
+"forge.czt.z.jaxb.gen.Expr2Elementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000"
+"\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u00002net.sourceforge.czt.z.jaxb.gen.TupleSelExprElementq\u0000~\u0000$sq"
+"\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.z.jaxb.gen.TupleE"
+"xprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001"
+"\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb."
+"gen.ProjExprq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000"
+"\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.cz"
+"t.z.jaxb.gen.ApplExprElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001\u00f6\u00ef#q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u000b\u0001\u00f6\u00ef\u0018"
+"ppsq\u0000~\u0000\u0013\u0001\u00f6\u00ef\rq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u00f6\u00ef\nq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-ne"
+"t.sourceforge.czt.z.jaxb.gen.QntExprElementq\u0000~\u0000$q\u0000~\u0000\u001fsq\u0000~\u0000\u000b\u0001"
+"{\u00b4Eppsq\u0000~\u0000\u0016\u0001{\u00b4:q\u0000~\u0000\u000fpq\u0000~\u0000*sq\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\tTupl"
+"eExprq\u0000~\u0000?sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
+"\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
+"xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002"
+"\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0001\u0082[\u0000\u0005tablet\u0000![Lcom/sun/msv"
+"/grammar/Expression;xp\u0000\u0000\u0000\u0090\u0000\u0000\u0000\u00e6pur\u0000![Lcom.sun.msv.grammar.Exp"
+"ression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffq\u0000~\u0001\u0005q\u0000~\u0001\u0006q\u0000~\u0000mq\u0000~\u0000\u00ffq\u0000~\u0000lq\u0000~\u0001\u0000q\u0000~\u0000k"
+"q\u0000~\u0000\u00f9q\u0000~\u0000\u00faq\u0000~\u0000\u00f3q\u0000~\u0000\u00f4q\u0000~\u0000\u00edq\u0000~\u0000hq\u0000~\u0000\u00eeq\u0000~\u0000gq\u0000~\u0000\u00e7q\u0000~\u0000fq\u0000~\u0000\u00e8q\u0000~\u0000\u00e1"
+"q\u0000~\u0000\u00e2q\u0000~\u0000dq\u0000~\u0000\u00dbq\u0000~\u0000cq\u0000~\u0000\u00dcq\u0000~\u0000bq\u0000~\u0000\u00abq\u0000~\u0000aq\u0000~\u0000\u00b2q\u0000~\u0000\u00b1q\u0000~\u0000\u00b8q\u0000~\u0000_"
+"q\u0000~\u0000iq\u0000~\u0000^q\u0000~\u0000\u00b7q\u0000~\u0000]q\u0000~\u0000\u00beq\u0000~\u0000\\q\u0000~\u0000\u00bdq\u0000~\u0000\u00c4q\u0000~\u0000\u00c3q\u0000~\u0000Zq\u0000~\u0000\u00caq\u0000~\u0000Y"
+"q\u0000~\u0000\u00c9q\u0000~\u0000Xq\u0000~\u0000\u00d0q\u0000~\u0000Wq\u0000~\u0000\u00cfq\u0000~\u0000Vq\u0000~\u0000\u00d6q\u0000~\u0000Uq\u0000~\u0000\u00d5q\u0000~\u0000Tq\u0000~\u0000\u0015q\u0000~\u0000S"
+"q\u0000~\u0000\u0012q\u0000~\u0000Rq\u0000~\u0000oq\u0000~\u0000Qq\u0000~\u0000uq\u0000~\u0000Pq\u0000~\u0000{q\u0000~\u0000Oq\u0000~\u0000\u0081q\u0000~\u0000Nq\u0000~\u0000\u0087q\u0000~\u0000\u008d"
+"q\u0000~\u0000\u0093q\u0000~\u0000Lq\u0000~\u0000\u0099q\u0000~\u0000Kq\u0000~\u0000\u009fq\u0000~\u0000\u00a5q\u0000~\u0000pq\u0000~\u0000vq\u0000~\u0000|q\u0000~\u0000\u0082q\u0000~\u0000\u0088q\u0000~\u0000\u008e"
+"q\u0000~\u0000\u0094q\u0000~\u0000\u009aq\u0000~\u0000\u00a0q\u0000~\u0000\u00a6q\u0000~\u0000\u00acq\u0000~\u0000[q\u0000~\u0000`q\u0000~\u0000eq\u0000~\u0000jq\u0000~\u0000Mq\u0000~\u0000Jq\u0000~\u0001N"
+"q\u0000~\u0001Mq\u0000~\u0000Iq\u0000~\u0001Tq\u0000~\u0001Sq\u0000~\u0000Hq\u0000~\u0001Zq\u0000~\u0001Yq\u0000~\u0000Gq\u0000~\u0001`q\u0000~\u0001_q\u0000~\u0000Fq\u0000~\u0001f"
+"q\u0000~\u0001eq\u0000~\u0000Eq\u0000~\u0001lq\u0000~\u0001kq\u0000~\u0000Dq\u0000~\u0001rq\u0000~\u0001qq\u0000~\u0000Cq\u0000~\u0001xq\u0000~\u0001wq\u0000~\u0000Bq\u0000~\u0000A"
+"q\u0000~\u0000@ppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001|pppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000%ppppq\u0000~\u0000\u0010pppppp"
+"pppppppppppppppq\u0000~\u0000\fpppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppq\u0000~\u0000\npppppppppppppppppppppppppppppppppppppppppppppppq\u0000"
+"~\u0001Hq\u0000~\u0001Bq\u0000~\u0001<q\u0000~\u00016q\u0000~\u00010q\u0000~\u0001*q\u0000~\u0001$q\u0000~\u0001\u001eq\u0000~\u0001\u0018q\u0000~\u0001\u0012q\u0000~\u0001\fq\u0000~\u0001Gq\u0000"
+"~\u0001Aq\u0000~\u0001;q\u0000~\u00015q\u0000~\u0001/q\u0000~\u0001)q\u0000~\u0001#q\u0000~\u0001\u001dq\u0000~\u0001\u0017q\u0000~\u0001\u0011q\u0000~\u0001\u000b"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NImpl)net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
