//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.02.19 at 05:33:12 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class StateImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.oz.jaxb.gen.State, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Decl = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributes _SecondaryAttributes;
    protected com.sun.xml.bind.util.ListImpl _Pred = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.State.class);
    }

    public java.util.List getDecl() {
        return _Decl;
    }

    public net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributes getSecondaryAttributes() {
        return _SecondaryAttributes;
    }

    public void setSecondaryAttributes(net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributes value) {
        _SecondaryAttributes = value;
    }

    public java.util.List getPred() {
        return _Pred;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Decl.size();
        int idx3 = 0;
        final int len3 = _Pred.size();
        super.serializeBody(context);
        while (idx1 != len1) {
            if (_Decl.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Decl");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Decl.get(idx_0 ++)), "Decl");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Decl.get(idx_1 ++)), "Decl");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
                context.endElement();
            }
        }
        if (_SecondaryAttributes!= null) {
            if (_SecondaryAttributes instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SecondaryAttributes), "SecondaryAttributes");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "SecondaryAttributes");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SecondaryAttributes), "SecondaryAttributes");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SecondaryAttributes), "SecondaryAttributes");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SecondaryAttributes), "SecondaryAttributes");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_Pred.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Pred");
                int idx_4 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_4 ++)), "Pred");
                context.endNamespaceDecls();
                int idx_5 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_5 ++)), "Pred");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Decl.size();
        int idx3 = 0;
        final int len3 = _Pred.size();
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_Decl.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
            } else {
                idx1 += 1;
            }
        }
        if (_SecondaryAttributes!= null) {
            if (_SecondaryAttributes instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SecondaryAttributes), "SecondaryAttributes");
            }
        }
        while (idx3 != len3) {
            if (_Pred.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
            } else {
                idx3 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Decl.size();
        int idx3 = 0;
        final int len3 = _Pred.size();
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_Decl.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
            } else {
                idx1 += 1;
            }
        }
        if (_SecondaryAttributes!= null) {
            if (_SecondaryAttributes instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SecondaryAttributes), "SecondaryAttributes");
            }
        }
        while (idx3 != len3) {
            if (_Pred.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
            } else {
                idx3 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.State.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u001a\u00b4\u00e1&ppsq\u0000~\u0000\u0000\tc\u00b7\u00f5ppsq\u0000~\u0000\u0000\u0005"
+"]\u0013\u00f9ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u001d\u00dc=p"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u001d\u00dc2sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002\u001d\u00dc\'ppsq\u0000~\u0000\n\u0001\u0015\u0012\u0090pp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u0015\u0012zq\u0000~\u0000\u000fpsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bx"
+"q\u0000~\u0000\u0003\u0001\u0015\u0012wq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen"
+".TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\b\u0001\b\u00c9\u0092ppsq\u0000~\u0000\u0016\u0001\b\u00c9\u0087q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u0007\u00bd\u001dppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000"
+"~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004"
+"Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\u0013\u0003?7\u00b7ppsq\u0000~\u0000\b"
+"\u0003?7\u00b4ppsq\u0000~\u0000\b\u0002*%\"ppsq\u0000~\u0000\n\u0001\u0015\u0012\u0090pp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z"
+".jaxb.gen.InclDeclElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090pp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000"
+"\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sourc"
+"eforge.czt.z.jaxb.gen.ConstDeclElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090pp\u0000sq\u0000~"
+"\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u0000-net.sourceforge.czt.z.jaxb.gen.VarDeclElementq\u0000~\u0000$sq\u0000~\u0000\b"
+"\u0004\u0006\u00a3\u00f7ppsq\u0000~\u0000\b\u0004\u0006\u00a3\u00ecq\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012"
+"zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000:net.sourcefor"
+"ge.czt.oz.jaxb.gen.SecondaryAttributesElementq\u0000~\u0000$sq\u0000~\u0000\n\u0002\u00f1\u0091Z"
+"q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002\u00f1\u0091Oppsq\u0000~\u0000\n\u0001\u0015\u0012\u0090pp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt."
+"oz.jaxb.gen.SecondaryAttributesq\u0000~\u0000$sq\u0000~\u0000\b\u0001\u00dc~\u00bappsq\u0000~\u0000\u0016\u0001\u00dc~\u00afq\u0000"
+"~\u0000\u000fpq\u0000~\u0000*sq\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0013SecondaryAttributest\u0000"
+"#http://czt.sourceforge.net/object-zq\u0000~\u0000\u001fsq\u0000~\u0000\b\u0011Q),ppsq\u0000~\u0000\u0013\u0011"
+"Q)!q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0011Q)\u001eq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0010<\u0016\u008cq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u000f\'\u0003\u00faq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\b\u000e\u0011\u00f1hq\u0000~\u0000\u000fpsq\u0000~\u0000\b\f\u00fc\u00de\u00d6q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u000b\u00e7\u00ccDq\u0000~\u0000\u000fpsq\u0000~\u0000\b\n\u00d2\u00b9\u00b2q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\b\t\u00bd\u00a7 q\u0000~\u0000\u000fpsq\u0000~\u0000\b\b\u00a8\u0094\u008eq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0007\u0093\u0081\u00fcq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0006~ojq"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0005i\\\u00d8q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0004TJFq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0003?7\u00b4q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0002"
+"*%\"q\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016"
+"\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.z.jaxb"
+".gen.FalsePredq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge."
+"czt.z.jaxb.gen.TruePredq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000"
+"~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sou"
+"rceforge.czt.z.jaxb.gen.ImpliesPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000"
+"~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~"
+"\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.MemPredElementq\u0000~\u0000$sq\u0000~\u0000"
+"\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.IffPredq\u0000"
+"~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.O"
+"rPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jax"
+"b.gen.ExistsPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012z"
+"q\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforg"
+"e.czt.z.jaxb.gen.Exists1Predq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085"
+"ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+ne"
+"t.sourceforge.czt.z.jaxb.gen.Pred2Elementq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000"
+"\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~"
+"\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.AndPredElementq\u0000~\u0000"
+"$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen.For"
+"allPredq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000"
+"~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.j"
+"axb.gen.NegPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~"
+"\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sour"
+"ceforge.czt.z.jaxb.gen.QntPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000s"
+"q\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.ExprPredElementq\u0000~\u0000$sq"
+"\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.zpatt.jaxb.gen.Jo"
+"kerPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0001\u0015\u0012\u0090q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001\u0015\u0012\u0085ppsq\u0000~\u0000\u0013\u0001\u0015\u0012zq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016\u0001\u0015\u0012wq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge."
+"czt.z.jaxb.gen.FactElementq\u0000~\u0000$q\u0000~\u0000\u001fsr\u0000\"com.sun.msv.grammar."
+"ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/"
+"ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expressi"
+"onPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~"
+"\u0000\u00dd[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000J\u0000\u0000\u0000rpur\u0000"
+"![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppq\u0000"
+"~\u0000{q\u0000~\u0000Bpppppppq\u0000~\u0000yppppppppq\u0000~\u0000wppppppppq\u0000~\u0000uppppppppq\u0000~\u0000sp"
+"pppppppq\u0000~\u0000qpppq\u0000~\u0000eppppq\u0000~\u0000oppppppppq\u0000~\u0000mppq\u0000~\u0000lpppppq\u0000~\u0000Vp"
+"pppq\u0000~\u0000kpppppq\u0000~\u0000Upppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppq\u0000~\u0000%pppppppppppppppppppppppppppppq\u0000~\u0000\u00c0q\u0000~\u0000\u00baq\u0000~\u0000\u00b4q\u0000"
+"~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000\u009cq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000\u00b9q\u0000~\u0000\u00b3q\u0000~\u0000\u00adq\u0000~\u0000\u00a7q\u0000"
+"~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000`q\u0000~\u0000Xq\u0000~\u0000Pq\u0000~\u0000Jq\u0000~\u0000Dq\u0000"
+"~\u0000\u0012q\u0000~\u0000~q\u0000~\u0000aq\u0000~\u0000Yq\u0000~\u0000zq\u0000~\u0000Aq\u0000~\u0000Qq\u0000~\u0000@q\u0000~\u0000Kq\u0000~\u0000Eq\u0000~\u0000\u0015q\u0000~\u0000\u0007q\u0000"
+"~\u0000\u00bfq\u0000~\u0000xq\u0000~\u0000\u00c6q\u0000~\u0000\u00c5q\u0000~\u0000\u00ccq\u0000~\u0000\u00cbq\u0000~\u0000\u00d2q\u0000~\u0000\u00d1q\u0000~\u0000\u00d8q\u0000~\u0000\u00d7q\u0000~\u0000vppppppp"
+"pq\u0000~\u0000tppppppppq\u0000~\u0000rppppppppq\u0000~\u0000pppppppq\u0000~\u0000^pq\u0000~\u0000nppppppppppp"
+"pppppppppppppppppq\u0000~\u0000\u0006pppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppq\u0000~\u0000\u0010pppppppppppppppppppppq\u0000~\u0000\tpppppppppppq\u0000"
+"~\u0000\u0005ppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  8 :
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  7 :
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  4 :
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SecondaryAttributes" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("SecondaryAttributes" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesElementImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 7;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  8 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  9 :
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  6 :
                        if (("SecondaryAttributes" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  5 :
                        _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  8 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  9 :
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  8 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  9 :
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 3, value)));
                            return ;
                        case  8 :
                            revertToParentFromText(value);
                            return ;
                        case  7 :
                            state = 8;
                            continue outer;
                        case  9 :
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 10, value)));
                            return ;
                        case  5 :
                            _SecondaryAttributes = ((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl.class), 6, value));
                            return ;
                        case  4 :
                            state = 7;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
