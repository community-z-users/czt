//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.15 at 11:59:27 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class InheritedClassImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.oz.jaxb.gen.InheritedClass, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.oz.jaxb.gen.RenameList _RenameList;
    protected net.sourceforge.czt.oz.jaxb.gen.ActualParameters _ActualParameters;
    protected net.sourceforge.czt.z.jaxb.gen.RefName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.InheritedClass.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.RenameList getRenameList() {
        return _RenameList;
    }

    public void setRenameList(net.sourceforge.czt.oz.jaxb.gen.RenameList value) {
        _RenameList = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.ActualParameters getActualParameters() {
        return _ActualParameters;
    }

    public void setActualParameters(net.sourceforge.czt.oz.jaxb.gen.ActualParameters value) {
        _ActualParameters = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.RefName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.RefName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_ActualParameters!= null) {
            if (_ActualParameters instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ActualParameters), "ActualParameters");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "ActualParameters");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ActualParameters), "ActualParameters");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ActualParameters), "ActualParameters");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ActualParameters), "ActualParameters");
                context.endElement();
            }
        }
        if (_RenameList!= null) {
            if (_RenameList instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _RenameList), "RenameList");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "RenameList");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RenameList), "RenameList");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RenameList), "RenameList");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _RenameList), "RenameList");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_ActualParameters!= null) {
            if (_ActualParameters instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ActualParameters), "ActualParameters");
            }
        }
        if (_RenameList!= null) {
            if (_RenameList instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _RenameList), "RenameList");
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_ActualParameters!= null) {
            if (_ActualParameters instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ActualParameters), "ActualParameters");
            }
        }
        if (_RenameList!= null) {
            if (_RenameList instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _RenameList), "RenameList");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.InheritedClass.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\n\u00f7\u00b7\u00b3ppsq\u0000~\u0000\u0000\b=\u00b0\u008cppsq\u0000~\u0000\u0000\u0005"
+"\u000fA\u00a6ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00c7JQp"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00c7JFsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001\u00c7J;ppsq\u0000~\u0000\n\u0000(x3pp\u0000sq\u0000~\u0000\b\u0000(x(ppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000(x\u001dq\u0000~\u0000\u000fpsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bx"
+"q\u0000~\u0000\u0003\u0000(x\u001aq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen"
+".TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\b\u0001\u009e\u00d2\u0003ppsq\u0000~\u0000\u0016\u0001\u009e\u00d1\u00f8q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001[\u0001,ppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000"
+"~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004"
+"Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\n\u0003G\u00f7Ppp\u0000sq\u0000~\u0000"
+"\u0000\u0003G\u00f7Eppsq\u0000~\u0000\n\u0000(x3pp\u0000sq\u0000~\u0000\b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000"
+"~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.R"
+"efNameq\u0000~\u0000$sq\u0000~\u0000\b\u0003\u001f\u007f\rppsq\u0000~\u0000\u0016\u0003\u001f\u007f\u0002q\u0000~\u0000\u000fpq\u0000~\u0000*sq\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<"
+"q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004Namet\u0000#http://czt.sourceforge.net/object-zsq\u0000~"
+"\u0000\b\u0003.n\u00e1ppsq\u0000~\u0000\b\u0003.n\u00d6q\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0000(x3q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000(x(ppsq\u0000~\u0000\u0013\u0000"
+"(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourcef"
+"orge.czt.oz.jaxb.gen.ActualParametersElementq\u0000~\u0000$sq\u0000~\u0000\n\u0003\u0005\u00f6\u00a1q"
+"\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0003\u0005\u00f6\u0096ppsq\u0000~\u0000\n\u0000(x3pp\u0000sq\u0000~\u0000\b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fps"
+"q\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.o"
+"z.jaxb.gen.ActualParametersq\u0000~\u0000$sq\u0000~\u0000\b\u0002\u00dd~^ppsq\u0000~\u0000\u0016\u0002\u00dd~Sq\u0000~\u0000\u000fp"
+"q\u0000~\u0000*sq\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0010ActualParametersq\u0000~\u0000Mq\u0000~\u0000"
+"\u001fsq\u0000~\u0000\b\u0002\u00ba\u0007\"ppsq\u0000~\u0000\b\u0002\u00ba\u0007\u0017q\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0000(x3q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000(x(ppsq"
+"\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.so"
+"urceforge.czt.oz.jaxb.gen.RenameListElementq\u0000~\u0000$sq\u0000~\u0000\n\u0002\u0091\u008e\u00e2q\u0000"
+"~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002\u0091\u008e\u00d7ppsq\u0000~\u0000\n\u0000(x3pp\u0000sq\u0000~\u0000\b\u0000(x(ppsq\u0000~\u0000\u0013\u0000(x\u001dq\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\u0016\u0000(x\u001aq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.oz"
+".jaxb.gen.RenameListq\u0000~\u0000$sq\u0000~\u0000\b\u0002i\u0016\u009fppsq\u0000~\u0000\u0016\u0002i\u0016\u0094q\u0000~\u0000\u000fpq\u0000~\u0000*sq"
+"\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\nRenameListq\u0000~\u0000Mq\u0000~\u0000\u001fsr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthreshold"
+"L\u0000\u0006parentq\u0000~\u0000y[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp"
+"\u0000\u0000\u0000\u001c\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000"
+"\u0000\u0000\u00bfppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005pppppppp"
+"pq\u0000~\u0000\u0010pppppppppq\u0000~\u0000%pppppppppppq\u0000~\u0000\tpppppppppq\u0000~\u0000Apppppppppq"
+"\u0000~\u0000Hpppppppppq\u0000~\u0000dpq\u0000~\u0000lpq\u0000~\u0000Opq\u0000~\u0000Wq\u0000~\u0000\u0006pppq\u0000~\u0000cq\u0000~\u0000sppq\u0000~\u0000"
+"Nq\u0000~\u0000^pppppppppppppppppppppppppppppppq\u0000~\u0000\u0015q\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000Zq\u0000~"
+"\u0000gq\u0000~\u0000opppppq\u0000~\u0000\u0012q\u0000~\u0000Cq\u0000~\u0000Qq\u0000~\u0000Yq\u0000~\u0000fq\u0000~\u0000npppppppq\u0000~\u0000\u0007pppppp"
+"pppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameNamePair" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameNamePair" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        if (("RenameList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("RenameList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListElementImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  4 :
                        if (("ActualParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("ActualParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 5;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  10 :
                        if (("ActualParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  9 :
                        _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("RenameList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  7 :
                        _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  4 :
                        state = 5;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  4 :
                        state = 5;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  9 :
                        _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                    case  4 :
                        state = 5;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  9 :
                            _ActualParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl.class), 10, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  7 :
                            _RenameList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl.class), 8, value));
                            return ;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 3, value));
                            return ;
                        case  5 :
                            state = 6;
                            continue outer;
                        case  4 :
                            state = 5;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
