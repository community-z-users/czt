//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.01 at 10:48:15 NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class OpPromotionExprImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl
    implements net.sourceforge.czt.oz.jaxb.gen.OpPromotionExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.Expr _Expr;
    protected net.sourceforge.czt.z.jaxb.gen.RefName _OpName;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.OpPromotionExpr.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.Expr getExpr() {
        return _Expr;
    }

    public void setExpr(net.sourceforge.czt.z.jaxb.gen.Expr value) {
        _Expr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.RefName getOpName() {
        return _OpName;
    }

    public void setOpName(net.sourceforge.czt.z.jaxb.gen.RefName value) {
        _OpName = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
                context.endElement();
            }
        }
        context.startElement("http://czt.sourceforge.net/object-z", "OpName");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OpName), "OpName");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OpName), "OpName");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _OpName), "OpName");
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_Expr!= null) {
            if (_Expr instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Expr), "Expr");
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.OpPromotionExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0005g=Qppsq\u0000~\u0000\u0000\u0003X\u00a8\u00d7ppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001\u00fc\u00cc\u00c6ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00fc\u00cc\u00bbsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0001\u00fc\u00cc\u00b0ppsq\u0000~\u0000\t\u0000\u0007\u00ba\u00edpp\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0000\u0007\u00ba\u00d4q\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0001\u00f5\u0011\u00bep"
+"psq\u0000~\u0000\u0015\u0001\u00f5\u0011\u00b3q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\f\u00bf\u00a2ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0001[\u00dc\fppsq\u0000~\u0000\u0007\u0001[\u00dc\u0001q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0007\u0001T!\u0012q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001Lf#q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001D\u00ab4q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001<\u00f0Eq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0007\u000155Vq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001-zgq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001%\u00bfxq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001\u001e\u0004\u0089"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001\u0016I\u009aq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001\u000e\u008e\u00abq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0001\u0006\u00d3\u00bcq\u0000~\u0000\u000epsq\u0000~\u0000\u0007"
+"\u0000\u00ff\u0018\u00cdq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00f7]\u00deq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00ef\u00a2\u00efq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00e7\u00e8\u0000q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0007\u0000\u00e0-\u0011q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00d8r\"q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00d0\u00b73q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00c8\u00fcDq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0007\u0000\u00c1AUq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00b9\u0086fq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00b1\u00cbwq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00aa\u0010\u0088"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u00a2U\u0099q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u009a\u009a\u00aaq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u0092\u00df\u00bbq\u0000~\u0000\u000epsq\u0000~\u0000\u0007"
+"\u0000\u008b$\u00ccq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u0083i\u00ddq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000{\u00ae\u00eeq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000s\u00f3\u00ffq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0007\u0000l9\u0010q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000d~!q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\\\u00c32q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000U\bCq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0007\u0000MMTq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000E\u0092eq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000=\u00d7vq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u00006\u001c\u0087"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000.a\u0098q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000&\u00a6\u00a9q\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u001e\u00eb\u00baq\u0000~\u0000\u000epsq\u0000~\u0000\u0007"
+"\u0000\u00170\u00cbq\u0000~\u0000\u000epsq\u0000~\u0000\u0007\u0000\u000fu\u00dcq\u0000~\u0000\u000epsq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000"
+"\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourc"
+"eforge.czt.z.jaxb.gen.SchExpr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000s"
+"q\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprElementq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jaxb.gen.PowerE"
+"xprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000"
+"\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00007net.sourceforge.czt.oz.jaxb"
+".gen.PromotedAttrExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2"
+"ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)ne"
+"t.sourceforge.czt.z.jaxb.gen.LambdaExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep"
+"\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.z.jaxb.gen.RenameExprElementq\u0000~"
+"\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~"
+"\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.Se"
+"tExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.z.jax"
+"b.gen.Expr2Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007"
+"\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourcefo"
+"rge.czt.z.jaxb.gen.SetCompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007"
+"\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000."
+"net.sourceforge.czt.z.jaxb.gen.CondExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba"
+"\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.z.jaxb.gen.TupleExprq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.Neg"
+"Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.z.jaxb"
+".gen.TupleSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq"
+"\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.so"
+"urceforge.czt.z.jaxb.gen.MuExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000"
+"\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+"/net.sourceforge.czt.z.jaxb.gen.ThetaExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000"
+"\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.BindExprEle"
+"mentq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.czt.tcoz.j"
+"axb.gen.ChannelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2pp"
+"sq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000,net."
+"sourceforge.czt.z.jaxb.gen.Expr0NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000e"
+"p\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000"
+"\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesExpr"
+"q\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4"
+"q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.z.jaxb.gen"
+".ForallExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt"
+".z.jaxb.gen.ExistsExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~"
+"\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sour"
+"ceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007"
+"\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000-net.sourceforge.czt.z.jaxb.gen.NumExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007"
+"\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.gen.Qnt1ExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000"
+"\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb."
+"gen.IffExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000e"
+"psq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt"
+".z.jaxb.gen.QntExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2pp"
+"sq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net."
+"sourceforge.czt.z.jaxb.gen.SchExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000"
+"\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~"
+"\u0000\u001esq\u0000~\u0000\u001ft\u0000(net.sourceforge.czt.oz.jaxb.gen.SelfExprq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000%net.sourceforge.czt.z.jaxb.gen.OrExprq\u0000"
+"~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.L"
+"etExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~"
+"\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.zpat"
+"t.jaxb.gen.JokerExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2p"
+"psq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net"
+".sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000"
+"~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007"
+"\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.z.jaxb.gen.RefExprEleme"
+"ntq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007"
+"\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.z.jaxb.g"
+"en.HideExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007"
+"\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourcefo"
+"rge.czt.oz.jaxb.gen.ContainmentExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000"
+"~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000+net.sourceforge.czt.z.jaxb.gen.Expr1Elementq\u0000~\u0000#sq\u0000~\u0000\t\u0000"
+"\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.z.jaxb.gen.DecorExprEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jax"
+"b.gen.CompExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge."
+"czt.z.jaxb.gen.BindSelExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000"
+"\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000,net.sourceforge.czt.z.jaxb.gen.Expr2NElementq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007"
+"\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.PipeExprq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.Pro"
+"jExprq\u0000~\u0000#sq\u0000~\u0000\t\u0000\u0007\u00ba\u00edq\u0000~\u0000\u000ep\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jax"
+"b.gen.ProdExprq\u0000~\u0000#q\u0000~\u0000\u001esq\u0000~\u0000\t\u0002\u000e\u0094upp\u0000sq\u0000~\u0000\u0000\u0002\u000e\u0094jppsq\u0000~\u0000\t\u0000\u0007\u00ba\u00edp"
+"p\u0000sq\u0000~\u0000\u0007\u0000\u0007\u00ba\u00e2ppsq\u0000~\u0000\u0012\u0000\u0007\u00ba\u00d7q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0000\u0007\u00ba\u00d4q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z.jaxb.gen.RefNameq\u0000~\u0000#sq\u0000~\u0000\u0007\u0002"
+"\u0006\u00d9xppsq\u0000~\u0000\u0015\u0002\u0006\u00d9mq\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0006OpNa"
+"met\u0000#http://czt.sourceforge.net/object-zsr\u0000\"com.sun.msv.gram"
+"mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
+"mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
+"essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006paren"
+"tq\u0000~\u0001\u0089[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0092\u0000\u0000\u0000\u00e6"
+"pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0002\u00ffppppp"
+"q\u0000~\u0000kppppppq\u0000~\u0000ippppppq\u0000~\u0000gppppppq\u0000~\u0000eppppppq\u0000~\u0000cppppppq\u0000~\u0000a"
+"ppppppq\u0000~\u0000_ppppppq\u0000~\u0000]ppppppq\u0000~\u0000[ppppppq\u0000~\u0000Yppppppq\u0000~\u0000Wppppp"
+"pq\u0000~\u0000Uppppppq\u0000~\u0000Sppppppq\u0000~\u0000Qppppppq\u0000~\u0000Oppppppq\u0000~\u0000Mppppppq\u0000~\u0000"
+"Kppppppq\u0000~\u0000Ipppppq\u0000~\u0000\u000fq\u0000~\u0000Gppppppq\u0000~\u0000Eppppppq\u0000~\u0000Cppppppq\u0000~\u0000\b"
+"q\u0000~\u0000Appppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000\u0005ppppppppp"
+"ppppppppppppppppppppppppppppppppppq\u0000~\u0001{ppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001Fq\u0000~\u0001@q\u0000~\u0001:q\u0000~"
+"\u00014q\u0000~\u0001.q\u0000~\u0001(q\u0000~\u0001\"q\u0000~\u0001\u001cq\u0000~\u0001\u0016q\u0000~\u0001\u0010q\u0000~\u0001\nq\u0000~\u0001Eq\u0000~\u0001?q\u0000~\u00019q\u0000~\u00013q\u0000~"
+"\u0001-q\u0000~\u0001\'q\u0000~\u0001!q\u0000~\u0001\u001bq\u0000~\u0001\u0015q\u0000~\u0001\u000fq\u0000~\u0001\tq\u0000~\u0001\u0003q\u0000~\u0001\u0004q\u0000~\u0000\u00fdq\u0000~\u0000\u00feq\u0000~\u0000\u00f7q\u0000~"
+"\u0000\u00f8q\u0000~\u0000\u00f1q\u0000~\u0000\u00f2q\u0000~\u0000\u00ebq\u0000~\u0000\u00ecq\u0000~\u0000\u00e5q\u0000~\u0000\u00e6q\u0000~\u0000\u00dfq\u0000~\u0000\u00e0q\u0000~\u0000\u00d9q\u0000~\u0000\u00daq\u0000~\u0000\u0014q\u0000~"
+"\u0000nq\u0000~\u0000tq\u0000~\u0000zq\u0000~\u0000\u0080q\u0000~\u0000\u0086q\u0000~\u0000\u008cq\u0000~\u0000\u0092q\u0000~\u0000\u0011q\u0000~\u0000mq\u0000~\u0000sq\u0000~\u0000yq\u0000~\u0000\u007fq\u0000~"
+"\u0000\u0085q\u0000~\u0000\u008bq\u0000~\u0000\u0091q\u0000~\u0000\u0097q\u0000~\u0000\u009dq\u0000~\u0000\u00a3q\u0000~\u0000\u00a9q\u0000~\u0000\u00afq\u0000~\u0000\u00b5q\u0000~\u0000\u00bbq\u0000~\u0000\u00c1q\u0000~\u0000\u00c7q\u0000~"
+"\u0000\u00cdq\u0000~\u0000\u00d3q\u0000~\u0000\u0098q\u0000~\u0000\u009eq\u0000~\u0000\u00a4q\u0000~\u0000\u00aaq\u0000~\u0000\u00b0q\u0000~\u0000\u00b6q\u0000~\u0000\u00bcq\u0000~\u0000\u00c2q\u0000~\u0000\u00c8q\u0000~\u0000\u00ceq\u0000~"
+"\u0000\u00d4q\u0000~\u0000hq\u0000~\u0000dq\u0000~\u0000`q\u0000~\u0000\\q\u0000~\u0000jq\u0000~\u0000fq\u0000~\u0000bq\u0000~\u0000^q\u0000~\u0001Lq\u0000~\u0000Zq\u0000~\u0001Kq\u0000~"
+"\u0001Rq\u0000~\u0001Qq\u0000~\u0001Xq\u0000~\u0001Wq\u0000~\u0001^q\u0000~\u0000Xq\u0000~\u0001]q\u0000~\u0001dq\u0000~\u0001cq\u0000~\u0001jq\u0000~\u0001iq\u0000~\u0001pq\u0000~"
+"\u0000Vq\u0000~\u0001oq\u0000~\u0001vq\u0000~\u0001uq\u0000~\u0001~q\u0000~\u0001}pq\u0000~\u0000Tppppppq\u0000~\u0000Rppppppq\u0000~\u0000Pppppp"
+"pq\u0000~\u0000Nppppppq\u0000~\u0000Lppppppq\u0000~\u0000Jppq\u0000~\u0000$pppq\u0000~\u0000Hppppppq\u0000~\u0000Fpppppp"
+"q\u0000~\u0000Dppppppq\u0000~\u0000Bppppppq\u0000~\u0000@ppppppppppq\u0000~\u0000?pppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0001\u0082pppppppp"
+"ppppppppppppppppppppppq\u0000~\u0000\u0006ppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        if (("SchExpr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExpr2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedAttrExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedAttrExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr0N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr0NElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Qnt1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Qnt1ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SelfExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SelfExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr1" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr1ElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr2N" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Expr2NElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 2;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        if (("OpName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 2;
                            return ;
                        }
                        break;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        if (("OpName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  3 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname));
                            return ;
                        }
                        _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        state = 2;
                        continue outer;
                    case  3 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, ___uri, ___local, ___qname));
                        return ;
                    case  6 :
                        _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  1 :
                            state = 2;
                            continue outer;
                        case  3 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _OpName = ((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 4, value));
                            return ;
                        case  6 :
                            _Expr = ((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 7, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
