//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.01.29 at 12:59:34 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class OperationImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.oz.jaxb.gen.Operation, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.oz.jaxb.gen.OperationBoxExpr _OperationBoxExpr;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.Operation.class);
    }

    public net.sourceforge.czt.oz.jaxb.gen.OperationBoxExpr getOperationBoxExpr() {
        return _OperationBoxExpr;
    }

    public void setOperationBoxExpr(net.sourceforge.czt.oz.jaxb.gen.OperationBoxExpr value) {
        _OperationBoxExpr = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_OperationBoxExpr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OperationBoxExpr), "OperationBoxExpr");
        } else {
            context.startElement("http://czt.sourceforge.net/object-z", "OperationBoxExpr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OperationBoxExpr), "OperationBoxExpr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OperationBoxExpr), "OperationBoxExpr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OperationBoxExpr), "OperationBoxExpr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_OperationBoxExpr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OperationBoxExpr), "OperationBoxExpr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_OperationBoxExpr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OperationBoxExpr), "OperationBoxExpr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.Operation.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp)\u00c0\u00dbvppsq\u0000~\u0000\u0000\n5\bcppsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0005\u00cd\u0080\u0088ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0005\u00cd\u0080}sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0005\u00cd\u0080rppsq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001\u00f8\u00bd\u0016q\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0003\u00d4\u00c3>p"
+"psq\u0000~\u0000\u0015\u0003\u00d4\u00c33q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00eb\u0090]ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\t\u0004g\u0087\u00d6pp\u0000sq\u0000~\u0000\u0000\u0004g\u0087\u00cbppsq\u0000~\u0000"
+"\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\'net.sourceforge.czt.z.jaxb.gen.DeclNameq\u0000~\u0000#"
+"sq\u0000~\u0000\u0007\u0002n\u00ca\u0097ppsq\u0000~\u0000\u0015\u0002n\u00ca\u008cq\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000\u0004Namet\u0000#http://czt.sourceforge.net/object-zsq\u0000~\u0000\u0007\u001f\u008b\u00d3\u000eppsq\u0000"
+"~\u0000\u0007\u001d\u0093\u0015\u00ddppsq\u0000~\u0000\u0007\u001b\u009aX\u00acppsq\u0000~\u0000\u0007\u0019\u00a1\u009b{ppsq\u0000~\u0000\u0007\u0017\u00a8\u00deJppsq\u0000~\u0000\u0007\u0015\u00b0!\u0019ppsq\u0000"
+"~\u0000\u0007\u0013\u00b7c\u00e8ppsq\u0000~\u0000\u0007\u0011\u00be\u00a6\u00b7ppsq\u0000~\u0000\u0007\u000f\u00c5\u00e9\u0086ppsq\u0000~\u0000\u0007\r\u00cd,Uppsq\u0000~\u0000\u0007\u000b\u00d4o$ppsq\u0000"
+"~\u0000\u0007\t\u00db\u00b1\u00f3ppsq\u0000~\u0000\u0007\u0007\u00e2\u00f4\u00c2ppsq\u0000~\u0000\u0007\u0005\u00ea7\u0091ppsq\u0000~\u0000\u0007\u0003\u00f1z`ppsq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq"
+"\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000"
+"~\u0000\u001ft\u0000.net.sourceforge.czt.oz.jaxb.gen.ExChoiceOpExprq\u0000~\u0000#sq\u0000"
+"~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.oz.jaxb.gen.RenameOpEx"
+"prElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000"
+"\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sourceforge.czt.oz.ja"
+"xb.gen.ConjOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00004net.sourceforge.c"
+"zt.oz.jaxb.gen.OperationExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001"
+"\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000"
+".net.sourceforge.czt.oz.jaxb.gen.DistConjOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8"
+"\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq"
+"\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.oz.jaxb.gen.BasicOpExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.oz.jaxb.gen"
+".ParenOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.oz"
+".jaxb.gen.ScopeEnrichOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000"
+"~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000)net.sou"
+"rceforge.czt.oz.jaxb.gen.SeqOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8"
+"\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000"
+"net.sourceforge.czt.oz.jaxb.gen.DistChoiceOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001"
+"\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge.czt.oz.jaxb.gen.OperationBoxEl"
+"ementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd"
+"\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.oz.jaxb.g"
+"en.ParallelOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~"
+"\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.c"
+"zt.oz.jaxb.gen.DistSeqOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq"
+"\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.so"
+"urceforge.czt.oz.jaxb.gen.HideOpExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp"
+"\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001e"
+"sq\u0000~\u0000\u001ft\u00006net.sourceforge.czt.oz.jaxb.gen.OpPromotionExprElem"
+"entq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f8\u00bd/pp\u0000sq\u0000~\u0000\u0007\u0001\u00f8\u00bd$ppsq\u0000~\u0000\u0012\u0001\u00f8\u00bd\u0019q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f8\u00bd\u0016q"
+"\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.oz.jaxb.gen"
+".AssoParallelOpExprq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPo"
+"ol\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPo"
+"ol$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Close"
+"dHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00bd[\u0000\u0005tablet\u0000"
+"![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000:\u0000\u0000\u0000rpur\u0000![Lcom.sun.m"
+"sv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000~\u0000|q\u0000~\u0000\u00b7q"
+"\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000\u0099q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~\u0000uq\u0000~\u0000oq"
+"\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000]q\u0000~\u0000Bq\u0000~\u0000\u0011q\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000jq\u0000~\u0000dq\u0000~\u0000^q\u0000~\u0000Cq\u0000~\u0000\u0014p"
+"pq\u0000~\u0000[pppppppppppppppq\u0000~\u0000Zpppppppppppppppq\u0000~\u0000Ypppppppppppppp"
+"pq\u0000~\u0000Xpppppppppppppppq\u0000~\u0000Wq\u0000~\u0000Gppppppppppppppq\u0000~\u0000Vppq\u0000~\u0000@ppp"
+"pppppppppq\u0000~\u0000Upppppppppppppppq\u0000~\u0000Tpppppppppppppppq\u0000~\u0000Spppppp"
+"pppppppppq\u0000~\u0000Rpppppppppppppppq\u0000~\u0000Qpppppppppppq\u0000~\u0000$pppq\u0000~\u0000Ppp"
+"ppppppppppppq\u0000~\u0000\u000fq\u0000~\u0000Opppppppppppppppq\u0000~\u0000Nppppq\u0000~\u0000\bppppq\u0000~\u0000\u0005"
+"pppppq\u0000~\u0000Mpppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppppppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppppq\u0000~\u0000\u0006ppq\u0000~\u0000\u00b8q\u0000~\u0000\u00b2q\u0000~\u0000\u00acq\u0000~\u0000\u00a6q\u0000~\u0000\u00a0q\u0000~\u0000\u009aq\u0000~\u0000\u0094q\u0000~\u0000\u008e"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  4 :
                        if (("ExChoiceOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConjOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OperationExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DistConjOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BasicOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParenOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ScopeEnrichOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DistChoiceOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OperationBox" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DistSeqOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OpPromotionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AssoParallelOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OperationBoxExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("OperationBoxExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("OperationBoxExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  6 :
                        _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  6 :
                            _OperationBoxExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl.class), 7, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
