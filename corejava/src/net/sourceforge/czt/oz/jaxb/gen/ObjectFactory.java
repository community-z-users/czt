//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the net.sourceforge.czt.oz.jaxb.gen package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
public class ObjectFactory
    extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.DefaultJAXBContextImpl
{

    private static java.util.HashMap defaultImplementations = new java.util.HashMap();
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);

    static {
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.DistOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.DistOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ParallelOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.AssoParallelOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.RenameList", "net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.InheritedClass", "net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.InheritedClassElement", "net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ExChoiceOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ParenOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ClassParaElement", "net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.SeqOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ConjOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.StringListType", "net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OperationExprElement", "net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OpPromotionExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.DistSeqOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OpPromotionExprElement", "net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.LocalDefElement", "net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.State", "net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributesElement", "net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.BasicOpExprElement", "net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OperationBoxElement", "net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.FormalParametersElement", "net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OperationExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.DistChoiceOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.MainOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.FormalParameters", "net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.BasicOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.RenameOpExprElement", "net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.LocalDef", "net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.StateElement", "net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.StringListTypeElement", "net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OperationBox", "net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ActualParameters", "net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.RenameOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.TwoOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.TwoOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ClassPara", "net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.OperationElement", "net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributes", "net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ScopeEnrichOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.Operation", "net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.HideOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.HideOpExprElement", "net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.InitialStateElement", "net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.ActualParametersElement", "net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.DistConjOpExpr", "net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.RenameListElement", "net.sourceforge.czt.oz.jaxb.gen.impl.RenameListElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.MainOpExprElement", "net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprElementImpl");
        defaultImplementations.put("net.sourceforge.czt.oz.jaxb.gen.InitialState", "net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl");
    }

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: net.sourceforge.czt.oz.jaxb.gen
     * 
     */
    public ObjectFactory() {
        super(new net.sourceforge.czt.oz.jaxb.gen.ObjectFactory.GrammarInfoImpl());
    }

    /**
     * Create an instance of the specified Java content interface.
     * 
     * @param javaContentInterface the Class object of the javacontent interface to instantiate
     * @return a new instance
     * @throws JAXBException if an error occurs
     */
    public java.lang.Object newInstance(java.lang.Class javaContentInterface)
        throws javax.xml.bind.JAXBException
    {
        return super.newInstance(javaContentInterface);
    }

    /**
     * Get the specified property. This method can only be
     * used to get provider specific properties.
     * Attempting to get an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @return the value of the requested property
     * @throws PropertyException when there is an error retrieving the given property or value
     */
    public java.lang.Object getProperty(java.lang.String name)
        throws javax.xml.bind.PropertyException
    {
        return super.getProperty(name);
    }

    /**
     * Set the specified property. This method can only be
     * used to set provider specific properties.
     * Attempting to set an undefined property will result
     * in a PropertyException being thrown.
     * 
     * @param name the name of the property to retrieve
     * @param value the value of the property to be set
     * @throws PropertyException when there is an error processing the given property or value
     */
    public void setProperty(java.lang.String name, java.lang.Object value)
        throws javax.xml.bind.PropertyException
    {
        super.setProperty(name, value);
    }

    /**
     * Create an instance of DistOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.DistOpExpr createDistOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.DistOpExprImpl();
    }

    /**
     * Create an instance of ParallelOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ParallelOpExpr createParallelOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl();
    }

    /**
     * Create an instance of AssoParallelOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.AssoParallelOpExpr createAssoParallelOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl();
    }

    /**
     * Create an instance of RenameList
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.RenameList createRenameList()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.RenameListImpl();
    }

    /**
     * Create an instance of InheritedClass
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.InheritedClass createInheritedClass()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl();
    }

    /**
     * Create an instance of InheritedClassElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.InheritedClassElement createInheritedClassElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl();
    }

    /**
     * Create an instance of ExChoiceOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ExChoiceOpExpr createExChoiceOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl();
    }

    /**
     * Create an instance of ParenOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ParenOpExpr createParenOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl();
    }

    /**
     * Create an instance of ClassParaElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ClassParaElement createClassParaElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl();
    }

    /**
     * Create an instance of SeqOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.SeqOpExpr createSeqOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl();
    }

    /**
     * Create an instance of ConjOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ConjOpExpr createConjOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl();
    }

    /**
     * Create an instance of StringListType
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.StringListType createStringListType()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl();
    }

    /**
     * Create an instance of OperationExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OperationExprElement createOperationExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl();
    }

    /**
     * Create an instance of OpPromotionExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OpPromotionExpr createOpPromotionExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprImpl();
    }

    /**
     * Create an instance of DistSeqOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.DistSeqOpExpr createDistSeqOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl();
    }

    /**
     * Create an instance of OpPromotionExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OpPromotionExprElement createOpPromotionExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl();
    }

    /**
     * Create an instance of LocalDefElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.LocalDefElement createLocalDefElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl();
    }

    /**
     * Create an instance of State
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.State createState()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl();
    }

    /**
     * Create an instance of SecondaryAttributesElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributesElement createSecondaryAttributesElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesElementImpl();
    }

    /**
     * Create an instance of BasicOpExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.BasicOpExprElement createBasicOpExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl();
    }

    /**
     * Create an instance of OperationBoxElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OperationBoxElement createOperationBoxElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxElementImpl();
    }

    /**
     * Create an instance of FormalParametersElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.FormalParametersElement createFormalParametersElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl();
    }

    /**
     * Create an instance of OperationExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OperationExpr createOperationExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl();
    }

    /**
     * Create an instance of DistChoiceOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.DistChoiceOpExpr createDistChoiceOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl();
    }

    /**
     * Create an instance of MainOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.MainOpExpr createMainOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl();
    }

    /**
     * Create an instance of FormalParameters
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.FormalParameters createFormalParameters()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl();
    }

    /**
     * Create an instance of BasicOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.BasicOpExpr createBasicOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprImpl();
    }

    /**
     * Create an instance of RenameOpExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.RenameOpExprElement createRenameOpExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl();
    }

    /**
     * Create an instance of LocalDef
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.LocalDef createLocalDef()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl();
    }

    /**
     * Create an instance of StateElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.StateElement createStateElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl();
    }

    /**
     * Create an instance of StringListTypeElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.StringListTypeElement createStringListTypeElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeElementImpl();
    }

    /**
     * Create an instance of OperationBox
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OperationBox createOperationBox()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl();
    }

    /**
     * Create an instance of ActualParameters
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ActualParameters createActualParameters()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersImpl();
    }

    /**
     * Create an instance of RenameOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.RenameOpExpr createRenameOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprImpl();
    }

    /**
     * Create an instance of TwoOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.TwoOpExpr createTwoOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.TwoOpExprImpl();
    }

    /**
     * Create an instance of ClassPara
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ClassPara createClassPara()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl();
    }

    /**
     * Create an instance of OperationElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.OperationElement createOperationElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl();
    }

    /**
     * Create an instance of SecondaryAttributes
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributes createSecondaryAttributes()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesImpl();
    }

    /**
     * Create an instance of ScopeEnrichOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ScopeEnrichOpExpr createScopeEnrichOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl();
    }

    /**
     * Create an instance of Operation
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.Operation createOperation()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl();
    }

    /**
     * Create an instance of HideOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.HideOpExpr createHideOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprImpl();
    }

    /**
     * Create an instance of HideOpExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.HideOpExprElement createHideOpExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl();
    }

    /**
     * Create an instance of InitialStateElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.InitialStateElement createInitialStateElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl();
    }

    /**
     * Create an instance of ActualParametersElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.ActualParametersElement createActualParametersElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersElementImpl();
    }

    /**
     * Create an instance of DistConjOpExpr
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.DistConjOpExpr createDistConjOpExpr()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl();
    }

    /**
     * Create an instance of RenameListElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.RenameListElement createRenameListElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.RenameListElementImpl();
    }

    /**
     * Create an instance of MainOpExprElement
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.MainOpExprElement createMainOpExprElement()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprElementImpl();
    }

    /**
     * Create an instance of InitialState
     * 
     * @throws JAXBException if an error occurs
     */
    public net.sourceforge.czt.oz.jaxb.gen.InitialState createInitialState()
        throws javax.xml.bind.JAXBException
    {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl();
    }

    private static class GrammarInfoImpl
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractGrammarInfoImpl
    {


        public java.lang.Class getDefaultImplementation(java.lang.Class javaContentInterface) {
            java.lang.Class c = null;
            try {
                c = java.lang.Class.forName(((java.lang.String) defaultImplementations.get(javaContentInterface.getName())));
            } catch (java.lang.Exception _x) {
                c = null;
            }
            return c;
        }

        public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(java.lang.String uri, java.lang.String local, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            if (("InheritedClass" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl().createUnmarshaller(context);
            }
            if (("BasicOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl().createUnmarshaller(context);
            }
            if (("SeqOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl().createUnmarshaller(context);
            }
            if (("ConjOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl().createUnmarshaller(context);
            }
            if (("Operation" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl().createUnmarshaller(context);
            }
            if (("RenameOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl().createUnmarshaller(context);
            }
            if (("ParallelOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl().createUnmarshaller(context);
            }
            if (("ClassPara" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl().createUnmarshaller(context);
            }
            if (("State" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl().createUnmarshaller(context);
            }
            if (("DistConjOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl().createUnmarshaller(context);
            }
            if (("SecondaryAttributes" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesElementImpl().createUnmarshaller(context);
            }
            if (("DistChoiceOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl().createUnmarshaller(context);
            }
            if (("FormalParameters" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl().createUnmarshaller(context);
            }
            if (("OperationBox" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxElementImpl().createUnmarshaller(context);
            }
            if (("InitialState" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl().createUnmarshaller(context);
            }
            if (("HideOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl().createUnmarshaller(context);
            }
            if (("LocalDef" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl().createUnmarshaller(context);
            }
            if (("OperationExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl().createUnmarshaller(context);
            }
            if (("ExChoiceOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl().createUnmarshaller(context);
            }
            if (("AssoParallelOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl().createUnmarshaller(context);
            }
            if (("ScopeEnrichOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl().createUnmarshaller(context);
            }
            if (("ParenOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl().createUnmarshaller(context);
            }
            if (("RenameList" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.RenameListElementImpl().createUnmarshaller(context);
            }
            if (("StringListType" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeElementImpl().createUnmarshaller(context);
            }
            if (("OpPromotionExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl().createUnmarshaller(context);
            }
            if (("ActualParameters" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersElementImpl().createUnmarshaller(context);
            }
            if (("MainOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprElementImpl().createUnmarshaller(context);
            }
            if (("DistSeqOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return new net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl().createUnmarshaller(context);
            }
            return null;
        }

        public java.lang.Class getRootElement(java.lang.String uri, java.lang.String local) {
            if (("InheritedClass" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl.class);
            }
            if (("BasicOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl.class);
            }
            if (("SeqOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl.class);
            }
            if (("ConjOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl.class);
            }
            if (("Operation" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class);
            }
            if (("RenameOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl.class);
            }
            if (("ParallelOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl.class);
            }
            if (("ClassPara" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class);
            }
            if (("State" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.class);
            }
            if (("DistConjOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl.class);
            }
            if (("SecondaryAttributes" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.SecondaryAttributesElementImpl.class);
            }
            if (("DistChoiceOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl.class);
            }
            if (("FormalParameters" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl.class);
            }
            if (("OperationBox" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxElementImpl.class);
            }
            if (("InitialState" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl.class);
            }
            if (("HideOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl.class);
            }
            if (("LocalDef" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl.class);
            }
            if (("OperationExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl.class);
            }
            if (("ExChoiceOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl.class);
            }
            if (("AssoParallelOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl.class);
            }
            if (("ScopeEnrichOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl.class);
            }
            if (("ParenOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl.class);
            }
            if (("RenameList" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.RenameListElementImpl.class);
            }
            if (("StringListType" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeElementImpl.class);
            }
            if (("OpPromotionExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl.class);
            }
            if (("ActualParameters" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.ActualParametersElementImpl.class);
            }
            if (("MainOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprElementImpl.class);
            }
            if (("DistSeqOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return (net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl.class);
            }
            return null;
        }

        public boolean recognize(java.lang.String uri, java.lang.String local) {
            if (("InheritedClass" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("BasicOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("SeqOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ConjOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("Operation" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("RenameOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ParallelOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ClassPara" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("State" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("DistConjOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("SecondaryAttributes" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("DistChoiceOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("FormalParameters" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("OperationBox" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("InitialState" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("HideOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("LocalDef" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("OperationExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ExChoiceOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("AssoParallelOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ScopeEnrichOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ParenOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("RenameList" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("StringListType" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("OpPromotionExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("ActualParameters" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("MainOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            if (("DistSeqOpExpr" == local)&&("http://czt.sourceforge.net/object-z" == uri)) {
                return true;
            }
            return false;
        }

        public java.lang.String[] getProbePoints() {
            return new java.lang.String[] {"http://czt.sourceforge.net/object-z", "InheritedClass", "http://czt.sourceforge.net/object-z", "BasicOpExpr", "http://czt.sourceforge.net/object-z", "SeqOpExpr", "http://czt.sourceforge.net/object-z", "ConjOpExpr", "http://czt.sourceforge.net/object-z", "Operation", "http://czt.sourceforge.net/object-z", "RenameOpExpr", "http://czt.sourceforge.net/object-z", "ParallelOpExpr", "http://czt.sourceforge.net/object-z", "ClassPara", "http://czt.sourceforge.net/object-z", "State", "http://czt.sourceforge.net/object-z", "DistConjOpExpr", "http://czt.sourceforge.net/object-z", "SecondaryAttributes", "http://czt.sourceforge.net/object-z", "DistChoiceOpExpr", "http://czt.sourceforge.net/object-z", "FormalParameters", "http://czt.sourceforge.net/object-z", "OperationBox", "http://czt.sourceforge.net/object-z", "InitialState", "http://czt.sourceforge.net/object-z", "HideOpExpr", "http://czt.sourceforge.net/object-z", "LocalDef", "http://czt.sourceforge.net/object-z", "OperationExpr", "http://czt.sourceforge.net/object-z", "ExChoiceOpExpr", "http://czt.sourceforge.net/object-z", "AssoParallelOpExpr", "http://czt.sourceforge.net/object-z", "ScopeEnrichOpExpr", "http://czt.sourceforge.net/object-z", "ParenOpExpr", "http://czt.sourceforge.net/object-z", "RenameList", "http://czt.sourceforge.net/object-z", "StringListType", "http://czt.sourceforge.net/object-z", "OpPromotionExpr", "http://czt.sourceforge.net/object-z", "ActualParameters", "http://czt.sourceforge.net/object-z", "MainOpExpr", "http://czt.sourceforge.net/object-z", "DistSeqOpExpr"};
        }

    }

}
