//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.02.13 at 10:27:41 GMT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassSignatureImpl implements net.sourceforge.czt.oz.jaxb.gen.ClassSignature, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Visibility;
    protected com.sun.xml.bind.util.ListImpl _Operation;
    protected com.sun.xml.bind.util.ListImpl _Attribute;
    protected net.sourceforge.czt.z.jaxb.gen.Signature _State;
    protected com.sun.xml.bind.util.ListImpl _ParentClass;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _ClassName;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassSignature.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getVisibility() {
        if (_Visibility == null) {
            _Visibility = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Visibility;
    }

    public java.util.List getVisibility() {
        return _getVisibility();
    }

    protected com.sun.xml.bind.util.ListImpl _getOperation() {
        if (_Operation == null) {
            _Operation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Operation;
    }

    public java.util.List getOperation() {
        return _getOperation();
    }

    protected com.sun.xml.bind.util.ListImpl _getAttribute() {
        if (_Attribute == null) {
            _Attribute = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Attribute;
    }

    public java.util.List getAttribute() {
        return _getAttribute();
    }

    public net.sourceforge.czt.z.jaxb.gen.Signature getState() {
        return _State;
    }

    public void setState(net.sourceforge.czt.z.jaxb.gen.Signature value) {
        _State = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getParentClass() {
        if (_ParentClass == null) {
            _ParentClass = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _ParentClass;
    }

    public java.util.List getParentClass() {
        return _getParentClass();
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getClassName() {
        return _ClassName;
    }

    public void setClassName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _ClassName = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassSignatureImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Visibility == null)? 0 :_Visibility.size());
        int idx2 = 0;
        final int len2 = ((_Operation == null)? 0 :_Operation.size());
        int idx3 = 0;
        final int len3 = ((_Attribute == null)? 0 :_Attribute.size());
        int idx5 = 0;
        final int len5 = ((_ParentClass == null)? 0 :_ParentClass.size());
        if (_ClassName!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "ClassName");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ClassName), "ClassName");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ClassName), "ClassName");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ClassName), "ClassName");
            context.endElement();
        }
        if (_State!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "State");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
            context.endElement();
        }
        while (idx5 != len5) {
            context.startElement("http://czt.sourceforge.net/object-z", "ParentClass");
            int idx_4 = idx5;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ParentClass.get(idx_4 ++)), "ParentClass");
            context.endNamespaceDecls();
            int idx_5 = idx5;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ParentClass.get(idx_5 ++)), "ParentClass");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _ParentClass.get(idx5 ++)), "ParentClass");
            context.endElement();
        }
        while (idx3 != len3) {
            context.startElement("http://czt.sourceforge.net/object-z", "Attribute");
            int idx_6 = idx3;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_6 ++)), "Attribute");
            context.endNamespaceDecls();
            int idx_7 = idx3;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx_7 ++)), "Attribute");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Attribute.get(idx3 ++)), "Attribute");
            context.endElement();
        }
        while (idx2 != len2) {
            context.startElement("http://czt.sourceforge.net/object-z", "Operation");
            int idx_8 = idx2;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_8 ++)), "Operation");
            context.endNamespaceDecls();
            int idx_9 = idx2;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_9 ++)), "Operation");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx2 ++)), "Operation");
            context.endElement();
        }
        while (idx1 != len1) {
            context.startElement("http://czt.sourceforge.net/object-z", "Visibility");
            int idx_10 = idx1;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Visibility.get(idx_10 ++)), "Visibility");
            context.endNamespaceDecls();
            int idx_11 = idx1;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Visibility.get(idx_11 ++)), "Visibility");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Visibility.get(idx1 ++)), "Visibility");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Visibility == null)? 0 :_Visibility.size());
        int idx2 = 0;
        final int len2 = ((_Operation == null)? 0 :_Operation.size());
        int idx3 = 0;
        final int len3 = ((_Attribute == null)? 0 :_Attribute.size());
        int idx5 = 0;
        final int len5 = ((_ParentClass == null)? 0 :_ParentClass.size());
        while (idx5 != len5) {
            idx5 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Visibility == null)? 0 :_Visibility.size());
        int idx2 = 0;
        final int len2 = ((_Operation == null)? 0 :_Operation.size());
        int idx3 = 0;
        final int len3 = ((_Attribute == null)? 0 :_Attribute.size());
        int idx5 = 0;
        final int len5 = ((_ParentClass == null)? 0 :_ParentClass.size());
        while (idx5 != len5) {
            idx5 += 1;
        }
        while (idx3 != len3) {
            idx3 += 1;
        }
        while (idx2 != len2) {
            idx2 += 1;
        }
        while (idx1 != len1) {
            idx1 += 1;
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassSignature.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom."
+"sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv."
+"grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/su"
+"n/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq"
+"\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
+"q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\rxq\u0000~\u0000\u0003q\u0000~\u0000\u0011psr\u00002com.sun.msv.grammar.Ex"
+"pression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0010\u0001q\u0000~\u0000\u001bsr\u0000"
+" com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv."
+"grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001cq\u0000~\u0000!sr\u0000#com.sun"
+".msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/"
+"lang/String;L\u0000\fnamespaceURIq\u0000~\u0000#xq\u0000~\u0000\u001et\u0000\'net.sourceforge.czt"
+".z.jaxb.gen.DeclNamet\u0000+http://java.sun.com/jaxb/xjc/dummy-el"
+"ementssq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000"
+"\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun."
+"msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatyp"
+"e.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.x"
+"sd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDat"
+"atypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000#L\u0000\btypeNameq\u0000~\u0000#L\u0000\nw"
+"hiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xp"
+"t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.d"
+"atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com."
+"sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u0011psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000#L\u0000\fnamespaceURIq\u0000~\u0000#xpq\u0000~\u00004q\u0000~\u00003sq\u0000~\u0000\"t\u0000\u0004typet\u0000)http:/"
+"/www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000!sq\u0000~\u0000\"t\u0000\tClassNamet\u0000"
+"#http://czt.sourceforge.net/object-zq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\fq\u0000~\u0000\u0011"
+"p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000"
+"\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000(net.sourceforge.czt.z.jaxb.gen.Signatureq\u0000~\u0000&"
+"sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\u0005Stateq\u0000~\u0000Aq\u0000~\u0000!s"
+"q\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000"
+"~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u0000&net.sourceforge"
+".czt.z.jaxb.gen.RefNameq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000"
+"~\u0000!sq\u0000~\u0000\"t\u0000\u000bParentClassq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq"
+"\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001b"
+"q\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"t\u00001net.sourceforge.czt.oz.jaxb.gen.NameSigna"
+"turePairq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\tAtt"
+"ributeq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000"
+"~\u0000\fpp\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q"
+"\u0000~\u0000fq\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\tOperati"
+"onq\u0000~\u0000Aq\u0000~\u0000!sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\fq\u0000~\u0000\u0011p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\fp"
+"p\u0000sq\u0000~\u0000\nppsq\u0000~\u0000\u0015q\u0000~\u0000\u0011psq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000\u001bq\u0000~\u0000\u001fq\u0000~\u0000!sq\u0000~\u0000\"q\u0000~\u0000X"
+"q\u0000~\u0000&sq\u0000~\u0000\nppsq\u0000~\u0000\u0018q\u0000~\u0000\u0011pq\u0000~\u0000,q\u0000~\u0000<q\u0000~\u0000!sq\u0000~\u0000\"t\u0000\nVisibilityq"
+"\u0000~\u0000Aq\u0000~\u0000!sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;x"
+"psr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000"
+"\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Ex"
+"pressionPool;xp\u0000\u0000\u0000\'\u0001pq\u0000~\u0000\u000bq\u0000~\u0000Bq\u0000~\u0000\tq\u0000~\u0000\u0012q\u0000~\u0000Dq\u0000~\u0000Rq\u0000~\u0000\'q\u0000~\u0000"
+"Kq\u0000~\u0000Yq\u0000~\u0000gq\u0000~\u0000`q\u0000~\u0000tq\u0000~\u0000nq\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~\u0000\u0006q\u0000~\u0000\bq\u0000~\u0000\u0007q\u0000~\u0000\u0017q\u0000~\u0000"
+"Gq\u0000~\u0000Uq\u0000~\u0000cq\u0000~\u0000qq\u0000~\u0000~q\u0000~\u0000Oq\u0000~\u0000Pq\u0000~\u0000^q\u0000~\u0000]q\u0000~\u0000lq\u0000~\u0000kq\u0000~\u0000yq\u0000~\u0000"
+"xq\u0000~\u0000\u0014q\u0000~\u0000Fq\u0000~\u0000Tq\u0000~\u0000bq\u0000~\u0000pq\u0000~\u0000}q\u0000~\u0000\u0005x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassSignatureImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("ParentClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  13 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl.class), 14, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl.class), 14, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl.class), 14, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  10 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getAttribute().add(((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getAttribute().add(((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Signature" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getAttribute().add(((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.NameSignaturePairImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("ClassName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  4 :
                        if (("NameTypePair" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NameTypePair" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  15 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("Visibility" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        if (("Attribute" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("Visibility" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("ParentClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("Attribute" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        if (("Visibility" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("Attribute" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  5 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  4 :
                        _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("ClassName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  8 :
                        if (("ParentClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  4 :
                        _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  1 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                            return ;
                        }
                        _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  16 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  7 :
                        if (("Decl" == ___local)&&("" == ___uri)) {
                            _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  0 :
                        state = 3;
                        continue outer;
                    case  4 :
                        _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, ___uri, ___local, ___qname));
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  16 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  7 :
                        attIdx = context.getAttribute("", "Decl");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            state = 9;
                            continue outer;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  4 :
                            _State = ((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.SignatureImpl.class), 5, value));
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _ClassName = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 2, value));
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  16 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getVisibility().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 17, value)));
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  7 :
                            attIdx = context.getAttribute("", "Decl");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getParentClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.RefNameImpl.class), 8, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
