//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class StateElementImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl
    implements net.sourceforge.czt.oz.jaxb.gen.StateElement, com.sun.xml.bind.JAXBObject, com.sun.xml.bind.RIElement, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "http://czt.sourceforge.net/object-z";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "State";
    }

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.StateElement.class);
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/object-z", "State");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("http://czt.sourceforge.net/object-z", "State");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeElementBody(context);
        context.endElement();
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.StateElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilon"
+"Reducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xp \u00bd7\u000ep"
+"p\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~"
+"\u0000\u0004 \u00bd7\u0003ppsq\u0000~\u0000\u0007\b\u00ed\u00c9Rppsq\u0000~\u0000\u0007\u0005\u00f3\u00db\u0082ppsr\u0000\u001dcom.sun.msv.grammar.Choi"
+"ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\b\u0001|\u00f6\u00eeppsq\u0000~\u0000\u0000\u0001|\u00f6\u00e3sr\u0000\u0011java.lang.Boolean\u00cd"
+" r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsr\u0000 com.sun."
+"msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.U"
+"naryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psr\u0000 com.sun.msv"
+".grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000\tnameClassq\u0000~\u0000\u0001"
+"xq\u0000~\u0000\u0004\u0001|\u00f6\u00bfq\u0000~\u0000\u0010psr\u00002com.sun.msv.grammar.Expression$AnyString"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\bsq\u0000~\u0000\u000f\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.g"
+"rammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCl"
+"ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonEx"
+"pression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramm"
+"ar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/Strin"
+"g;L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u00000net.sourceforge.czt.core.jaxb"
+".gen.TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-ele"
+"mentssq\u0000~\u0000 t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~"
+"\u0000\u0013\u0004v\u00e4\u008fppsq\u0000~\u0000\f\u0004v\u00e4\u008cppsq\u0000~\u0000\f\u0002\u00f9\u00ed\u00b2ppsq\u0000~\u0000\u0000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000"
+"~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sou"
+"rceforge.czt.core.jaxb.gen.InclDeclElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8pp\u0000"
+"sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.VarDeclElementq\u0000~\u0000"
+"$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00002net.sourceforge.czt.core.jaxb.gen.Cons"
+"tDeclElementq\u0000~\u0000$sq\u0000~\u0000\f\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000\u0013\u0002\u00f9\u00ed\u00c0q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0010"
+"psq\u0000~\u0000\u0000\u0001|\u00f6\u00e3q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.o"
+"z.jaxb.gen.SecondaryAttributesq\u0000~\u0000$sq\u0000~\u0000 t\u0000\u0013SecondaryAttribu"
+"test\u0000#http://czt.sourceforge.net/object-zsq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq"
+"\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000:net.sourceforge.czt.oz.jaxb.gen.SecondaryAttributesEle"
+"mentq\u0000~\u0000$q\u0000~\u0000\u001fsq\u0000~\u0000\f\u0017\u00cfm\u00acppsq\u0000~\u0000\u0013\u0017\u00cfm\u00a1q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0017\u00cfm\u009eq\u0000~\u0000\u0010psq"
+"\u0000~\u0000\f\u0016Rv\u00c4q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0014\u00d5\u007f\u00eaq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0013X\u0089\u0010q\u0000~\u0000\u0010psq\u0000~\u0000\f\u0011\u00db\u00926q\u0000~\u0000"
+"\u0010psq\u0000~\u0000\f\u0010^\u009b\\q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000e\u00e1\u00a4\u0082q\u0000~\u0000\u0010psq\u0000~\u0000\f\rd\u00ad\u00a8q\u0000~\u0000\u0010psq\u0000~\u0000\f\u000b\u00e7\u00b6\u00ce"
+"q\u0000~\u0000\u0010psq\u0000~\u0000\f\nj\u00bf\u00f4q\u0000~\u0000\u0010psq\u0000~\u0000\f\b\u00ed\u00c9\u001aq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0007p\u00d2@q\u0000~\u0000\u0010psq\u0000~\u0000\f"
+"\u0005\u00f3\u00dbfq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0004v\u00e4\u008cq\u0000~\u0000\u0010psq\u0000~\u0000\f\u0002\u00f9\u00ed\u00b2q\u0000~\u0000\u0010psq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000s"
+"q\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq"
+"\u0000~\u0000 t\u0000*net.sourceforge.czt.core.jaxb.gen.TruePredq\u0000~\u0000$sq\u0000~\u0000\u0000"
+"\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.core.jaxb.gen.Pred2El"
+"ementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000"
+"\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core."
+"jaxb.gen.MemPredElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000"
+"~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sou"
+"rceforge.czt.core.jaxb.gen.Exists1Predq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000"
+"sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u0000+net.sourceforge.czt.core.jaxb.gen.FalsePredq\u0000~\u0000$sq\u0000~"
+"\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.NegPr"
+"edElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010ps"
+"q\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.c"
+"ore.jaxb.gen.IffPredq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013"
+"\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.source"
+"forge.czt.core.jaxb.gen.ForallPredq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~"
+"\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000"
+" t\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerPredElementq\u0000~\u0000$"
+"sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010"
+"pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000(net.sourceforge.czt.core.jaxb.gen.O"
+"rPredq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000"
+"\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net.sourceforge.czt.core."
+"jaxb.gen.QntPredElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000"
+"~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00001net.sou"
+"rceforge.czt.core.jaxb.gen.ExprPredElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~"
+"\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.core.jaxb.gen.ImpliesPredq\u0000~"
+"\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000,net.sourceforge.czt.core.jaxb.gen"
+".ExistsPredq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010"
+"psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt"
+".core.jaxb.gen.FactElementq\u0000~\u0000$sq\u0000~\u0000\u0000\u0001|\u00f6\u00d8q\u0000~\u0000\u0010p\u0000sq\u0000~\u0000\f\u0001|\u00f6\u00cdpp"
+"sq\u0000~\u0000\u0013\u0001|\u00f6\u00c2q\u0000~\u0000\u0010psq\u0000~\u0000\u0016\u0001|\u00f6\u00bfq\u0000~\u0000\u0010pq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00000net."
+"sourceforge.czt.core.jaxb.gen.AndPredElementq\u0000~\u0000$q\u0000~\u0000\u001fsq\u0000~\u0000 "
+"t\u0000\u0005Stateq\u0000~\u0000Isr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHa"
+"sh;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8"
+"\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00c4[\u0000\u0005tablet\u0000![Lcom/sun/"
+"msv/grammar/Expression;xp\u0000\u0000\u0000G\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar."
+"Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppppppppppppppppppppppppppppp"
+"ppppppppq\u0000~\u0000\nppppppppppppppppppppppppppppppppppppppppppppppp"
+"pppppq\u0000~\u0000Tppppppq\u0000~\u0000Wppppppq\u0000~\u0000Zppppppq\u0000~\u0000]ppppppq\u0000~\u0000`q\u0000~\u0000*p"
+"ppppppppq\u0000~\u0000?ppq\u0000~\u0000>ppppppppppq\u0000~\u0000=ppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppppppppppppppppq\u0000~\u0000Rppq\u0000~\u0000Qpppq"
+"\u0000~\u0000Upppppq\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000\u0099q\u0000~\u0000\u0093q\u0000~\u0000\u008dq\u0000~\u0000\u0087q\u0000~\u0000\u0081q\u0000~\u0000{q\u0000~\u0000uq"
+"\u0000~\u0000oq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000\u0098q\u0000~\u0000\u0092q\u0000~\u0000\u008cq\u0000~\u0000\u0086q\u0000~\u0000\u0080q\u0000~\u0000zq\u0000~\u0000tq\u0000~\u0000nq\u0000~\u0000hq"
+"\u0000~\u0000bq\u0000~\u0000Kq\u0000~\u0000Bq\u0000~\u00008q\u0000~\u00002q\u0000~\u0000,q\u0000~\u0000\u0012q\u0000~\u0000iq\u0000~\u0000cq\u0000~\u0000Lq\u0000~\u0000Cq\u0000~\u00009q"
+"\u0000~\u00003q\u0000~\u0000-q\u0000~\u0000\u0015q\u0000~\u0000^q\u0000~\u0000[q\u0000~\u0000Xq\u0000~\u0000\u00aaq\u0000~\u0000\u00b1q\u0000~\u0000\u00b0q\u0000~\u0000\u000bq\u0000~\u0000\rq\u0000~\u0000\u00b7q"
+"\u0000~\u0000\u00b6q\u0000~\u0000\u00bdq\u0000~\u0000\u00bcq\u0000~\u0000Pq\u0000~\u0000\tpppppppppppppppppppppppppppppppppppp"
+"ppppppppppppppppppppppppppppppq\u0000~\u0000Sppppppq\u0000~\u0000Vppppppq\u0000~\u0000Yppp"
+"pppq\u0000~\u0000\\ppppppq\u0000~\u0000_q\u0000~\u0000)pq\u0000~\u0000(ppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                    case  1 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl)net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.this).new Unmarshaller(context)), 2, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
