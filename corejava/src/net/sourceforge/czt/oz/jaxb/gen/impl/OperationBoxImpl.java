//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.07.23 at 10:52:41 NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class OperationBoxImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl
    implements net.sourceforge.czt.oz.jaxb.gen.OperationBox, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Decl = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.RefNameList _DeltaList;
    protected com.sun.xml.bind.util.ListImpl _Pred = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.OperationBox.class);
    }

    public java.util.List getDecl() {
        return _Decl;
    }

    public net.sourceforge.czt.oz.jaxb.gen.RefNameList getDeltaList() {
        return _DeltaList;
    }

    public void setDeltaList(net.sourceforge.czt.oz.jaxb.gen.RefNameList value) {
        _DeltaList = value;
    }

    public java.util.List getPred() {
        return _Pred;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Decl.size();
        int idx3 = 0;
        final int len3 = _Pred.size();
        super.serializeBody(context);
        if (_DeltaList!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "DeltaList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DeltaList), "DeltaList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DeltaList), "DeltaList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _DeltaList), "DeltaList");
            context.endElement();
        }
        while (idx1 != len1) {
            if (_Decl.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Decl");
                int idx_2 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Decl.get(idx_2 ++)), "Decl");
                context.endNamespaceDecls();
                int idx_3 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Decl.get(idx_3 ++)), "Decl");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
                context.endElement();
            }
        }
        while (idx3 != len3) {
            if (_Pred.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Pred");
                int idx_4 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_4 ++)), "Pred");
                context.endNamespaceDecls();
                int idx_5 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx_5 ++)), "Pred");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Decl.size();
        int idx3 = 0;
        final int len3 = _Pred.size();
        super.serializeAttributes(context);
        while (idx1 != len1) {
            if (_Decl.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
            } else {
                idx1 += 1;
            }
        }
        while (idx3 != len3) {
            if (_Pred.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
            } else {
                idx3 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Decl.size();
        int idx3 = 0;
        final int len3 = _Pred.size();
        super.serializeURIs(context);
        while (idx1 != len1) {
            if (_Decl.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Decl.get(idx1 ++)), "Decl");
            } else {
                idx1 += 1;
            }
        }
        while (idx3 != len3) {
            if (_Pred.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Pred.get(idx3 ++)), "Pred");
            } else {
                idx3 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.OperationBox.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000b/U\u00aeppsq\u0000~\u0000\u0000\u0005\u00cdiWppsq\u0000~\u0000\u0000\u0004"
+"\u00da?\u0094ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002c\u0019Jp"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002c\u0019?sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002c\u00194ppsq\u0000~\u0000\n\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000Q\r\u00ceq\u0000~\u0000\u000fpsr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bx"
+"q\u0000~\u0000\u0003\u0000Q\r\u00cbq\u0000~\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0019sr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001aq\u0000~\u0000\u001fsr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000!xq\u0000~\u0000\u001ct\u0000-net.sourceforge.czt.z.jaxb.gen"
+".TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\b\u0002\u0012\u000bKppsq\u0000~\u0000\u0016\u0002\u0012\u000b@q\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u00016\f\u00a3ppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000!L\u0000\btypeNameq\u0000"
+"~\u0000!L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u000fpsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000!L\u0000\fnamespaceURIq\u0000~\u0000!xpq\u0000~\u00002q\u0000~\u00001sq\u0000~\u0000 t\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\u0004"
+"Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001fsq\u0000~\u0000\b\u0002w&Eppsq\u0000~\u0000\n"
+"\u0002w&:q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\u0000\u0002w&/ppsq\u0000~\u0000\n\u0000Q\r\u00e4pp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.sourceforge."
+"czt.oz.jaxb.gen.RefNameListq\u0000~\u0000$sq\u0000~\u0000\b\u0002&\u0018Fppsq\u0000~\u0000\u0016\u0002&\u0018;q\u0000~\u0000\u000fp"
+"q\u0000~\u0000*sq\u0000~\u0000 q\u0000~\u0000;q\u0000~\u0000<q\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000\tDeltaListt\u0000#http://czt.so"
+"urceforge.net/object-zq\u0000~\u0000\u001fsq\u0000~\u0000\b\u0000\u00f3)\u00beppsq\u0000~\u0000\u0013\u0000\u00f3)\u00b3q\u0000~\u0000\u000fpsq\u0000~\u0000"
+"\b\u0000\u00f3)\u00b0q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0000\u00a2\u001b\u00caq\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~"
+"\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000/net.sour"
+"ceforge.czt.z.jaxb.gen.ConstDeclElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp"
+"\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001f"
+"sq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.VarDeclElementq\u0000~\u0000$s"
+"q\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fp"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge.czt.z.jaxb.gen.InclD"
+"eclElementq\u0000~\u0000$q\u0000~\u0000\u001fsq\u0000~\u0000\b\u0005a\u00ecRppsq\u0000~\u0000\u0013\u0005a\u00ecGq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0005a\u00ecDq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\b\u0005\u0010\u00de^q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0004\u00bf\u00d0xq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0004n\u00c2\u0092q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0004\u001d"
+"\u00b4\u00acq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0003\u00cc\u00a6\u00c6q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0003{\u0098\u00e0q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0003*\u008a\u00faq\u0000~\u0000\u000fpsq\u0000~"
+"\u0000\b\u0002\u00d9}\u0014q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0002\u0088o.q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u00027aHq\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0001\u00e6Sbq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\b\u0001\u0095E|q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0001D7\u0096q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0000\u00f3)\u00b0q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0000\u00a2\u001b\u00caq\u0000"
+"~\u0000\u000fpsq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000)net.sourceforge.czt.z.jaxb.gen."
+"ForallPredq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fp"
+"sq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt."
+"z.jaxb.gen.AndPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9pps"
+"q\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000+net.s"
+"ourceforge.czt.z.jaxb.gen.Pred2Elementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000"
+"sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fs"
+"q\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen.MemPredElementq\u0000~\u0000$sq"
+"\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq"
+"\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000%net.sourceforge.czt.z.jaxb.gen.OrPred"
+"q\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cb"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00003net.sourceforge.czt.zpatt.jaxb"
+".gen.JokerPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000"
+"\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourc"
+"eforge.czt.z.jaxb.gen.QntPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.FactElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000"
+"Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen.ImpliesPred"
+"q\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cb"
+"q\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000-net.sourceforge.czt.z.jaxb.gen"
+".NegPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq"
+"\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000.net.sourceforge"
+".czt.z.jaxb.gen.ExprPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000"
+"Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000"
+")net.sourceforge.czt.z.jaxb.gen.ExistsPredq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~"
+"\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000"
+"~\u0000\u001fsq\u0000~\u0000 t\u0000\'net.sourceforge.czt.z.jaxb.gen.TruePredq\u0000~\u0000$sq\u0000~"
+"\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~"
+"\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000&net.sourceforge.czt.z.jaxb.gen.IffPredq"
+"\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq"
+"\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u0000*net.sourceforge.czt.z.jaxb.gen."
+"Exists1Predq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000~\u0000 t\u00007net.sourceforge.czt"
+".oz.jaxb.gen.PromotedInitPredElementq\u0000~\u0000$sq\u0000~\u0000\n\u0000Q\r\u00e4q\u0000~\u0000\u000fp\u0000sq"
+"\u0000~\u0000\b\u0000Q\r\u00d9ppsq\u0000~\u0000\u0013\u0000Q\r\u00ceq\u0000~\u0000\u000fpsq\u0000~\u0000\u0016\u0000Q\r\u00cbq\u0000~\u0000\u000fpq\u0000~\u0000\u0019q\u0000~\u0000\u001dq\u0000~\u0000\u001fsq\u0000"
+"~\u0000 t\u0000(net.sourceforge.czt.z.jaxb.gen.FalsePredq\u0000~\u0000$q\u0000~\u0000\u001fsr\u0000\""
+"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/L"
+"com/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun."
+"msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tt"
+"hresholdL\u0000\u0006parentq\u0000~\u0000\u00de[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expre"
+"ssion;xp\u0000\u0000\u0000K\u0000\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad"
+"\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fppppppppppppppppppppq\u0000~\u0000%ppppq\u0000~\u0000pppppppppppppppp"
+"ppppppppppq\u0000~\u0000\u0006q\u0000~\u0000hpppq\u0000~\u0000uq\u0000~\u0000Qpq\u0000~\u0000Pppppppppppq\u0000~\u0000Opppppp"
+"ppppppq\u0000~\u0000mppppppppppppppppppppppppppppppq\u0000~\u0000rppppppppq\u0000~\u0000\u00bbq"
+"\u0000~\u0000\u00b5q\u0000~\u0000\u00afq\u0000~\u0000\u00a9q\u0000~\u0000\u00a3q\u0000~\u0000\u009dq\u0000~\u0000\u0097q\u0000~\u0000\u0091q\u0000~\u0000\u008bq\u0000~\u0000\u0085q\u0000~\u0000\u007fq\u0000~\u0000\u00baq\u0000~\u0000\u00b4q"
+"\u0000~\u0000\u00aeq\u0000~\u0000\u00a8q\u0000~\u0000\u00a2q\u0000~\u0000\u009cq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000`q\u0000~\u0000Zq"
+"\u0000~\u0000Tq\u0000~\u0000Dq\u0000~\u0000\u0012q\u0000~\u0000yq\u0000~\u0000aq\u0000~\u0000[q\u0000~\u0000Uq\u0000~\u0000Eq\u0000~\u0000\u0015q\u0000~\u0000Bq\u0000~\u0000\u00c1q\u0000~\u0000\u00c0q"
+"\u0000~\u0000\u00c7q\u0000~\u0000\u00c6q\u0000~\u0000@q\u0000~\u0000jq\u0000~\u0000\u00cdq\u0000~\u0000\u00ccq\u0000~\u0000\u00d3q\u0000~\u0000\u00d2q\u0000~\u0000\u00d9q\u0000~\u0000\u00d8q\u0000~\u0000\u0010pq\u0000~\u0000o"
+"pppppppppppppppppppq\u0000~\u0000\tppppppq\u0000~\u0000gppq\u0000~\u0000fq\u0000~\u0000tpppppppppq\u0000~\u0000"
+"eppppppppppppppppq\u0000~\u0000lppppppppppppppppppppppppppppppq\u0000~\u0000qppp"
+"ppppq\u0000~\u0000\u0005ppppppppppppppppppq\u0000~\u0000ipppq\u0000~\u0000vq\u0000~\u0000Rppppppppppppppp"
+"ppppppppppq\u0000~\u0000nppppppppppppppppppppppppppppppq\u0000~\u0000sppppppppq\u0000"
+"~\u0000\u0007pppppppppppppq\u0000~\u0000Ipppq\u0000~\u0000kppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        if (("DeltaList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  6 :
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  9 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  7 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 8, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  5 :
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConstDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.VarDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.InclDeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 9;
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclElementImpl.class), 5, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Pred2ElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MemPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.QntPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FactElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TruePredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffPredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1PredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PromotedInitPredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FalsePredImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PredElementImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 6;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        state = 4;
                        continue outer;
                    case  8 :
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("DeltaList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  2 :
                        _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        state = 4;
                        continue outer;
                    case  6 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  1 :
                        state = 4;
                        continue outer;
                    case  6 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 10, ___uri, ___local, ___qname)));
                        return ;
                    case  7 :
                        _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 8, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        state = 6;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  1 :
                            state = 4;
                            continue outer;
                        case  6 :
                            revertToParentFromText(value);
                            return ;
                        case  4 :
                            state = 5;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.OperationBoxImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  2 :
                            _DeltaList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 3, value));
                            return ;
                        case  9 :
                            _Decl.add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclImpl.class), 10, value)));
                            return ;
                        case  7 :
                            _Pred.add(((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.PredImpl.class), 8, value)));
                            return ;
                        case  5 :
                            state = 6;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
