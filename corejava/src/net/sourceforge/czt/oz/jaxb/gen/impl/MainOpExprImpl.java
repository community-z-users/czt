//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.05.14 at 01:55:34 NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class MainOpExprImpl
    extends net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl
    implements net.sourceforge.czt.oz.jaxb.gen.MainOpExpr, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected net.sourceforge.czt.z.jaxb.gen.SchText _SchText;
    protected net.sourceforge.czt.oz.jaxb.gen.OperationExpr _OperationExpr;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.MainOpExpr.class);
    }

    public net.sourceforge.czt.z.jaxb.gen.SchText getSchText() {
        return _SchText;
    }

    public void setSchText(net.sourceforge.czt.z.jaxb.gen.SchText value) {
        _SchText = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.OperationExpr getOperationExpr() {
        return _OperationExpr;
    }

    public void setOperationExpr(net.sourceforge.czt.oz.jaxb.gen.OperationExpr value) {
        _OperationExpr = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeBody(context);
        if (_SchText instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
        } else {
            context.startElement("http://czt.sourceforge.net/zml", "SchText");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
            context.endElement();
        }
        if (_OperationExpr instanceof javax.xml.bind.Element) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OperationExpr), "OperationExpr");
        } else {
            context.startElement("http://czt.sourceforge.net/object-z", "OperationExpr");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OperationExpr), "OperationExpr");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OperationExpr), "OperationExpr");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _OperationExpr), "OperationExpr");
            context.endElement();
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeAttributes(context);
        if (_SchText instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
        }
        if (_OperationExpr instanceof javax.xml.bind.Element) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _OperationExpr), "OperationExpr");
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        super.serializeURIs(context);
        if (_SchText instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SchText), "SchText");
        }
        if (_OperationExpr instanceof javax.xml.bind.Element) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _OperationExpr), "OperationExpr");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.MainOpExpr.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xpB\u00a4\u00f4\u000eppsq\u0000~\u0000\u0000\t\u00ab\u00dc\u00dappsr\u0000\u001dcom"
+".sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0003\u00a2y\u00e2ppsr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003\u0003\u00a2y\u00d7sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq"
+"\u0000~\u0000\u0000\u0003\u00a2y\u00ccppsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003\u0001\u00f6\u00ef\nq\u0000~"
+"\u0000\u000epsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\r\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsT"
+"ypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0007\u0001\u00ab\u008a\u00a4p"
+"psq\u0000~\u0000\u0015\u0001\u00ab\u008a\u0099q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L"
+"\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet"
+"\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000O;\u00b2ppsr\u0000\"com.sun.msv.d"
+"atatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd"
+".BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Co"
+"ncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatype"
+"Impl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000 L\u0000\btypeNameq\u0000~\u0000 L\u0000\nwhiteS"
+"pacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 ht"
+"tp://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.dataty"
+"pe.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
+"v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.m"
+"sv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\n"
+"q\u0000~\u0000\u000epsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000 L\u0000\fnamespaceURIq\u0000~\u0000 xpq\u0000~\u00001q\u0000~\u00000sq\u0000~\u0000\u001ft\u0000\u0004typet\u0000)http://"
+"www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0004Annst\u0000\u001ehttp:"
+"//czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\u0007\u0006\tb\u00f3ppsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000"
+"\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000-net.sourceforge.czt.z.jaxb.gen.SchTextElementq\u0000~\u0000#sq\u0000~\u0000\t\u0004"
+"\u0012s\u00cepp\u0000sq\u0000~\u0000\u0000\u0004\u0012s\u00c3ppsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000&net.sourceforge.czt.z"
+".jaxb.gen.SchTextq\u0000~\u0000#sq\u0000~\u0000\u0007\u0002\u001b\u0084\u009bppsq\u0000~\u0000\u0015\u0002\u001b\u0084\u0090q\u0000~\u0000\u000epq\u0000~\u0000)sq\u0000~\u0000"
+"\u001fq\u0000~\u0000:q\u0000~\u0000;q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000\u0007SchTextq\u0000~\u0000>sq\u0000~\u0000\u00078\u00f9\u0017/ppsq\u0000~\u0000\u00077\u0002(\np"
+"psq\u0000~\u0000\u00075\u000b8\u00e5ppsq\u0000~\u0000\u00073\u0014I\u00c0ppsq\u0000~\u0000\u00071\u001dZ\u009bppsq\u0000~\u0000\u0007/&kvppsq\u0000~\u0000\u0007-/|Qp"
+"psq\u0000~\u0000\u0007+8\u008d,ppsq\u0000~\u0000\u0007)A\u009e\u0007ppsq\u0000~\u0000\u0007\'J\u00ae\u00e2ppsq\u0000~\u0000\u0007%S\u00bf\u00bdppsq\u0000~\u0000\u0007#\\\u00d0\u0098p"
+"psq\u0000~\u0000\u0007!e\u00e1sppsq\u0000~\u0000\u0007\u001fn\u00f2Nppsq\u0000~\u0000\u0007\u001dx\u0003)ppsq\u0000~\u0000\u0007\u001b\u0081\u0014\u0004ppsq\u0000~\u0000\u0007\u0019\u008a$\u00dfp"
+"psq\u0000~\u0000\u0007\u0017\u00935\u00bappsq\u0000~\u0000\u0007\u0015\u009cF\u0095ppsq\u0000~\u0000\u0007\u0013\u00a5Wpppsq\u0000~\u0000\u0007\u0011\u00aehKppsq\u0000~\u0000\u0007\u000f\u00b7y&p"
+"psq\u0000~\u0000\u0007\r\u00c0\u008a\u0001ppsq\u0000~\u0000\u0007\u000b\u00c9\u009a\u00dcppsq\u0000~\u0000\u0007\t\u00d2\u00ab\u00b7ppsq\u0000~\u0000\u0007\u0007\u00db\u00bc\u0092ppsq\u0000~\u0000\u0007\u0005\u00e4\u00cdmp"
+"psq\u0000~\u0000\u0007\u0003\u00ed\u00deHppsq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015"
+"\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.oz.jax"
+"b.gen.DistSeqOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq"
+"\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforge"
+".czt.tcoz.jaxb.gen.TimeoutEndProExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007"
+"\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u0000.net.sourceforge.czt.oz.jaxb.gen.ExChoiceOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001"
+"\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001c"
+"q\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.tcoz.jaxb.gen.DivergeProEx"
+"prq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00000net.sourceforge.czt.oz.jaxb.gen."
+"DistChoiceOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000"
+"\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.cz"
+"t.tcoz.jaxb.gen.SkipProExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000"
+"~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sou"
+"rceforge.czt.oz.jaxb.gen.RenameOpExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#p"
+"p\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000"
+"\u001esq\u0000~\u0000\u001ft\u0000)net.sourceforge.czt.oz.jaxb.gen.SeqOpExprq\u0000~\u0000#sq\u0000~"
+"\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000+net.sourceforge.czt.oz.jaxb.gen.ParenOpExpr"
+"q\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000"
+"\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt.oz.jaxb.gen.Op"
+"PromotionExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\r"
+"q\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00003net.sourceforg"
+"e.czt.tcoz.jaxb.gen.RecProExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000"
+"\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u00008net.sourceforge.czt.tcoz.jaxb.gen.TopologyProExprElementq"
+"\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000e"
+"pq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.oz.jaxb.gen.Par"
+"allelOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000"
+"~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000-net.sourceforge.czt.tco"
+"z.jaxb.gen.StopProExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6"
+"\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005net.sourcefo"
+"rge.czt.tcoz.jaxb.gen.TimeoutStartProExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000s"
+"q\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq"
+"\u0000~\u0000\u001ft\u00001net.sourceforge.czt.oz.jaxb.gen.ScopeEnrichOpExprq\u0000~\u0000"
+"#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.tcoz.jaxb.gen.Inte"
+"rruptProExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq"
+"\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00008net.sourceforge.czt.tc"
+"oz.jaxb.gen.DeadlineProExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6"
+"\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002"
+"net.sourceforge.czt.oz.jaxb.gen.AssoParallelOpExprq\u0000~\u0000#sq\u0000~\u0000"
+"\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000.net.sourceforge.czt.oz.jaxb.gen.DistConjOpEx"
+"prq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000"
+"~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00005net.sourceforge.czt.tcoz.jaxb.ge"
+"n.GuardProExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef"
+"\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourcefor"
+"ge.czt.oz.jaxb.gen.HideOpExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007"
+"\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft"
+"\u00003net.sourceforge.czt.tcoz.jaxb.gen.InterleaveProExprq\u0000~\u0000#sq"
+"\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00006net.sourceforge.czt.tcoz.jaxb.gen.SynPllP"
+"roExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000eps"
+"q\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt.t"
+"coz.jaxb.gen.AtProExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018pps"
+"q\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.s"
+"ourceforge.czt.oz.jaxb.gen.ConjOpExprq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000"
+"\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u00004net.sourceforge.czt.tcoz.jaxb.gen.WaitProExprElementq\u0000~\u0000#"
+"sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00009net.sourceforge.czt.tcoz.jaxb.gen.WaitU"
+"ntilProExprElementq\u0000~\u0000#sq\u0000~\u0000\t\u0001\u00f6\u00ef#pp\u0000sq\u0000~\u0000\u0007\u0001\u00f6\u00ef\u0018ppsq\u0000~\u0000\u0012\u0001\u00f6\u00ef\rq\u0000"
+"~\u0000\u000epsq\u0000~\u0000\u0015\u0001\u00f6\u00ef\nq\u0000~\u0000\u000epq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge."
+"czt.oz.jaxb.gen.BasicOpExprElementq\u0000~\u0000#sr\u0000\"com.sun.msv.gramm"
+"ar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gramm"
+"ar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expre"
+"ssionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parent"
+"q\u0000~\u0001\u001e[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000d\u0000\u0000\u0000rp"
+"ur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fpppppp"
+"ppppq\u0000~\u0000kpppppppppppq\u0000~\u0000fpppppppppppq\u0000~\u0000apppppppppppq\u0000~\u0000\\ppp"
+"pppppq\u0000~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000~\u0000\u0089q\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000wq\u0000~\u0000qq\u0000~\u0000Jq\u0000~\u0000B"
+"q\u0000~\u0000\u009aq\u0000~\u0000\u0094q\u0000~\u0000\u008eq\u0000~\u0000\u0088q\u0000~\u0000\u0082q\u0000~\u0000|q\u0000~\u0000vq\u0000~\u0000pq\u0000~\u0000Iq\u0000~\u0000Aq\u0000~\u0000\u0011q\u0000~\u0000\u0014"
+"q\u0000~\u0000Nq\u0000~\u0000\u00c4q\u0000~\u0000\u00c5q\u0000~\u0000\u00beq\u0000~\u0000\u00bfq\u0000~\u0000\u00b8q\u0000~\u0000\u00b9q\u0000~\u0000\u00b2q\u0000~\u0000\u00b3q\u0000~\u0000\u00acq\u0000~\u0000\u00adq\u0000~\u0000j"
+"q\u0000~\u0000\u00a6q\u0000~\u0000\u00a7q\u0000~\u0000\u00a0q\u0000~\u0000\u00cbq\u0000~\u0000\u00caq\u0000~\u0000\u00d1q\u0000~\u0000\u00d0q\u0000~\u0000\u00d7q\u0000~\u0000\u00d6q\u0000~\u0000\u00ddq\u0000~\u0000\u00dcq\u0000~\u0000e"
+"q\u0000~\u0000\u00e3q\u0000~\u0000\u00e2q\u0000~\u0000\u00e9q\u0000~\u0000\u00e8q\u0000~\u0000\u00efq\u0000~\u0000\u00eeq\u0000~\u0000\u00f5q\u0000~\u0000\u00f4q\u0000~\u0000\u00fbq\u0000~\u0000\u00faq\u0000~\u0001\u0001q\u0000~\u0000`"
+"q\u0000~\u0001\u0000q\u0000~\u0000Wq\u0000~\u0001\u0007q\u0000~\u0001\u0006q\u0000~\u0001\rq\u0000~\u0001\fq\u0000~\u0001\u0013q\u0000~\u0001\u0012q\u0000~\u0001\u0019q\u0000~\u0001\u0018pq\u0000~\u0000[pppp"
+"pppppppq\u0000~\u0000Vpq\u0000~\u0000Gppppppppppppppppq\u0000~\u0000npppppppppppq\u0000~\u0000ippppp"
+"ppppppq\u0000~\u0000dpppq\u0000~\u0000\u0005pppq\u0000~\u0000\u0006pppq\u0000~\u0000_pppppppppppq\u0000~\u0000Zppppppppp"
+"ppq\u0000~\u0000Uppppppppppppq\u0000~\u0000?pppq\u0000~\u0000$pq\u0000~\u0000mpppppppppppq\u0000~\u0000hpppppp"
+"pppppq\u0000~\u0000cpppppppppppq\u0000~\u0000^pppppppppppq\u0000~\u0000Ypppppppppppq\u0000~\u0000Tpp"
+"ppppppppppppppppq\u0000~\u0000lq\u0000~\u0000\u000fppppppppppq\u0000~\u0000gppppppppppq\u0000~\u0000\bq\u0000~\u0000"
+"bpppppppppppq\u0000~\u0000]pppppppppppq\u0000~\u0000Xpppppppppppq\u0000~\u0000Spppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  4 :
                        if (("DistSeqOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.DistSeqOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TimeoutEndProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutEndProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutEndProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExChoiceOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ExChoiceOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DivergeProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.DivergeProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.DivergeProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DistChoiceOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.DistChoiceOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SkipProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.SkipProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.SkipProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RenameOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RenameOpExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SeqOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.SeqOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParenOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ParenOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OpPromotionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OpPromotionExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RecProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.RecProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TopologyProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.TopologyProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ParallelOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ParallelOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("StopProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.StopProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.StopProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TimeoutStartProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutStartProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.TimeoutStartProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ScopeEnrichOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ScopeEnrichOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterruptProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.InterruptProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DeadlineProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.DeadlineProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AssoParallelOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.AssoParallelOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("DistConjOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.DistConjOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GuardProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.GuardProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("HideOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.HideOpExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InterleaveProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.InterleaveProExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.InterleaveProExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SynPllProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.SynPllProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AtProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.AtProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConjOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ConjOpExprImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("WaitProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("WaitUntilProExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.WaitUntilProExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("BasicOpExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.BasicOpExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OperationExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        if (("OperationExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  1 :
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextElementImpl.class), 4, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        if (("OperationExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  2 :
                            _SchText = ((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.SchTextImpl.class), 3, value));
                            return ;
                        case  5 :
                            revertToParentFromText(value);
                            return ;
                        case  6 :
                            _OperationExpr = ((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl.class), 7, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.oz.jaxb.gen.impl.OperationExprImpl)net.sourceforge.czt.oz.jaxb.gen.impl.MainOpExprImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
