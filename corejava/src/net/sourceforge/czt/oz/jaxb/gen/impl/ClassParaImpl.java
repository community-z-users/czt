//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.11.03 at 03:50:09 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassParaImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl
    implements net.sourceforge.czt.oz.jaxb.gen.ClassPara, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Operation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.LocalDef _LocalDef;
    protected net.sourceforge.czt.oz.jaxb.gen.InitialState _InitialState;
    protected net.sourceforge.czt.oz.jaxb.gen.State _State;
    protected net.sourceforge.czt.oz.jaxb.gen.StringListType _VisibilityList;
    protected com.sun.xml.bind.util.ListImpl _InheritedClass = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.FormalParameters _FormalParameters;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public java.util.List getOperation() {
        return _Operation;
    }

    public net.sourceforge.czt.oz.jaxb.gen.LocalDef getLocalDef() {
        return _LocalDef;
    }

    public void setLocalDef(net.sourceforge.czt.oz.jaxb.gen.LocalDef value) {
        _LocalDef = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.InitialState getInitialState() {
        return _InitialState;
    }

    public void setInitialState(net.sourceforge.czt.oz.jaxb.gen.InitialState value) {
        _InitialState = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.State getState() {
        return _State;
    }

    public void setState(net.sourceforge.czt.oz.jaxb.gen.State value) {
        _State = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.StringListType getVisibilityList() {
        return _VisibilityList;
    }

    public void setVisibilityList(net.sourceforge.czt.oz.jaxb.gen.StringListType value) {
        _VisibilityList = value;
    }

    public java.util.List getInheritedClass() {
        return _InheritedClass;
    }

    public net.sourceforge.czt.oz.jaxb.gen.FormalParameters getFormalParameters() {
        return _FormalParameters;
    }

    public void setFormalParameters(net.sourceforge.czt.oz.jaxb.gen.FormalParameters value) {
        _FormalParameters = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "FormalParameters");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
                context.endElement();
            }
        }
        if (_VisibilityList!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            context.endElement();
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InheritedClass");
                int idx_6 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_6 ++)), "InheritedClass");
                context.endNamespaceDecls();
                int idx_7 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_7 ++)), "InheritedClass");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
                context.endElement();
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "LocalDef");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
                context.endElement();
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "State");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endElement();
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InitialState");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "Operation");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_14 ++)), "Operation");
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_15 ++)), "Operation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeAttributes(context);
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                idx6 += 1;
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeURIs(context);
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                idx6 += 1;
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0011\u00c9z\u007fppsq\u0000~\u0000\u0000\u0010q\u00f1Kppsq\u0000~\u0000\u0000\u000e"
+"\u00e397ppsq\u0000~\u0000\u0000\fNJ\u00e7ppsq\u0000~\u0000\u0000\n6\u0086\u00c2ppsq\u0000~\u0000\u0000\u0007n\u009f\\ppsq\u0000~\u0000\u0000\u0005\u00df\u00b9\u0012ppsq\u0000~\u0000\u0000\u0003"
+"Y\u0088mppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002Dz\u00bfp"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002Dz\u00b4sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002Dz\u00a9ppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000h$\u0012q\u0000~\u0000\u0014psr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010x"
+"q\u0000~\u0000\u0003\u0000h$\u000fq\u0000~\u0000\u0014psr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen"
+".TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\r\u0001\u00dcV|ppsq\u0000~\u0000\u001b\u0001\u00dcVqq\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0000\u0014t\u00fappsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000"
+"~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004"
+"Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000$sq\u0000~\u0000\u000f\u0001\u0015\r\u00a9pp\u0000sq\u0000~\u0000"
+"\u0000\u0001\u0015\r\u009eppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000"
+"~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sourceforge.czt.z.jaxb.gen.D"
+"eclNameq\u0000~\u0000)sq\u0000~\u0000\r\u0000\u00ac\u00e9qppsq\u0000~\u0000\u001b\u0000\u00ac\u00e9fq\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000"
+"Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Namet\u0000#http://czt.sourceforge.net/object-zsq\u0000"
+"~\u0000\r\u0002\u00860\u00a0ppsq\u0000~\u0000\r\u0002\u00860\u0095q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000h$(q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018"
+"\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00007net.source"
+"forge.czt.oz.jaxb.gen.FormalParametersElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0002\u001e\fk"
+"q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002\u001e\f`ppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sourceforge.czt."
+"oz.jaxb.gen.FormalParametersq\u0000~\u0000)sq\u0000~\u0000\r\u0001\u00b5\u00e83ppsq\u0000~\u0000\u001b\u0001\u00b5\u00e8(q\u0000~\u0000\u0014"
+"pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0010FormalParametersq\u0000~\u0000Rq\u0000~"
+"\u0000$sq\u0000~\u0000\r\u0001\u008e\u00e6Eppsq\u0000~\u0000\u000f\u0001\u008e\u00e6:q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0001\u008e\u00e6/ppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~"
+"\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000"
+"%t\u0000.net.sourceforge.czt.oz.jaxb.gen.StringListTypeq\u0000~\u0000)sq\u0000~\u0000"
+"\r\u0001&\u00c2\u0002ppsq\u0000~\u0000\u001b\u0001&\u00c1\u00f7q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000eVi"
+"sibilityListq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0002\u00c7\u00e7appsq\u0000~\u0000\u0018\u0002\u00c7\u00e7Vq\u0000~\u0000\u0014psq\u0000~\u0000\r\u0002\u00c7\u00e7S"
+"q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000h$(q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$"
+"\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005net.sourceforge.czt.oz.jaxb.g"
+"en.InheritedClassElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0002_\u00c3)q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002_\u00c3\u001eppsq"
+"\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001e"
+"q\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.oz.jaxb.gen.Inherited"
+"Classq\u0000~\u0000)sq\u0000~\u0000\r\u0001\u00f7\u009e\u00f1ppsq\u0000~\u0000\u001b\u0001\u00f7\u009e\u00e6q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq"
+"\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000eInheritedClassq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0002\u0017\u00c4 ppsq\u0000~\u0000\r\u0002\u0017\u00c4\u0015q"
+"\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000h$(q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000f"
+"q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.oz.jaxb.ge"
+"n.LocalDefElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0001\u00af\u009f\u00ebq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0001\u00af\u009f\u00e0ppsq\u0000~\u0000\u000f\u0000h$"
+"(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000"
+"~\u0000$sq\u0000~\u0000%t\u0000(net.sourceforge.czt.oz.jaxb.gen.LocalDefq\u0000~\u0000)sq\u0000"
+"~\u0000\r\u0001G{\u00b3ppsq\u0000~\u0000\u001b\u0001G{\u00a8q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\b"
+"LocalDefq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0002\u0094\u00eeKppsq\u0000~\u0000\r\u0002\u0094\u00ee@q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000h$(q\u0000~\u0000"
+"\u0014p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~"
+"\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.gen.StateElementq\u0000~\u0000)"
+"sq\u0000~\u0000\u000f\u0002,\u00ca\u0016q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002,\u00ca\u000bppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018"
+"\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000%net.source"
+"forge.czt.oz.jaxb.gen.Stateq\u0000~\u0000)sq\u0000~\u0000\r\u0001\u00c4\u00a5\u00deppsq\u0000~\u0000\u001b\u0001\u00c4\u00a5\u00d3q\u0000~\u0000\u0014p"
+"q\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0005Stateq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0001\u008e\u00b8\u000f"
+"ppsq\u0000~\u0000\r\u0001\u008e\u00b8\u0004q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000h$(q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00003net.sourceforge.c"
+"zt.oz.jaxb.gen.InitialStateElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0001&\u0093\u00daq\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\u0000\u0001&\u0093\u00cfppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq"
+"\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.gen"
+".InitialStateq\u0000~\u0000)sq\u0000~\u0000\r\u0000\u00beo\u00a2ppsq\u0000~\u0000\u001b\u0000\u00beo\u0097q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~"
+"\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\fInitialStateq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0001W\u0089/ppsq\u0000~\u0000"
+"\u0018\u0001W\u0089$q\u0000~\u0000\u0014psq\u0000~\u0000\r\u0001W\u0089!q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000h$(q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~"
+"\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sour"
+"ceforge.czt.oz.jaxb.gen.OperationElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0000\u00efd\u00f7q\u0000~\u0000\u0014"
+"p\u0000sq\u0000~\u0000\u0000\u0000\u00efd\u00ecppsq\u0000~\u0000\u000f\u0000h$(pp\u0000sq\u0000~\u0000\r\u0000h$\u001dppsq\u0000~\u0000\u0018\u0000h$\u0012q\u0000~\u0000\u0014psq\u0000~\u0000"
+"\u001b\u0000h$\u000fq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000)net.sourceforge.czt.oz.ja"
+"xb.gen.Operationq\u0000~\u0000)sq\u0000~\u0000\r\u0000\u0087@\u00bfppsq\u0000~\u0000\u001b\u0000\u0087@\u00b4q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%"
+"q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\tOperationq\u0000~\u0000Rq\u0000~\u0000$sr\u0000\"com.sun.msv.g"
+"rammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/g"
+"rammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.E"
+"xpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006pa"
+"rentq\u0000~\u0000\u00e2[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000H\u0000"
+"\u0000\u0000rpur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fq\u0000"
+"~\u0000Tppppppppppq\u0000~\u0000Spppppppq\u0000~\u0000\u0005ppq\u0000~\u0000\npppppppppppppppppq\u0000~\u0000\u0015p"
+"q\u0000~\u0000\u0007ppppq\u0000~\u0000\\pq\u0000~\u0000\u008dppppppppppq\u0000~\u0000\u008cpq\u0000~\u0000\u000epq\u0000~\u0000\u00cdppq\u0000~\u0000\u00ccpppppp"
+"pppq\u0000~\u0000Fq\u0000~\u0000\u00cbppppppppppppppppq\u0000~\u0000*q\u0000~\u0000\u0095pppppq\u0000~\u0000cppppppppq\u0000~"
+"\u0000\u00d5ppppppppppppppppppppq\u0000~\u0000Mq\u0000~\u0000\u00a2ppppppppppq\u0000~\u0000\u00a1ppppppq\u0000~\u0000\u009cpp"
+"pq\u0000~\u0000\fppppppppppq\u0000~\u0000\u00dcpppq\u0000~\u0000xq\u0000~\u0000\u000bpq\u0000~\u0000wppppppq\u0000~\u0000\u00aapppq\u0000~\u0000vp"
+"pppppppppppppppppppppq\u0000~\u0000jpppq\u0000~\u0000\tpppppq\u0000~\u0000\u0080pppppppppppq\u0000~\u0000h"
+"pppppq\u0000~\u0000\u00b1pppppppppppppppppppppppppq\u0000~\u0000\u00b7q\u0000~\u0000qpppppppppq\u0000~\u0000\u0087q"
+"\u0000~\u0000\u00b6ppq\u0000~\u0000\bppppppppppppppppppppppppq\u0000~\u0000\u00baq\u0000~\u0000\u00adq\u0000~\u0000\u00a5q\u0000~\u0000\u0098q\u0000~\u0000\u0090"
+"q\u0000~\u0000\u0083q\u0000~\u0000{q\u0000~\u0000mq\u0000~\u0000_q\u0000~\u0000Wq\u0000~\u0000Iq\u0000~\u0000\u00acq\u0000~\u0000\u00a4q\u0000~\u0000\u0097q\u0000~\u0000\u008fq\u0000~\u0000\u0082q\u0000~\u0000z"
+"q\u0000~\u0000lq\u0000~\u0000^q\u0000~\u0000Vq\u0000~\u0000Hq\u0000~\u0000\u0017q\u0000~\u0000\u001aq\u0000~\u0000\u00c1q\u0000~\u0000\u00c2q\u0000~\u0000\u00b9q\u0000~\u0000\u00bfq\u0000~\u0000\u0006q\u0000~\u0000\u00d0"
+"q\u0000~\u0000\u00cfq\u0000~\u0000\u00d8q\u0000~\u0000\u00d7ppppppppppppppppppppppppppppppq\u0000~\u0000\u00c6pppppppppp"
+"ppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 18;
                            return ;
                        }
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  14 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  6 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  24 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  22 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  18 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  9 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl.class), 10, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  16 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  12 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  20 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  4 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 24;
                            return ;
                        }
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 5;
                        continue outer;
                    case  15 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 15, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  5 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 6;
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  8 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  11 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 14;
                        continue outer;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  7 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  6 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  21 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  24 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 14;
                            return ;
                        }
                        break;
                    case  18 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname));
                        return ;
                    case  19 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  25 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 5;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  16 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  20 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  11 :
                        state = 14;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 11;
                        continue outer;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  24 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  18 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  16 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  20 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  11 :
                        state = 14;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 11;
                        continue outer;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  6 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, ___uri, ___local, ___qname));
                        return ;
                    case  24 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  22 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  18 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  16 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, ___uri, ___local, ___qname)));
                        return ;
                    case  12 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  20 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 5;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  5 :
                        state = 8;
                        continue outer;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  11 :
                        state = 14;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 11;
                            continue outer;
                        case  14 :
                            state = 15;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  6 :
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 7, value));
                            return ;
                        case  24 :
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 25, value));
                            return ;
                        case  22 :
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 23, value));
                            return ;
                        case  18 :
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 19, value));
                            return ;
                        case  9 :
                            state = 10;
                            continue outer;
                        case  16 :
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 17, value)));
                            return ;
                        case  12 :
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 13, value));
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  20 :
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 21, value)));
                            return ;
                        case  4 :
                            state = 5;
                            continue outer;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  5 :
                            state = 8;
                            continue outer;
                        case  8 :
                            state = 9;
                            continue outer;
                        case  11 :
                            state = 14;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
