//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.4-b18-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2005.03.23 at 11:46:17 GMT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassParaImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl
    implements net.sourceforge.czt.oz.jaxb.gen.ClassPara, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.circus.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Operation;
    protected com.sun.xml.bind.util.ListImpl _LocalDef;
    protected net.sourceforge.czt.oz.jaxb.gen.InitialState _InitialState;
    protected net.sourceforge.czt.oz.jaxb.gen.State _State;
    protected net.sourceforge.czt.oz.jaxb.gen.VisibilityList _VisibilityList;
    protected com.sun.xml.bind.util.ListImpl _InheritedClass;
    protected com.sun.xml.bind.util.ListImpl _FormalParameters;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getOperation() {
        if (_Operation == null) {
            _Operation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _Operation;
    }

    public java.util.List getOperation() {
        return _getOperation();
    }

    protected com.sun.xml.bind.util.ListImpl _getLocalDef() {
        if (_LocalDef == null) {
            _LocalDef = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _LocalDef;
    }

    public java.util.List getLocalDef() {
        return _getLocalDef();
    }

    public net.sourceforge.czt.oz.jaxb.gen.InitialState getInitialState() {
        return _InitialState;
    }

    public void setInitialState(net.sourceforge.czt.oz.jaxb.gen.InitialState value) {
        _InitialState = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.State getState() {
        return _State;
    }

    public void setState(net.sourceforge.czt.oz.jaxb.gen.State value) {
        _State = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.VisibilityList getVisibilityList() {
        return _VisibilityList;
    }

    public void setVisibilityList(net.sourceforge.czt.oz.jaxb.gen.VisibilityList value) {
        _VisibilityList = value;
    }

    protected com.sun.xml.bind.util.ListImpl _getInheritedClass() {
        if (_InheritedClass == null) {
            _InheritedClass = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _InheritedClass;
    }

    public java.util.List getInheritedClass() {
        return _getInheritedClass();
    }

    protected com.sun.xml.bind.util.ListImpl _getFormalParameters() {
        if (_FormalParameters == null) {
            _FormalParameters = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _FormalParameters;
    }

    public java.util.List getFormalParameters() {
        return _getFormalParameters();
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Operation == null)? 0 :_Operation.size());
        int idx2 = 0;
        final int len2 = ((_LocalDef == null)? 0 :_LocalDef.size());
        int idx6 = 0;
        final int len6 = ((_InheritedClass == null)? 0 :_InheritedClass.size());
        int idx7 = 0;
        final int len7 = ((_FormalParameters == null)? 0 :_FormalParameters.size());
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        while (idx7 != len7) {
            context.startElement("http://czt.sourceforge.net/object-z", "FormalParameters");
            int idx_2 = idx7;
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters.get(idx_2 ++)), "FormalParameters");
            context.endNamespaceDecls();
            int idx_3 = idx7;
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters.get(idx_3 ++)), "FormalParameters");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormalParameters.get(idx7 ++)), "FormalParameters");
            context.endElement();
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
                context.endElement();
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Expr");
                int idx_6 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_6 ++)), "InheritedClass");
                context.endNamespaceDecls();
                int idx_7 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_7 ++)), "InheritedClass");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_LocalDef.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "Para");
                int idx_8 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx_8 ++)), "LocalDef");
                context.endNamespaceDecls();
                int idx_9 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx_9 ++)), "LocalDef");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
                context.endElement();
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "State");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endElement();
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InitialState");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "Operation");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_14 ++)), "Operation");
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_15 ++)), "Operation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Operation == null)? 0 :_Operation.size());
        int idx2 = 0;
        final int len2 = ((_LocalDef == null)? 0 :_LocalDef.size());
        int idx6 = 0;
        final int len6 = ((_InheritedClass == null)? 0 :_InheritedClass.size());
        int idx7 = 0;
        final int len7 = ((_FormalParameters == null)? 0 :_FormalParameters.size());
        super.serializeAttributes(context);
        while (idx7 != len7) {
            idx7 += 1;
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                idx6 += 1;
            }
        }
        while (idx2 != len2) {
            if (_LocalDef.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
            } else {
                idx2 += 1;
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = ((_Operation == null)? 0 :_Operation.size());
        int idx2 = 0;
        final int len2 = ((_LocalDef == null)? 0 :_LocalDef.size());
        int idx6 = 0;
        final int len6 = ((_InheritedClass == null)? 0 :_InheritedClass.size());
        int idx7 = 0;
        final int len7 = ((_FormalParameters == null)? 0 :_FormalParameters.size());
        super.serializeURIs(context);
        while (idx7 != len7) {
            idx7 += 1;
        }
        if (_VisibilityList!= null) {
            if (_VisibilityList instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                idx6 += 1;
            }
        }
        while (idx2 != len2) {
            if (_LocalDef.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef.get(idx2 ++)), "LocalDef");
            } else {
                idx2 += 1;
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.gramma"
+"r.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~"
+"\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen.TermA.AnnsTypet\u0000+http://"
+"java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psr\u0000\u001b"
+"com.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/d"
+"atatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/S"
+"tringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'"
+"com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespa"
+"ceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datat"
+"ype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLS"
+"chemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcesso"
+"r$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Nul"
+"lSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.util.St"
+"ringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000"
+"~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-ins"
+"tanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000"
+"$sq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq"
+"\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sourceforge.czt.z.jaxb.gen.DeclNa"
+"meq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Namet\u0000#ht"
+"tp://czt.sourceforge.net/object-zsq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u000fq"
+"\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001e"
+"q\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%q\u0000~\u0000Lq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000"
+"$sq\u0000~\u0000%t\u0000\u0010FormalParametersq\u0000~\u0000Qq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~"
+"\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~"
+"\u0000%t\u00005net.sourceforge.czt.oz.jaxb.gen.VisibilityListElementq\u0000"
+"~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq"
+"\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.oz.jaxb.gen"
+".VisibilityListq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000"
+"%t\u0000\u000eVisibilityListq\u0000~\u0000Qq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p"
+"\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000&net"
+".sourceforge.czt.z.jaxb.gen.IffExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rp"
+"psq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sourcef"
+"orge.czt.z.jaxb.gen.CompExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018"
+"q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000%net.sourceforge.cz"
+"t.z.jaxb.gen.MuExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000-net.sourceforge.czt.z.jaxb."
+"gen.SchExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005net.sourceforge.czt.tcoz.jax"
+"b.gen.ActuatorExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00002net.sourceforge.czt.z"
+".jaxb.gen.TupleSelExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000"
+"\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000&net.sourceforge.c"
+"zt.z.jaxb.gen.NegExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014ps"
+"q\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.z.jax"
+"b.gen.DecorExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000*net.sourceforge.czt.z.ja"
+"xb.gen.ImpliesExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.z.jaxb.g"
+"en.BindExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000)net.sourceforge.czt.z.jaxb.g"
+"en.ForallExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~"
+"\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000%net.sourceforge.czt.z.jaxb.gen.Or"
+"Exprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq"
+"\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00001net.sourceforge.czt.z.jaxb.gen.BindSelExpr"
+"Elementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~"
+"\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sourceforge.czt.z.jaxb.gen.RenameEx"
+"prElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq"
+"\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000-net.sourceforge.czt.z.jaxb.gen.NumExp"
+"rElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000"
+"~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000&net.sourceforge.czt.z.jaxb.gen.LetExpr"
+"q\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\""
+"q\u0000~\u0000$sq\u0000~\u0000%t\u00003net.sourceforge.czt.zpatt.jaxb.gen.JokerExprEl"
+"ementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001e"
+"q\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.z.jaxb.gen.ApplExprEl"
+"ementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001e"
+"q\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000&net.sourceforge.czt.z.jaxb.gen.PreExprq\u0000~"
+"\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~"
+"\u0000$sq\u0000~\u0000%t\u0000)net.sourceforge.czt.z.jaxb.gen.ExistsExprq\u0000~\u0000)sq\u0000"
+"~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000"
+"~\u0000%t\u0000(net.sourceforge.czt.oz.jaxb.gen.PolyExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~"
+"\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000&"
+"net.sourceforge.czt.z.jaxb.gen.AndExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sour"
+"ceforge.czt.z.jaxb.gen.ProdExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000"
+"~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000*net.sourceforge"
+".czt.z.jaxb.gen.SetCompExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000-net.sourceforge.czt"
+".z.jaxb.gen.RefExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000"
+"~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sourceforge.czt."
+"z.jaxb.gen.PipeExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.z.jaxb."
+"gen.CondExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00004net.sourceforge.czt.tcoz.ja"
+"xb.gen.ChannelExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00003net.sourceforge.czt.t"
+"coz.jaxb.gen.SensorExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~"
+"\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sourceforge."
+"czt.z.jaxb.gen.ProjExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014"
+"psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.oz."
+"jaxb.gen.ContainmentExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.oz"
+".jaxb.gen.ClassUnionExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000"
+"\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000(net.sourceforge.czt.z."
+"jaxb.gen.TupleExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~"
+"\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000&net.sourceforge.czt.z.jaxb.g"
+"en.SetExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014p"
+"q\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.z.jaxb.gen.HideE"
+"xprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014p"
+"q\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.oz.jaxb.gen.Pred"
+"ExprElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014"
+"pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000(net.sourceforge.czt.z.jaxb.gen.Powe"
+"rExprq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001e"
+"q\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000*net.sourceforge.czt.z.jaxb.gen.Exists1Exp"
+"rq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000"
+"\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.z.jaxb.gen.ThetaExprEleme"
+"ntq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~"
+"\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00007net.sourceforge.czt.zpatt.jaxb.gen.JokerExpr"
+"ListElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014"
+"pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000)net.sourceforge.czt.z.jaxb.gen.Lamb"
+"daExprq\u0000~\u0000)q\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p"
+"\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net"
+".sourceforge.czt.oz.jaxb.gen.ClassParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000"
+"\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005n"
+"et.sourceforge.czt.z.jaxb.gen.LatexMarkupParaElementq\u0000~\u0000)sq\u0000"
+"~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000"
+"~\u0000%t\u00000net.sourceforge.czt.z.jaxb.gen.OptempParaElementq\u0000~\u0000)s"
+"q\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$s"
+"q\u0000~\u0000%t\u00006net.sourceforge.czt.circus.jaxb.gen.ChannelParaEleme"
+"ntq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~"
+"\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.z.jaxb.gen.AxParaElement"
+"q\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\""
+"q\u0000~\u0000$sq\u0000~\u0000%t\u00005net.sourceforge.czt.circus.jaxb.gen.ActionPara"
+"Elementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~"
+"\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.zpatt.jaxb.gen.Rule"
+"Elementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~"
+"\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.z.jaxb.gen.GivenPar"
+"aElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000"
+"~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00009net.sourceforge.czt.circus.jaxb.gen.Sc"
+"hChannelParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000"
+"~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00006net.sourceforge.czt.circus."
+"jaxb.gen.ProcessParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt"
+".z.jaxb.gen.ConjParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00009net.sourceforge.czt"
+".circus.jaxb.gen.ChannelSetParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sour"
+"ceforge.czt.z.jaxb.gen.FreeParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00002net.sour"
+"ceforge.czt.z.jaxb.gen.UnparsedParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net."
+"sourceforge.czt.z.jaxb.gen.NarrParaElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net."
+"sourceforge.czt.zpatt.jaxb.gen.JokersElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014"
+"p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00006ne"
+"t.sourceforge.czt.circus.jaxb.gen.NameSetParaElementq\u0000~\u0000)q\u0000~"
+"\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000"
+"\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.g"
+"en.StateElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq"
+"\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000%net.sourceforg"
+"e.czt.oz.jaxb.gen.Stateq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000"
+"~\u0000$sq\u0000~\u0000%t\u0000\u0005Stateq\u0000~\u0000Qq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00003net."
+"sourceforge.czt.oz.jaxb.gen.InitialStateElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000"
+"~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq"
+"\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.gen.InitialSta"
+"teq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\fInitialSt"
+"ateq\u0000~\u0000Qq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\rq\u0000~\u0000\u0014psq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq"
+"\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.so"
+"urceforge.czt.oz.jaxb.gen.OperationElementq\u0000~\u0000)sq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q"
+"\u0000~\u0000$sq\u0000~\u0000%t\u0000)net.sourceforge.czt.oz.jaxb.gen.Operationq\u0000~\u0000)s"
+"q\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq\u0000~\u0000%t\u0000\tOperationq\u0000~\u0000Qq\u0000~"
+"\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"
+"let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"
+"m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005cou"
+"ntB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressio"
+"nPool;xp\u0000\u0000\u0000\u00e8\u0001pq\u0000~\u0000zq\u0000~\u0000\u0006q\u0000~\u0001\u00a0q\u0000~\u0000\u0098q\u0000~\u0000\u000eq\u0000~\u0001\u0097q\u0000~\u0000\u008fq\u0000~\u0001\u009aq\u0000~\u0000\u0092q"
+"\u0000~\u0000\u0085q\u0000~\u0000\fq\u0000~\u00024q\u0000~\u0000\u008cq\u0000~\u0000\u0082q\u0000~\u0000Rq\u0000~\u0000\bq\u0000~\u0000\u0005q\u0000~\u0000\u0084q\u0000~\u0001\u0096q\u0000~\u0000\u008eq\u0000~\u0000\u0007q"
+"\u0000~\u00023q\u0000~\u0000\u0089q\u0000~\u0000wq\u0000~\u0000\tq\u0000~\u00025q\u0000~\u0002 q\u0000~\u0002\fq\u0000~\u0000`q\u0000~\u0000\u000bq\u0000~\u0001\u009fq\u0000~\u0000\u0097q\u0000~\u0002@q"
+"\u0000~\u00028q\u0000~\u0002+q\u0000~\u0002#q\u0000~\u0002\u0017q\u0000~\u0002\u000fq\u0000~\u0002\u0007q\u0000~\u0002\u0001q\u0000~\u0001\u00fbq\u0000~\u0001\u00f5q\u0000~\u0001\u00efq\u0000~\u0001\u00e9q\u0000~\u0001\u00e3q"
+"\u0000~\u0001\u00ddq\u0000~\u0001\u00d7q\u0000~\u0001\u00d1q\u0000~\u0001\u00cbq\u0000~\u0001\u00c5q\u0000~\u0001\u00bfq\u0000~\u0001\u00b9q\u0000~\u0001\u00b3q\u0000~\u0001\u00adq\u0000~\u0001\u00a7q\u0000~\u0001\u008fq\u0000~\u0001\u0089q"
+"\u0000~\u0001\u0083q\u0000~\u0001}q\u0000~\u0001wq\u0000~\u0001qq\u0000~\u0001kq\u0000~\u0001eq\u0000~\u0001_q\u0000~\u0001Yq\u0000~\u0001Sq\u0000~\u0000\u00dbq\u0000~\u0000\u00d5q\u0000~\u0000\u00cfq"
+"\u0000~\u0000\u00c9q\u0000~\u0000\u00c3q\u0000~\u0000\u00bdq\u0000~\u0000\u00b7q\u0000~\u0000\u00b1q\u0000~\u0000\u00abq\u0000~\u0000\u00a5q\u0000~\u0000\u009fq\u0000~\u0000xq\u0000~\u0000kq\u0000~\u0000cq\u0000~\u0000Xq"
+"\u0000~\u0000Iq\u0000~\u0000\u001aq\u0000~\u0000\u00e1q\u0000~\u0000\u00e7q\u0000~\u0000\u00edq\u0000~\u0000\u00f3q\u0000~\u0000\u00f9q\u0000~\u0000\u00ffq\u0000~\u0001\u0005q\u0000~\u0001\u000bq\u0000~\u0001\u0011q\u0000~\u0001\u0017q"
+"\u0000~\u0001\u001dq\u0000~\u0001#q\u0000~\u0001)q\u0000~\u0001/q\u0000~\u00015q\u0000~\u0001;q\u0000~\u0001Aq\u0000~\u0001Gq\u0000~\u0001Mq\u0000~\u0000\u007fq\u0000~\u0000}q\u0000~\u0001\u00a1q"
+"\u0000~\u0000\u0099q\u0000~\u0002\u001fq\u0000~\u0002\u000bq\u0000~\u0000_q\u0000~\u0000\u0080q\u0000~\u0001\u009bq\u0000~\u0000\u0093q\u0000~\u0002=q\u0000~\u0002(q\u0000~\u0002\u0014q\u0000~\u0000hq\u0000~\u0000Uq"
+"\u0000~\u0000Fq\u0000~\u0000\u0015q\u0000~\u0001\u0095q\u0000~\u0000\u008dq\u0000~\u0001\u00a4q\u0000~\u0000\u009cq\u0000~\u0000\u0081q\u0000~\u0002Dq\u0000~\u0002/q\u0000~\u0002\u001bq\u0000~\u0000oq\u0000~\u0000[q"
+"\u0000~\u0000Mq\u0000~\u0000*q\u0000~\u0001\u00a3q\u0000~\u0000\u009bq\u0000~\u0000|q\u0000~\u0000vq\u0000~\u0000{q\u0000~\u0002?q\u0000~\u00027q\u0000~\u0002*q\u0000~\u0002\"q\u0000~\u0002\u0016q"
+"\u0000~\u0002\u000eq\u0000~\u0002\u0006q\u0000~\u0002\u0000q\u0000~\u0001\u00faq\u0000~\u0001\u00f4q\u0000~\u0001\u00eeq\u0000~\u0001\u00e8q\u0000~\u0001\u00e2q\u0000~\u0001\u00dcq\u0000~\u0001\u00d6q\u0000~\u0001\u00d0q\u0000~\u0001\u00caq"
+"\u0000~\u0001\u00c4q\u0000~\u0001\u00beq\u0000~\u0001\u00b8q\u0000~\u0001\u00b2q\u0000~\u0001\u00acq\u0000~\u0001\u00a6q\u0000~\u0001\u008eq\u0000~\u0001\u0088q\u0000~\u0001\u0082q\u0000~\u0001\u00a2q\u0000~\u0000\u009aq\u0000~\u0001|q"
+"\u0000~\u0001vq\u0000~\u0001pq\u0000~\u0001jq\u0000~\u0001dq\u0000~\u0001^q\u0000~\u0001Xq\u0000~\u0001Rq\u0000~\u0000\u00daq\u0000~\u0000\u00d4q\u0000~\u0000\u00ceq\u0000~\u0000\u00c8q\u0000~\u0000\u00c2q"
+"\u0000~\u0000\u00bcq\u0000~\u0000\u00b6q\u0000~\u0000\u00b0q\u0000~\u0000\u00aaq\u0000~\u0000\u00a4q\u0000~\u0000\u009eq\u0000~\u0000jq\u0000~\u0000bq\u0000~\u0000Wq\u0000~\u0000Hq\u0000~\u0000\u0017q\u0000~\u0000\u00e0q"
+"\u0000~\u0000\u00e6q\u0000~\u0000\u00ecq\u0000~\u0000\u00f2q\u0000~\u0000\u00f8q\u0000~\u0000\u00feq\u0000~\u0001\u0004q\u0000~\u0001\nq\u0000~\u0001\u0010q\u0000~\u0001\u0016q\u0000~\u0001\u001cq\u0000~\u0001\"q\u0000~\u0001(q"
+"\u0000~\u0001.q\u0000~\u00014q\u0000~\u0001:q\u0000~\u0001@q\u0000~\u0001Fq\u0000~\u0001Lq\u0000~\u0000\u0086q\u0000~\u0000\nq\u0000~\u0000\u008aq\u0000~\u0000uq\u0000~\u0000\u0083q\u0000~\u0001\u009cq"
+"\u0000~\u0000\u0094q\u0000~\u0000Sq\u0000~\u0001\u0093q\u0000~\u0001\u009dq\u0000~\u0000\u0095q\u0000~\u0001\u0094q\u0000~\u0000tq\u0000~\u0000\u0087q\u0000~\u0001\u0098q\u0000~\u0000\u008bq\u0000~\u0000\u0090q\u0000~\u0000yq"
+"\u0000~\u0000sq\u0000~\u0001\u0099q\u0000~\u0000\u0091q\u0000~\u0000\u0088q\u0000~\u0001\u009eq\u0000~\u0000\u0096q\u0000~\u0000~x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.circus.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(net.sourceforge.czt.circus.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  16 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  20 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  14 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  4 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  22 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 23, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  11 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PrimaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SecondaryDecl" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl.class), 16, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  7 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 24;
                            return ;
                        }
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListElementImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 8;
                        continue outer;
                    case  24 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  19 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 19, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActuatorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SensorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  10 :
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LatexMarkupPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActionPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Rule" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchChannelPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProcessPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Jokers" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NameSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.class), 13, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  9 :
                        if (("IffExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.IffExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CompExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("MuExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.MuExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SchExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActuatorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ActuatorExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleSelExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NegExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NegExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DecorExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DecorExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ImpliesExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ImpliesExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ForallExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ForallExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OrExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OrExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("BindSelExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.BindSelExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RenameExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RenameExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NumExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NumExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LetExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerExpr" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ApplExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ApplExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PreExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PreExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ExistsExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExistsExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PolyExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PolyExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AndExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AndExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProdExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProdExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetCompExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetCompExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("RefExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.RefExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PipeExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PipeExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("CondExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.CondExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.ChannelExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SensorExpr" == ___local)&&("http://czt.sourceforge.net/tcoz" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.tcoz.jaxb.gen.impl.SensorExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProjExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ProjExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ContainmentExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ContainmentExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassUnionExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassUnionExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("TupleExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.TupleExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SetExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.SetExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("HideExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.HideExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PredExpr" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.PredExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("PowerExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.PowerExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Exists1Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.Exists1ExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ThetaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ThetaExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("JokerExprList" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokerExprListElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LambdaExpr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LambdaExprImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprElementImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ClassPara" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LatexMarkupPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.LatexMarkupParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("OptempPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.OptempParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.AxParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ActionPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ActionParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Rule" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.RuleElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.GivenParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchChannelPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.SchChannelParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ProcessPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ProcessParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ConjPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ConjParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("ChannelSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.ChannelSetParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.FreeParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("UnparsedPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.UnparsedParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NarrPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.NarrParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Jokers" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.zpatt.jaxb.gen.impl.JokersElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("NameSetPara" == ___local)&&("http://czt.sourceforge.net/circus" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.circus.jaxb.gen.impl.NameSetParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaElementImpl.class), 10, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname)));
                        return ;
                    case  21 :
                        if (("Para" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  6 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  20 :
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 21, ___uri, ___local, ___qname)));
                        return ;
                    case  14 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  22 :
                        _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  15 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  24 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  25 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 8;
                            return ;
                        }
                        break;
                    case  5 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  19 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  23 :
                        if (("Expr" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname)));
                        return ;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  20 :
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 21, ___uri, ___local, ___qname)));
                        return ;
                    case  14 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  22 :
                        _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  24 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  19 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  17 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, ___uri, ___local, ___qname)));
                        return ;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  20 :
                        _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 21, ___uri, ___local, ___qname)));
                        return ;
                    case  14 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  22 :
                        _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 23, ___uri, ___local, ___qname)));
                        return ;
                    case  11 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        state = 8;
                        continue outer;
                    case  24 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  19 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        state = 9;
                        continue outer;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  9 :
                        state = 10;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  17 :
                            attIdx = context.getAttribute("", "Box");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getOperation().add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 18, value)));
                            return ;
                        case  16 :
                            state = 19;
                            continue outer;
                        case  20 :
                            _getLocalDef().add(((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl.class), 21, value)));
                            return ;
                        case  14 :
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 15, value));
                            return ;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  22 :
                            _getInheritedClass().add(((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.ExprImpl.class), 23, value)));
                            return ;
                        case  11 :
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 12, value));
                            return ;
                        case  13 :
                            state = 16;
                            continue outer;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  7 :
                            state = 8;
                            continue outer;
                        case  24 :
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.VisibilityListImpl.class), 25, value));
                            return ;
                        case  5 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _getFormalParameters().add(((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 6, value)));
                            return ;
                        case  19 :
                            revertToParentFromText(value);
                            return ;
                        case  8 :
                            state = 9;
                            continue outer;
                        case  10 :
                            state = 13;
                            continue outer;
                        case  9 :
                            state = 10;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
