//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.05.10 at 09:41:23 NZST 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassParaImpl
    extends net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl
    implements net.sourceforge.czt.oz.jaxb.gen.ClassPara, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.oz.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Operation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.LocalDef _LocalDef;
    protected net.sourceforge.czt.oz.jaxb.gen.InitialState _InitialState;
    protected net.sourceforge.czt.oz.jaxb.gen.State _State;
    protected net.sourceforge.czt.oz.jaxb.gen.RefNameList _VisibilityList;
    protected com.sun.xml.bind.util.ListImpl _InheritedClass = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.FormalParameters _FormalParameters;
    protected net.sourceforge.czt.z.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public java.util.List getOperation() {
        return _Operation;
    }

    public net.sourceforge.czt.oz.jaxb.gen.LocalDef getLocalDef() {
        return _LocalDef;
    }

    public void setLocalDef(net.sourceforge.czt.oz.jaxb.gen.LocalDef value) {
        _LocalDef = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.InitialState getInitialState() {
        return _InitialState;
    }

    public void setInitialState(net.sourceforge.czt.oz.jaxb.gen.InitialState value) {
        _InitialState = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.State getState() {
        return _State;
    }

    public void setState(net.sourceforge.czt.oz.jaxb.gen.State value) {
        _State = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.RefNameList getVisibilityList() {
        return _VisibilityList;
    }

    public void setVisibilityList(net.sourceforge.czt.oz.jaxb.gen.RefNameList value) {
        _VisibilityList = value;
    }

    public java.util.List getInheritedClass() {
        return _InheritedClass;
    }

    public net.sourceforge.czt.oz.jaxb.gen.FormalParameters getFormalParameters() {
        return _FormalParameters;
    }

    public void setFormalParameters(net.sourceforge.czt.oz.jaxb.gen.FormalParameters value) {
        _FormalParameters = value;
    }

    public net.sourceforge.czt.z.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.z.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.Unmarshaller(context);
    }

    public void serializeBody(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Name), "Name");
        context.endElement();
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "FormalParameters");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
                context.endElement();
            }
        }
        if (_VisibilityList!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _VisibilityList), "VisibilityList");
            context.endElement();
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InheritedClass");
                int idx_6 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_6 ++)), "InheritedClass");
                context.endNamespaceDecls();
                int idx_7 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_7 ++)), "InheritedClass");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
                context.endElement();
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "LocalDef");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
                context.endElement();
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "State");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _State), "State");
                context.endElement();
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InitialState");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "Operation");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_14 ++)), "Operation");
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_15 ++)), "Operation");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeAttributes(context);
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                idx6 += 1;
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeURIs(context);
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters), "FormalParameters");
            }
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)), "InheritedClass");
            } else {
                idx6 += 1;
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef), "LocalDef");
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State), "State");
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState), "InitialState");
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)), "Operation");
            } else {
                idx1 += 1;
            }
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp \u00a4g\u00f0ppsq\u0000~\u0000\u0000\u001c\u00ac\u00bb\u00f7ppsq\u0000~\u0000\u0000\u0019"
+"\u001cU\u00ceppsq\u0000~\u0000\u0000\u0014\u00d9sNppsq\u0000~\u0000\u0000\u0010\u00e7\u00a6\u00edppsq\u0000~\u0000\u0000\f\u00d6i\u00b0ppsq\u0000~\u0000\u0000\b\u00f6\u0097\u0007ppsq\u0000~\u0000\u0000\u0005"
+"\u00bf\u0098Dppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0002\u00c3\u00a7$p"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0002\u00c3\u00a7\u0019sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u0000\u0002\u00c3\u00a7\u000eppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsr\u0000 com.sun.m"
+"sv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.Un"
+"aryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000K\u00d1\u007fq\u0000~\u0000\u0014psr\u0000 com.sun.msv."
+"grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010x"
+"q\u0000~\u0000\u0003\u0000K\u00d1|q\u0000~\u0000\u0014psr\u00002com.sun.msv.grammar.Expression$AnyStringE"
+"xpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.gr"
+"ammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExp"
+"ression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.gramma"
+"r.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String"
+";L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~\u0000!t\u0000-net.sourceforge.czt.z.jaxb.gen"
+".TermA.AnnsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000\r\u0002w\u00d5tppsq\u0000~\u0000\u001b\u0002w\u00d5iq\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.grammar.DataExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq"
+"\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003\u0001\u00c3\t\u00a3ppsr\u0000\"c"
+"om.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv."
+"datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.dat"
+"atype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xs"
+"d.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000&L\u0000\btypeNameq\u0000"
+"~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProce"
+"ssor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.su"
+"n.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr"
+"\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
+"r\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nq\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002"
+"L\u0000\tlocalNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004ty"
+"pet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004"
+"Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000$sq\u0000~\u0000\u000f\u0002\u00fb\u00f1\u001bpp\u0000sq\u0000~\u0000"
+"\u0000\u0002\u00fb\u00f1\u0010ppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000"
+"~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000\'net.sourceforge.czt.z.jaxb.gen.D"
+"eclNameq\u0000~\u0000)sq\u0000~\u0000\r\u0002\u00b0\u001fvppsq\u0000~\u0000\u001b\u0002\u00b0\u001fkq\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000"
+"Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0004Namet\u0000#http://czt.sourceforge.net/object-zsq\u0000"
+"~\u0000\r\u00036\u00fe\u00beppsq\u0000~\u0000\r\u00036\u00fe\u00b3q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000K\u00d1\u0095q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018"
+"\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00007net.source"
+"forge.czt.oz.jaxb.gen.FormalParametersElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0002\u00eb-\u001c"
+"q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0002\u00eb-\u0011ppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sourceforge.czt."
+"oz.jaxb.gen.FormalParametersq\u0000~\u0000)sq\u0000~\u0000\r\u0002\u009f[wppsq\u0000~\u0000\u001b\u0002\u009f[lq\u0000~\u0000\u0014"
+"pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0010FormalParametersq\u0000~\u0000Rq\u0000~"
+"\u0000$sq\u0000~\u0000\r\u0003\u00df\u00d2\u00a4ppsq\u0000~\u0000\u000f\u0003\u00df\u00d2\u0099q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0003\u00df\u00d2\u008eppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~"
+"\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000"
+"%t\u0000+net.sourceforge.czt.oz.jaxb.gen.RefNameListq\u0000~\u0000)sq\u0000~\u0000\r\u0003\u0094"
+"\u0000\u00f4ppsq\u0000~\u0000\u001b\u0003\u0094\u0000\u00e9q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u000eVisib"
+"ilityListq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0004\u0011=8ppsq\u0000~\u0000\u0018\u0004\u0011=-q\u0000~\u0000\u0014psq\u0000~\u0000\r\u0004\u0011=*q\u0000~"
+"\u0000\u0014psq\u0000~\u0000\u000f\u0000K\u00d1\u0095q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000"
+"~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00005net.sourceforge.czt.oz.jaxb.gen."
+"InheritedClassElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0003\u00c5k\u0093q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0003\u00c5k\u0088ppsq\u0000~\u0000"
+"\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~"
+"\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000.net.sourceforge.czt.oz.jaxb.gen.InheritedCla"
+"ssq\u0000~\u0000)sq\u0000~\u0000\r\u0003y\u0099\u00eeppsq\u0000~\u0000\u001b\u0003y\u0099\u00e3q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000"
+"$sq\u0000~\u0000%t\u0000\u000eInheritedClassq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0003\u00f1\u00cc\\ppsq\u0000~\u0000\r\u0003\u00f1\u00ccQq\u0000~\u0000"
+"\u0014psq\u0000~\u0000\u000f\u0000K\u00d1\u0095q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~"
+"\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000/net.sourceforge.czt.oz.jaxb.gen.L"
+"ocalDefElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0003\u00a5\u00fa\u00baq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0003\u00a5\u00fa\u00afppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp"
+"\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$"
+"sq\u0000~\u0000%t\u0000(net.sourceforge.czt.oz.jaxb.gen.LocalDefq\u0000~\u0000)sq\u0000~\u0000\r"
+"\u0003Z)\u0015ppsq\u0000~\u0000\u001b\u0003Z)\nq\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\bLoc"
+"alDefq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0004B\u00e2{ppsq\u0000~\u0000\r\u0004B\u00e2pq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000K\u00d1\u0095q\u0000~\u0000\u0014p\u0000"
+"sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$s"
+"q\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.gen.StateElementq\u0000~\u0000)sq\u0000"
+"~\u0000\u000f\u0003\u00f7\u0010\u00d9q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0003\u00f7\u0010\u00ceppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1"
+"\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000%net.sourcefor"
+"ge.czt.oz.jaxb.gen.Stateq\u0000~\u0000)sq\u0000~\u0000\r\u0003\u00ab?4ppsq\u0000~\u0000\u001b\u0003\u00ab?)q\u0000~\u0000\u0014pq\u0000~"
+"\u0000/sq\u0000~\u0000%q\u0000~\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0005Stateq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0003\u0090f$pps"
+"q\u0000~\u0000\r\u0003\u0090f\u0019q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000K\u00d1\u0095q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014p"
+"sq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00003net.sourceforge.czt."
+"oz.jaxb.gen.InitialStateElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0003D\u0094\u0082q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000\u0003"
+"D\u0094wppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000"
+"\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000,net.sourceforge.czt.oz.jaxb.gen.In"
+"itialStateq\u0000~\u0000)sq\u0000~\u0000\r\u0002\u00f8\u00c2\u00ddppsq\u0000~\u0000\u001b\u0002\u00f8\u00c2\u00d2q\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~\u0000@q"
+"\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\fInitialStateq\u0000~\u0000Rq\u0000~\u0000$sq\u0000~\u0000\r\u0003\u00f7\u00ab\u00f4ppsq\u0000~\u0000\u0018\u0003\u00f7"
+"\u00ab\u00e9q\u0000~\u0000\u0014psq\u0000~\u0000\r\u0003\u00f7\u00ab\u00e6q\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0000K\u00d1\u0095q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000"
+"K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u00000net.sourcef"
+"orge.czt.oz.jaxb.gen.OperationElementq\u0000~\u0000)sq\u0000~\u0000\u000f\u0003\u00ab\u00daOq\u0000~\u0000\u0014p\u0000s"
+"q\u0000~\u0000\u0000\u0003\u00ab\u00daDppsq\u0000~\u0000\u000f\u0000K\u00d1\u0095pp\u0000sq\u0000~\u0000\r\u0000K\u00d1\u008appsq\u0000~\u0000\u0018\u0000K\u00d1\u007fq\u0000~\u0000\u0014psq\u0000~\u0000\u001b\u0000K"
+"\u00d1|q\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000)net.sourceforge.czt.oz.jaxb."
+"gen.Operationq\u0000~\u0000)sq\u0000~\u0000\r\u0003`\b\u00aappsq\u0000~\u0000\u001b\u0003`\b\u009fq\u0000~\u0000\u0014pq\u0000~\u0000/sq\u0000~\u0000%q\u0000~"
+"\u0000@q\u0000~\u0000Aq\u0000~\u0000$sq\u0000~\u0000%t\u0000\tOperationq\u0000~\u0000Rq\u0000~\u0000$sr\u0000\"com.sun.msv.gram"
+"mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
+"mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
+"essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006paren"
+"tq\u0000~\u0000\u00e2[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000H\u0000\u0000\u0000r"
+"pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0001\u007fppppp"
+"ppppppppq\u0000~\u0000\u0007q\u0000~\u0000\u0015ppppppq\u0000~\u0000hppppppppppppppq\u0000~\u0000\u000eq\u0000~\u0000\u00bfppppppp"
+"pppppppppppppppppppppppppppq\u0000~\u0000\u00aappppppppppq\u0000~\u0000\u0080ppppppppppppp"
+"ppppq\u0000~\u0000\bppq\u0000~\u0000Mpppppppppppppq\u0000~\u0000\u0095pq\u0000~\u0000\u00d5pppppppppppppppppppp"
+"ppq\u0000~\u0000\tppppppppppppppppppppppppppppq\u0000~\u0000\u00c2q\u0000~\u0000\u00baq\u0000~\u0000\u00adq\u0000~\u0000\u00a5q\u0000~\u0000\u0098"
+"q\u0000~\u0000\u0090q\u0000~\u0000\u0083q\u0000~\u0000{q\u0000~\u0000mq\u0000~\u0000_q\u0000~\u0000Wq\u0000~\u0000\u00c1q\u0000~\u0000\u00b9q\u0000~\u0000\u00acq\u0000~\u0000\u00a4q\u0000~\u0000\u0097q\u0000~\u0000\u008f"
+"q\u0000~\u0000\u0082q\u0000~\u0000zq\u0000~\u0000lq\u0000~\u0000^q\u0000~\u0000Vq\u0000~\u0000Hq\u0000~\u0000\u0017q\u0000~\u0000Iq\u0000~\u0000\u001aq\u0000~\u0000\u000bq\u0000~\u0000qq\u0000~\u0000c"
+"q\u0000~\u0000*q\u0000~\u0000\u00d0q\u0000~\u0000Tq\u0000~\u0000\u00cfq\u0000~\u0000\u00d8q\u0000~\u0000\u00d7pppppppq\u0000~\u0000Sppq\u0000~\u0000\nppq\u0000~\u0000\u00c6pppp"
+"ppppppppppq\u0000~\u0000\u0005pppppppq\u0000~\u0000\u00b7ppppppppppq\u0000~\u0000\u00b6pq\u0000~\u0000\u00b1ppppppppppq\u0000"
+"~\u0000\u0087ppppq\u0000~\u0000\u0006ppppppq\u0000~\u0000\u00a2ppppppppppq\u0000~\u0000\u00a1q\u0000~\u0000xpq\u0000~\u0000wppppppppq\u0000~"
+"\u0000\u009cq\u0000~\u0000Fq\u0000~\u0000vq\u0000~\u0000\u00dcpppppppppppppppppppq\u0000~\u0000\u008dpq\u0000~\u0000\u00cdppq\u0000~\u0000\u00ccpppppq"
+"\u0000~\u0000\u008cppppq\u0000~\u0000\u00cbpppppppppppppq\u0000~\u0000\fpppppppppppppppppppppppq\u0000~\u0000\\p"
+"pq\u0000~\u0000j"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.oz.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(net.sourceforge.czt.oz.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  24 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  21 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationElementImpl.class), 21, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  10 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        state = 11;
                        continue outer;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  11 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 12;
                            return ;
                        }
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassElementImpl.class), 11, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 24;
                            return ;
                        }
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefElementImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 14;
                        continue outer;
                    case  22 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SecondaryAttributes" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("SecondaryAttributes" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  14 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateElementImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  4 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersElementImpl.class), 7, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  19 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  15 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateElementImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  16 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("PromotedInitPred" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  7 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  12 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  23 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 21;
                        continue outer;
                    case  9 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  5 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  24 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  21 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  6 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  22 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  17 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  19 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, ___uri, ___local, ___qname)));
                        return ;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  13 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 11;
                            return ;
                        }
                        break;
                    case  25 :
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 14;
                            return ;
                        }
                        break;
                    case  16 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  12 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  5 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  24 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  21 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  22 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  19 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, ___uri, ___local, ___qname)));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  16 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  12 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        state = 21;
                        continue outer;
                    case  5 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  24 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, ___uri, ___local, ___qname));
                        return ;
                    case  21 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  10 :
                        state = 11;
                        continue outer;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  11 :
                        state = 14;
                        continue outer;
                    case  22 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, ___uri, ___local, ___qname));
                        return ;
                    case  14 :
                        state = 15;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  19 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, ___uri, ___local, ___qname)));
                        return ;
                    case  15 :
                        state = 18;
                        continue outer;
                    case  16 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, ___uri, ___local, ___qname));
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  12 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  18 :
                            state = 21;
                            continue outer;
                        case  5 :
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, value));
                            return ;
                        case  24 :
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 25, value));
                            return ;
                        case  21 :
                            revertToParentFromText(value);
                            return ;
                        case  10 :
                            state = 11;
                            continue outer;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.z.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  11 :
                            state = 14;
                            continue outer;
                        case  22 :
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 23, value));
                            return ;
                        case  14 :
                            state = 15;
                            continue outer;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  8 :
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.RefNameListImpl.class), 9, value));
                            return ;
                        case  19 :
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 20, value)));
                            return ;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  16 :
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 17, value));
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.z.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  12 :
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 13, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
