//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class ClassParaImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl
    implements net.sourceforge.czt.oz.jaxb.gen.ClassPara, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _Operation = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.LocalDef _LocalDef;
    protected net.sourceforge.czt.oz.jaxb.gen.InitialState _InitialState;
    protected net.sourceforge.czt.oz.jaxb.gen.State _State;
    protected net.sourceforge.czt.oz.jaxb.gen.StringListType _VisibilityList;
    protected com.sun.xml.bind.util.ListImpl _InheritedClass = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected net.sourceforge.czt.oz.jaxb.gen.FormalParameters _FormalParameters;
    protected net.sourceforge.czt.core.jaxb.gen.DeclName _Name;
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public java.util.List getOperation() {
        return _Operation;
    }

    public net.sourceforge.czt.oz.jaxb.gen.LocalDef getLocalDef() {
        return _LocalDef;
    }

    public void setLocalDef(net.sourceforge.czt.oz.jaxb.gen.LocalDef value) {
        _LocalDef = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.InitialState getInitialState() {
        return _InitialState;
    }

    public void setInitialState(net.sourceforge.czt.oz.jaxb.gen.InitialState value) {
        _InitialState = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.State getState() {
        return _State;
    }

    public void setState(net.sourceforge.czt.oz.jaxb.gen.State value) {
        _State = value;
    }

    public net.sourceforge.czt.oz.jaxb.gen.StringListType getVisibilityList() {
        return _VisibilityList;
    }

    public void setVisibilityList(net.sourceforge.czt.oz.jaxb.gen.StringListType value) {
        _VisibilityList = value;
    }

    public java.util.List getInheritedClass() {
        return _InheritedClass;
    }

    public net.sourceforge.czt.oz.jaxb.gen.FormalParameters getFormalParameters() {
        return _FormalParameters;
    }

    public void setFormalParameters(net.sourceforge.czt.oz.jaxb.gen.FormalParameters value) {
        _FormalParameters = value;
    }

    public net.sourceforge.czt.core.jaxb.gen.DeclName getName() {
        return _Name;
    }

    public void setName(net.sourceforge.czt.core.jaxb.gen.DeclName value) {
        _Name = value;
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeElementBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name));
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name));
        context.endAttributes();
        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Name));
        context.endElement();
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _FormalParameters));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "FormalParameters");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _FormalParameters));
                context.endElement();
            }
        }
        if (_VisibilityList!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _VisibilityList));
            context.endElement();
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InheritedClass");
                int idx_6 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_6 ++)));
                context.endNamespaceDecls();
                int idx_7 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_7 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)));
                context.endElement();
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _LocalDef));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "LocalDef");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _LocalDef));
                context.endElement();
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _State));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "State");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _State));
                context.endElement();
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _InitialState));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InitialState");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _InitialState));
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "Operation");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_14 ++)));
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_15 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)));
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeAttributes(context);
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeAttributeBody(context);
        context.startElement("http://czt.sourceforge.net/object-z", "Name");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Name));
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Name));
        context.endAttributes();
        context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Name));
        context.endElement();
        if (_FormalParameters!= null) {
            if (_FormalParameters instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _FormalParameters));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "FormalParameters");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FormalParameters));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FormalParameters));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _FormalParameters));
                context.endElement();
            }
        }
        if (_VisibilityList!= null) {
            context.startElement("http://czt.sourceforge.net/object-z", "VisibilityList");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _VisibilityList));
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _VisibilityList));
            context.endAttributes();
            context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _VisibilityList));
            context.endElement();
        }
        while (idx6 != len6) {
            if (_InheritedClass.get(idx6) instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InheritedClass");
                int idx_6 = idx6;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_6 ++)));
                context.endNamespaceDecls();
                int idx_7 = idx6;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx_7 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _InheritedClass.get(idx6 ++)));
                context.endElement();
            }
        }
        if (_LocalDef!= null) {
            if (_LocalDef instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _LocalDef));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "LocalDef");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _LocalDef));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _LocalDef));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _LocalDef));
                context.endElement();
            }
        }
        if (_State!= null) {
            if (_State instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _State));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "State");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _State));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _State));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _State));
                context.endElement();
            }
        }
        if (_InitialState!= null) {
            if (_InitialState instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _InitialState));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "InitialState");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _InitialState));
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _InitialState));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _InitialState));
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_Operation.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/object-z", "Operation");
                int idx_14 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_14 ++)));
                context.endNamespaceDecls();
                int idx_15 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Operation.get(idx_15 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _Operation.get(idx1 ++)));
                context.endElement();
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _Operation.size();
        int idx6 = 0;
        final int len6 = _InheritedClass.size();
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.ClassPara.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u0016Rw\u009dppsq\u0000~\u0000\u0000\u0013X\u0089\u00cdppsq\u0000~\u0000\u0000\u0010"
+"^\u009c\u0000ppsq\u0000~\u0000\u0000\rd\u00ae3ppsq\u0000~\u0000\u0000\nj\u00c0fppsq\u0000~\u0000\u0000\u0007p\u00d2\u0096ppsq\u0000~\u0000\u0000\u0005\u00f3\u00db\u00a3ppsq\u0000~\u0000\u0000\u0002"
+"\u00f9\u00ed\u00d6ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001|\u00f6\u00eep"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00e3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\u0014psr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001dsr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u001eq\u0000~\u0000#sr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000%xq\u0000~\u0000 t\u00000net.sourceforge.czt.core.jaxb.gen.TermA.An"
+"nsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000$t\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000#sq\u0000~\u0000\u000f\u0001|\u00f6\u00e3pp\u0000sq\u0000~"
+"\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000"
+"~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000*net.sourceforge.czt.core.jaxb.gen.DeclNameq"
+"\u0000~\u0000(sq\u0000~\u0000$t\u0000\u0004Namet\u0000#http://czt.sourceforge.net/object-zsq\u0000~\u0000"
+"\r\u0002\u00f9\u00ed\u00c8ppsq\u0000~\u0000\r\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0001|\u00f6\u00e3q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001"
+"|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000"
+"0net.sourceforge.czt.oz.jaxb.gen.FormalParametersq\u0000~\u0000(sq\u0000~\u0000$"
+"t\u0000\u0010FormalParametersq\u0000~\u00005sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001"
+"|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u00007net.sourcef"
+"orge.czt.oz.jaxb.gen.FormalParametersElementq\u0000~\u0000(q\u0000~\u0000#sq\u0000~\u0000\r"
+"\u0001|\u00f6\u00eeppsq\u0000~\u0000\u000f\u0001|\u00f6\u00e3q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000"
+"~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000.net.sourceforge."
+"czt.oz.jaxb.gen.StringListTypeq\u0000~\u0000(sq\u0000~\u0000$t\u0000\u000eVisibilityListq\u0000"
+"~\u00005q\u0000~\u0000#sq\u0000~\u0000\r\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000\u0017\u0002\u00f9\u00ed\u00c0q\u0000~\u0000\u0014psq\u0000~\u0000\r\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0001|"
+"\u00f6\u00e3q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bf"
+"q\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000.net.sourceforge.czt.oz.jaxb.ge"
+"n.InheritedClassq\u0000~\u0000(sq\u0000~\u0000$t\u0000\u000eInheritedClassq\u0000~\u00005sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8q"
+"\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!"
+"q\u0000~\u0000#sq\u0000~\u0000$t\u00005net.sourceforge.czt.oz.jaxb.gen.InheritedClass"
+"Elementq\u0000~\u0000(q\u0000~\u0000#sq\u0000~\u0000\r\u0002\u00f9\u00ed\u00c8ppsq\u0000~\u0000\r\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0001|\u00f6\u00e3q\u0000~\u0000\u0014"
+"p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq"
+"\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000(net.sourceforge.czt.oz.jaxb.gen.Local"
+"Defq\u0000~\u0000(sq\u0000~\u0000$t\u0000\bLocalDefq\u0000~\u00005sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdpps"
+"q\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000/net.s"
+"ourceforge.czt.oz.jaxb.gen.LocalDefElementq\u0000~\u0000(q\u0000~\u0000#sq\u0000~\u0000\r\u0002\u00f9"
+"\u00ed\u00c8ppsq\u0000~\u0000\r\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0001|\u00f6\u00e3q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cd"
+"ppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000%ne"
+"t.sourceforge.czt.oz.jaxb.gen.Stateq\u0000~\u0000(sq\u0000~\u0000$t\u0000\u0005Stateq\u0000~\u00005s"
+"q\u0000~\u0000\u000f\u0001|\u00f6\u00d8q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014p"
+"q\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000,net.sourceforge.czt.oz.jaxb.gen.Stat"
+"eElementq\u0000~\u0000(q\u0000~\u0000#sq\u0000~\u0000\r\u0002\u00f9\u00ed\u00c8ppsq\u0000~\u0000\r\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0001|\u00f6\u00e3q\u0000~\u0000"
+"\u0014p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014p"
+"q\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000,net.sourceforge.czt.oz.jaxb.gen.Init"
+"ialStateq\u0000~\u0000(sq\u0000~\u0000$t\u0000\fInitialStateq\u0000~\u00005sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8q\u0000~\u0000\u0014p\u0000sq\u0000~"
+"\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000"
+"$t\u00003net.sourceforge.czt.oz.jaxb.gen.InitialStateElementq\u0000~\u0000("
+"q\u0000~\u0000#sq\u0000~\u0000\r\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000\u0017\u0002\u00f9\u00ed\u00c0q\u0000~\u0000\u0014psq\u0000~\u0000\r\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u0014psq\u0000~\u0000\u000f\u0001|\u00f6\u00e3q"
+"\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\r\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000)net.sourceforge.czt.oz.jaxb.gen.O"
+"perationq\u0000~\u0000(sq\u0000~\u0000$t\u0000\tOperationq\u0000~\u00005sq\u0000~\u0000\u000f\u0001|\u00f6\u00d8q\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\r\u0001"
+"|\u00f6\u00cdppsq\u0000~\u0000\u0017\u0001|\u00f6\u00c2q\u0000~\u0000\u0014psq\u0000~\u0000\u001a\u0001|\u00f6\u00bfq\u0000~\u0000\u0014pq\u0000~\u0000\u001dq\u0000~\u0000!q\u0000~\u0000#sq\u0000~\u0000$t\u0000"
+"0net.sourceforge.czt.oz.jaxb.gen.OperationElementq\u0000~\u0000(q\u0000~\u0000#s"
+"r\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet"
+"\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.s"
+"un.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI"
+"\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000\u00a9[\u0000\u0005tablet\u0000![Lcom/sun/msv/grammar/Ex"
+"pression;xp\u0000\u0000\u00006\u0000\u0000\u00009pur\u0000![Lcom.sun.msv.grammar.Expression;\u00d68D"
+"\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppq\u0000~\u0000\u0006ppppppppppppppppppppppppppppppppppppppp"
+"pppppppppppq\u0000~\u0000\bq\u0000~\u00007q\u0000~\u0000Sq\u0000~\u0000dq\u0000~\u0000Rq\u0000~\u0000uq\u0000~\u0000\u0086q\u0000~\u0000\u0098q\u0000~\u0000\u0097pppq"
+"\u0000~\u00006q\u0000~\u0000cq\u0000~\u0000tq\u0000~\u0000Qq\u0000~\u0000\u0085q\u0000~\u0000\u0096ppppq\u0000~\u0000\u0005pppq\u0000~\u0000\fpppppppppppppp"
+"q\u0000~\u0000\u0019q\u0000~\u0000/q\u0000~\u0000;q\u0000~\u0000Cq\u0000~\u0000Kq\u0000~\u0000Wq\u0000~\u0000_q\u0000~\u0000\nq\u0000~\u0000hq\u0000~\u0000pq\u0000~\u0000yq\u0000~\u0000\u0016"
+"q\u0000~\u0000.q\u0000~\u0000:q\u0000~\u0000Bq\u0000~\u0000Jq\u0000~\u0000Vq\u0000~\u0000^q\u0000~\u0000gq\u0000~\u0000oq\u0000~\u0000xq\u0000~\u0000\u0081q\u0000~\u0000\u0080q\u0000~\u0000\u008a"
+"q\u0000~\u0000\u0089q\u0000~\u0000\u0092q\u0000~\u0000\u0091q\u0000~\u0000\u009cq\u0000~\u0000\u009bq\u0000~\u0000\u0007q\u0000~\u0000\u00a4q\u0000~\u0000\u00a3ppppppppppppq\u0000~\u0000\u000eq\u0000~"
+"\u0000Gpppppppppq\u0000~\u0000\u000bppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppp"
+"p"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "--------------------------");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        state = 13;
                        continue outer;
                    case  17 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Decl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("InclDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("VarDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ConstDecl" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  5 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("RefName" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  13 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 11;
                            return ;
                        }
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 14;
                            return ;
                        }
                        state = 16;
                        continue outer;
                    case  1 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  22 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        state = 25;
                        continue outer;
                    case  19 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 20;
                            return ;
                        }
                        state = 22;
                        continue outer;
                    case  16 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 17;
                            return ;
                        }
                        state = 19;
                        continue outer;
                    case  7 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  4 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                    case  20 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("TruePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Pred2" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("MemPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Exists1Pred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FalsePred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("NegPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("IffPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ForallPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("JokerPred" == ___local)&&("http://czt.sourceforge.net/zpatt" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("OrPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("QntPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExprPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ImpliesPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("ExistsPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Fact" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AndPred" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  25 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 23;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("Word" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  14 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  23 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, ___uri, ___local, ___qname, __atts)));
                        return ;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  12 :
                        if (("InheritedClass" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 13;
                            return ;
                        }
                        break;
                    case  10 :
                        state = 13;
                        continue outer;
                    case  17 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  21 :
                        if (("InitialState" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 22;
                            return ;
                        }
                        break;
                    case  11 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  18 :
                        if (("State" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 19;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("FormalParameters" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("Operation" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 25;
                            return ;
                        }
                        break;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  15 :
                        if (("LocalDef" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 16;
                            return ;
                        }
                        break;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  3 :
                        if (("Name" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  20 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  9 :
                        if (("VisibilityList" == ___local)&&("http://czt.sourceforge.net/object-z" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  25 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  23 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveElement((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 13;
                        continue outer;
                    case  17 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  11 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  20 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  25 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("Id" == ___local)&&("" == ___uri)) {
                            _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  23 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, ___uri, ___local, ___qname)));
                        return ;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        state = 13;
                        continue outer;
                    case  17 :
                        _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, ___uri, ___local, ___qname));
                        return ;
                    case  5 :
                        _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, ___uri, ___local, ___qname));
                        return ;
                    case  13 :
                        state = 16;
                        continue outer;
                    case  11 :
                        _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, ___uri, ___local, ___qname)));
                        return ;
                    case  22 :
                        state = 25;
                        continue outer;
                    case  19 :
                        state = 22;
                        continue outer;
                    case  16 :
                        state = 19;
                        continue outer;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  4 :
                        state = 7;
                        continue outer;
                    case  20 :
                        _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, ___uri, ___local, ___qname));
                        return ;
                    case  8 :
                        _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, ___uri, ___local, ___qname));
                        return ;
                    case  25 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        attIdx = context.getAttribute("", "Id");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, ___uri, ___local, ___qname));
                        return ;
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  14 :
                        _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, ___uri, ___local, ___qname));
                        return ;
                    case  23 :
                        _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, ___uri, ___local, ___qname)));
                        return ;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 13;
                            continue outer;
                        case  17 :
                            _State = ((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StateImpl.class), 18, value));
                            return ;
                        case  5 :
                            _FormalParameters = ((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.FormalParametersImpl.class), 6, value));
                            return ;
                        case  13 :
                            state = 16;
                            continue outer;
                        case  11 :
                            _InheritedClass.add(((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InheritedClassImpl.class), 12, value)));
                            return ;
                        case  22 :
                            state = 25;
                            continue outer;
                        case  19 :
                            state = 22;
                            continue outer;
                        case  16 :
                            state = 19;
                            continue outer;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  4 :
                            state = 7;
                            continue outer;
                        case  20 :
                            _InitialState = ((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.InitialStateImpl.class), 21, value));
                            return ;
                        case  8 :
                            _VisibilityList = ((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.StringListTypeImpl.class), 9, value));
                            return ;
                        case  25 :
                            revertToParentFromText(value);
                            return ;
                        case  2 :
                            attIdx = context.getAttribute("", "Id");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _Name = ((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.DeclNameImpl.class), 3, value));
                            return ;
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.ParaImpl)net.sourceforge.czt.oz.jaxb.gen.impl.ClassParaImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  14 :
                            _LocalDef = ((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.class), 15, value));
                            return ;
                        case  23 :
                            _Operation.add(((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl) spawnChildFromText((net.sourceforge.czt.oz.jaxb.gen.impl.OperationImpl.class), 24, value)));
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
