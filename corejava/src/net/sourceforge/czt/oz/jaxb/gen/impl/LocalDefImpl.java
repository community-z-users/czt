//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.1-05/30/2003 05:06 AM(java_re)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2003.10.08 at 02:45:10 NZDT 
//


package net.sourceforge.czt.oz.jaxb.gen.impl;

public class LocalDefImpl
    extends net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl
    implements net.sourceforge.czt.oz.jaxb.gen.LocalDef, com.sun.xml.bind.JAXBObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallableObject, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializable, net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.ValidatableObject
{

    protected com.sun.xml.bind.util.ListImpl _FreePara = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _AxPara = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    protected com.sun.xml.bind.util.ListImpl _GivenPara = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
    public final static java.lang.Class version = (net.sourceforge.czt.oz.jaxb.gen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (net.sourceforge.czt.oz.jaxb.gen.LocalDef.class);
    }

    public java.util.List getFreePara() {
        return _FreePara;
    }

    public java.util.List getAxPara() {
        return _AxPara;
    }

    public java.util.List getGivenPara() {
        return _GivenPara;
    }

    public net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
        return new net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.Unmarshaller(context);
    }

    public void serializeElementBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _FreePara.size();
        int idx2 = 0;
        final int len2 = _AxPara.size();
        int idx3 = 0;
        final int len3 = _GivenPara.size();
        super.serializeElementBody(context);
        while (idx3 != len3) {
            if (_GivenPara.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx3 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "GivenPara");
                int idx_0 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx_0 ++)));
                context.endNamespaceDecls();
                int idx_1 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx_1 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx3 ++)));
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_AxPara.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx2 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "AxPara");
                int idx_2 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx_2 ++)));
                context.endNamespaceDecls();
                int idx_3 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx_3 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx2 ++)));
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_FreePara.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx1 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "FreePara");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx_4 ++)));
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx_5 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx1 ++)));
                context.endElement();
            }
        }
    }

    public void serializeAttributes(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _FreePara.size();
        int idx2 = 0;
        final int len2 = _AxPara.size();
        int idx3 = 0;
        final int len3 = _GivenPara.size();
        super.serializeAttributes(context);
    }

    public void serializeAttributeBody(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _FreePara.size();
        int idx2 = 0;
        final int len2 = _AxPara.size();
        int idx3 = 0;
        final int len3 = _GivenPara.size();
        super.serializeAttributeBody(context);
        while (idx3 != len3) {
            if (_GivenPara.get(idx3) instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx3 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "GivenPara");
                int idx_0 = idx3;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx_0 ++)));
                context.endNamespaceDecls();
                int idx_1 = idx3;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx_1 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _GivenPara.get(idx3 ++)));
                context.endElement();
            }
        }
        while (idx2 != len2) {
            if (_AxPara.get(idx2) instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx2 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "AxPara");
                int idx_2 = idx2;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx_2 ++)));
                context.endNamespaceDecls();
                int idx_3 = idx2;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx_3 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _AxPara.get(idx2 ++)));
                context.endElement();
            }
        }
        while (idx1 != len1) {
            if (_FreePara.get(idx1) instanceof javax.xml.bind.Element) {
                context.childAsAttributeBody(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx1 ++)));
            } else {
                context.startElement("http://czt.sourceforge.net/zml", "FreePara");
                int idx_4 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx_4 ++)));
                context.endNamespaceDecls();
                int idx_5 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx_5 ++)));
                context.endAttributes();
                context.childAsElementBody(((com.sun.xml.bind.JAXBObject) _FreePara.get(idx1 ++)));
                context.endElement();
            }
        }
    }

    public void serializeURIs(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        int idx1 = 0;
        final int len1 = _FreePara.size();
        int idx2 = 0;
        final int len2 = _AxPara.size();
        int idx3 = 0;
        final int len3 = _GivenPara.size();
        super.serializeURIs(context);
    }

    public java.lang.Class getPrimaryInterface() {
        return (net.sourceforge.czt.oz.jaxb.gen.LocalDef.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\nj\u00c0^ppsq\u0000~\u0000\u0000\u0007p\u00d2\u008eppsq\u0000~\u0000\u0000\u0004"
+"v\u00e4\u00beppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0001|\u00f6\u00eep"
+"psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
+"meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
+"mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
+"ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00e3sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005"
+"valuexp\u0000p\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsr\u0000 com.sun.msv.grammar.O"
+"neOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsr\u0000 com.sun.msv.grammar.Attr"
+"ibuteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0001|\u00f6\u00bfq\u0000~"
+"\u0000\u000fpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\bsq\u0000~\u0000\u000e\u0001q\u0000~\u0000\u0018sr\u0000 com.sun.msv.grammar.AnyNam"
+"eClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0000xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tq\u0000~\u0000\u0019q\u0000~\u0000\u001esr\u0000#com.sun.msv.grammar.SimpleName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespac"
+"eURIq\u0000~\u0000 xq\u0000~\u0000\u001bt\u00000net.sourceforge.czt.core.jaxb.gen.TermA.An"
+"nsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001ft\u0000"
+"\u0004Annst\u0000\u001ehttp://czt.sourceforge.net/zmlq\u0000~\u0000\u001esq\u0000~\u0000\b\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000"
+"\u0012\u0002\u00f9\u00ed\u00c0q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001|\u00f6\u00e3q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00d8pp\u0000sq\u0000"
+"~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~"
+"\u0000\u001ft\u0000+net.sourceforge.czt.core.jaxb.gen.GivenParaq\u0000~\u0000#sq\u0000~\u0000\u001ft"
+"\u0000\tGivenParaq\u0000~\u0000&sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000f"
+"psq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00002net.sourceforge.czt"
+".core.jaxb.gen.GivenParaElementq\u0000~\u0000#q\u0000~\u0000\u001esq\u0000~\u0000\b\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000\u0012\u0002"
+"\u00f9\u00ed\u00c0q\u0000~\u0000\u000fpsq\u0000~\u0000\b\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001|\u00f6\u00e3q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000"
+"\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001f"
+"t\u0000(net.sourceforge.czt.core.jaxb.gen.AxParaq\u0000~\u0000#sq\u0000~\u0000\u001ft\u0000\u0006AxP"
+"araq\u0000~\u0000&sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001"
+"|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000/net.sourceforge.czt.core.ja"
+"xb.gen.AxParaElementq\u0000~\u0000#q\u0000~\u0000\u001esq\u0000~\u0000\b\u0002\u00f9\u00ed\u00cbppsq\u0000~\u0000\u0012\u0002\u00f9\u00ed\u00c0q\u0000~\u0000\u000fpsq"
+"\u0000~\u0000\b\u0002\u00f9\u00ed\u00bdq\u0000~\u0000\u000fpsq\u0000~\u0000\n\u0001|\u00f6\u00e3q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\n\u0001|\u00f6\u00d8pp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~"
+"\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u0000*net.sour"
+"ceforge.czt.core.jaxb.gen.FreeParaq\u0000~\u0000#sq\u0000~\u0000\u001ft\u0000\bFreeParaq\u0000~\u0000"
+"&sq\u0000~\u0000\n\u0001|\u00f6\u00d8q\u0000~\u0000\u000fp\u0000sq\u0000~\u0000\b\u0001|\u00f6\u00cdppsq\u0000~\u0000\u0012\u0001|\u00f6\u00c2q\u0000~\u0000\u000fpsq\u0000~\u0000\u0015\u0001|\u00f6\u00bfq\u0000~\u0000"
+"\u000fpq\u0000~\u0000\u0018q\u0000~\u0000\u001cq\u0000~\u0000\u001esq\u0000~\u0000\u001ft\u00001net.sourceforge.czt.core.jaxb.gen."
+"FreeParaElementq\u0000~\u0000#q\u0000~\u0000\u001esr\u0000\"com.sun.msv.grammar.ExpressionP"
+"ool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionP"
+"ool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clos"
+"edHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000^[\u0000\u0005tablet"
+"\u0000![Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u001b\u0000\u0000\u00009pur\u0000![Lcom.sun."
+"msv.grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfpppppppppppppppppppp"
+"q\u0000~\u0000\u0007pppppppppppppppppppppppppppppppppq\u0000~\u0000)q\u0000~\u0000;q\u0000~\u0000Mq\u0000~\u0000(q\u0000"
+"~\u0000:q\u0000~\u0000Lppppppppq\u0000~\u0000\'q\u0000~\u00009q\u0000~\u0000Kppppppppppppppppppppppq\u0000~\u0000\u0006q\u0000"
+"~\u0000\u0014q\u0000~\u0000-q\u0000~\u00005q\u0000~\u0000?q\u0000~\u0000Gq\u0000~\u0000Qq\u0000~\u0000Yppppq\u0000~\u0000\u0011q\u0000~\u0000,q\u0000~\u00004q\u0000~\u0000>q\u0000~"
+"\u0000Fq\u0000~\u0000Pq\u0000~\u0000Xppppppppppppppppppppppppppq\u0000~\u0000\tppppppppppppppppp"
+"ppppppppppq\u0000~\u0000\u0005pppppppppppppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context) {
            super(context, "-----------");
        }

        protected Unmarshaller(net.sourceforge.czt.zpatt.jaxb.gen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        spawnHandlerFromEnterElement((((net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname, __atts);
                        return ;
                    case  7 :
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        state = 10;
                        continue outer;
                    case  2 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  1 :
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        state = 4;
                        continue outer;
                    case  10 :
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 8;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  8 :
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("Freetype" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  5 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        if (("Anns" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("DeclName" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        if (("SchText" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                            return ;
                        }
                        _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromEnterElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname, __atts)));
                        return ;
                    case  4 :
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 2;
                            return ;
                        }
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 5;
                            return ;
                        }
                        state = 7;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("AxPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 7;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("GivenPara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 4;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("FreePara" == ___local)&&("http://czt.sourceforge.net/zml" == ___uri)) {
                            context.popAttributes();
                            state = 10;
                            return ;
                        }
                        break;
                    case  0 :
                        spawnHandlerFromLeaveElement((((net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  2 :
                        _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  1 :
                        state = 4;
                        continue outer;
                    case  10 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromLeaveElement((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromEnterAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  2 :
                        _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  1 :
                        state = 4;
                        continue outer;
                    case  10 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        if (("Box" == ___local)&&("" == ___uri)) {
                            _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname)));
                            return ;
                        }
                        _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromEnterAttribute((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        spawnHandlerFromLeaveAttribute((((net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this).new Unmarshaller(context)), 1, ___uri, ___local, ___qname);
                        return ;
                    case  7 :
                        state = 10;
                        continue outer;
                    case  2 :
                        _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, ___uri, ___local, ___qname)));
                        return ;
                    case  1 :
                        state = 4;
                        continue outer;
                    case  10 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, ___uri, ___local, ___qname)));
                        return ;
                    case  5 :
                        attIdx = context.getAttribute("", "Box");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromLeaveAttribute((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, ___uri, ___local, ___qname)));
                        return ;
                    case  4 :
                        state = 7;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  0 :
                            spawnHandlerFromText((((net.sourceforge.czt.core.jaxb.gen.impl.TermAImpl)net.sourceforge.czt.oz.jaxb.gen.impl.LocalDefImpl.this).new Unmarshaller(context)), 1, value);
                            return ;
                        case  7 :
                            state = 10;
                            continue outer;
                        case  2 :
                            _GivenPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.GivenParaImpl.class), 3, value)));
                            return ;
                        case  1 :
                            state = 4;
                            continue outer;
                        case  10 :
                            revertToParentFromText(value);
                            return ;
                        case  8 :
                            _FreePara.add(((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.FreeParaImpl.class), 9, value)));
                            return ;
                        case  5 :
                            attIdx = context.getAttribute("", "Box");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            _AxPara.add(((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl) spawnChildFromText((net.sourceforge.czt.core.jaxb.gen.impl.AxParaImpl.class), 6, value)));
                            return ;
                        case  4 :
                            state = 7;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
