<project name="Zlive" default="all">
  <property name="czt.home" location=".."/>  
  <property file="${czt.home}/czt.properties"/>
  <property name="zlive.jar.dir" location="${czt.home}/${jar.dir}"/>
  <property name="jar.file" location="${zlive.jar.dir}/${zlive.jar.file}"/>
  <property name="zlive.src.dir" location="src"/>
  <property name="zlive.build.dir" location="build"/>
  <property name="zlive.api.dir" location="doc/api"/>

  <path id="classpath">
    <pathelement path="${jwsdp.classpath}"/>
    <fileset dir="${czt.home}/${jar.dir}">
      <include name="${corejava.base.jar.file}"/>
      <include name="${corejava.core.jar.file}"/>
      <include name="${corejava.oz.jar.file}"/>
      <include name="${corejava.zpatt.jar.file}"/>
      <include name="${corejava.jaxb.jar.file}"/>
      <include name="${session.jar.file}"/>
      <include name="${parser.jar.file}"/>
      <include name="${typechecker.jar.file}"/>
      <include name="${rules.jar.file}"/>
      <include name="${java_cup.jar.file}"/>
    </fileset>
    <pathelement path="${java.class.path}"/>
    <pathelement path="${clover.jar}"/>
    <pathelement path="${zlive.build.dir}"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${zlive.build.dir}"/>
  </target>

  <target name="all" depends="install, doc"
    description="build the jar files and the documentation"/>

  <target name="install" depends="compile"
          description="build and install the jar files">
    <mkdir dir="${zlive.jar.dir}"/>
    <jar jarfile="${jar.file}">
      <fileset dir="${zlive.build.dir}"/>
      <fileset dir="rulesets"/>
    </jar>
  </target>

  <target name="compile" depends="init"
          description="compile the sources">
    <javac
      srcdir="${zlive.src.dir}"
      destdir="${zlive.build.dir}"
      debug="${debug}"
      debuglevel="${debuglevel}"
      source="1.5"
      deprecation="yes"
      optimize="${optimize}">
      <classpath refid="classpath"/>      
      <!--<compilerarg value="-Xlint:unchecked"/>-->
    </javac>
  </target>

  <target name="run" depends="compile"
          description="run the ZLive Text UI">
    <java classname="net.sourceforge.czt.animation.eval.TextUI"
          fork="true">
      <classpath refid="classpath"/>
      <assertions> <enable/> </assertions>
    </java>
  </target>


  <target name="doc" depends="api"
    description="build all the documentation"/>

  <target name="api"
          description="build the API documentation">
    <mkdir dir="${zlive.api.dir}"/>
    <javadoc
      destdir="${zlive.api.dir}"
      private="true"
      source="1.5">
      <packageset dir="${zlive.src.dir}"/>
      <tag name="czt.todo" description="To do:"/>
      <classpath refid="classpath"/>
    </javadoc>
  </target>

  <target name="usertest" depends="install"
    description="build and run all the user tests and report changes">
    <ant dir="tests" target="usertest"/>
  </target>

  <target name="test" depends="install"
    description="build and run the unit tests">
    <ant dir="tests" target="test"/>
  </target>

  <target name="with.clover"
    description="Initializes clover. (eg. ant clean with.clover test clover)">
    <mkdir dir="clover-db"/>
    <taskdef resource="clovertasks"/>
    <clover-setup initString="clover-db/coverage.db">
      <!-- BUG: this does not exclude *Test.java like it should! -->
      <files includes="**/*.java" excludes="**/*Test.java"/>
    </clover-setup>
  </target>

  <target name="clover" depends="with.clover"
    description="Creates a clover report.">
    <clover-report>
      <current outfile="clover_html" title="CZT ZLive Clover Report">
        <!-- we omit assert statement coverage, because they are
	     just double checks, and are not intended to be tested. -->
        <format type="html" filter="assert"/> 
      </current>         
    </clover-report>
  </target>

  <target name="checkstyle" description="check java sources">
    <taskdef resource="checkstyletask.properties"
      classpath="${checkstyle.jar}"/>
    <checkstyle config="${czt.home}/devtools/checkstyle.xml">
      <fileset dir="${zlive.src.dir}"/>
      <formatter type="plain"/>
    </checkstyle>
  </target>

  <target name="clean"
          description="clean up">
    <delete dir="${zlive.build.dir}"/>
    <delete dir="${zlive.api.dir}"/>
    <ant dir="tests" target="clean"/>
  </target>

  <target name="printclasspath">
      <pathconvert targetos="unix" property="tmp.clspath"
            refid="classpath">
    </pathconvert>
    <echo message="CLASSPATH = ${tmp.clspath}"/>
  </target>
</project>
