Testsuite: net.sourceforge.czt.animation.eval.AnimateSequencesTest
Tests run: 87, Failures: 7, Errors: 29, Time elapsed: 55.465 sec
------------- Standard Output ---------------
Passed test:animate_sequences.tex:28
Passed test:animate_sequences.tex:29
Passed test:animate_sequences.tex:31
Passed test:animate_sequences.tex:32
Passed test:animate_sequences.tex:34
Passed test:animate_sequences.tex:35
Passed test:animate_sequences.tex:36
Passed test:animate_sequences.tex:40
Passed test:animate_sequences.tex:41
Passed test:animate_sequences.tex:44
Passed test:animate_sequences.tex:48
Passed test:animate_sequences.tex:50
Passed test:animate_sequences.tex:57
Passed test:animate_sequences.tex:60
Passed test:animate_sequences.tex:61
Passed test:animate_sequences.tex:63
Passed test:animate_sequences.tex:64
Passed test:animate_sequences.tex:67
Passed test:animate_sequences.tex:68
Passed test:animate_sequences.tex:69
Passed test:animate_sequences.tex:70
Passed test:animate_sequences.tex:71
Passed undef test: animate_sequences.tex:72
Passed test:animate_sequences.tex:75
Passed test:animate_sequences.tex:76
Passed test:animate_sequences.tex:77
Passed test:animate_sequences.tex:78
Passed test:animate_sequences.tex:79
Passed undef test: animate_sequences.tex:80
Passed test:animate_sequences.tex:83
Passed test:animate_sequences.tex:84
Passed test:animate_sequences.tex:85
Passed test:animate_sequences.tex:86
Passed test:animate_sequences.tex:87
Passed undef test: animate_sequences.tex:88
Passed test:animate_sequences.tex:91
Passed test:animate_sequences.tex:92
Passed test:animate_sequences.tex:93
Passed test:animate_sequences.tex:94
Passed test:animate_sequences.tex:95
Passed undef test: animate_sequences.tex:96
Passed test:animate_sequences.tex:100
  tmp7114 = {
      tmp7115 = {
          tmp7118 == 0;                 %% tmp7118:0..0,    
          tmp7117 = tmp7118 .. _;       %% tmp7117:0.._,    
          tmp7119 = _ .. _;             %% tmp7119    
          tmp7116 = tmp7117 -|-> tmp7119; %% tmp7116    
          tmp7122 == 0;                 %% tmp7122:0..0,    
          tmp7121 = tmp7122 .. _;       %% tmp7121:0.._,    
          tmp7123 = _ .. _;             %% tmp7123    
          tmp7124 = tmp7121 x tmp7123;  %% tmp7124:set(Infinity,null),    
          tmp7120 = P tmp7124;          %% tmp7120    
          f in tmp7120;
          tmp7125 = {
              x in f :: 3.0 ;
              tmp7126 = x.1                 %% tmp7126    
              %%----------
            @ tmp7126
            };                          %% tmp7125:set(100.0,null,1.._),    
          tmp7128 == 1;                 %% tmp7128:1..1,    
          # f = tmp7129;                %% tmp7129:0.._,    
          tmp7127 = tmp7128 .. tmp7129; %% tmp7127=tmp7125,:set(100.0,null,1.._),    
          %%---------------
          tmp7125 = tmp7127
        @ f
        };                          %% tmp7115:set(1000.0,null),    
      %%---------------
      s in tmp7115 :: 1000.0 ;
      tmp7130 = (s, s)              %% tmp7130={1=s, 2=s},    
    @ tmp7130
    };                          %% tmp7114:set(1000.0,null),    
  tmp7133 == 1;                 %% tmp7133:1..1,    
  tmp7134 == 1;                 %% tmp7134:1..1,    
  tmp7132 = (tmp7133, tmp7134); %% tmp7132={1=tmp7133, 2=tmp7134},    
  tmp7136 == 2;                 %% tmp7136:2..2,    
  tmp7137 == 3;                 %% tmp7137:3..3,    
  tmp7135 = (tmp7136, tmp7137); %% tmp7135={1=tmp7136, 2=tmp7137},    
  tmp7139 == 3;                 %% tmp7139:3..3,    
  tmp7140 == 5;                 %% tmp7140:5..5,    
  tmp7138 = (tmp7139, tmp7140); %% tmp7138={1=tmp7139, 2=tmp7140},    
  tmp7141 = { tmp7132, tmp7135, tmp7138 }; %% tmp7141=tmp7131,:set(3.0,3),    
  tmp7131 = tmp7141;            %% tmp7131:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7114 :: 500.0 ; %% p={1=tmp7131, 2=tmp7142},    
  tmp7131 = p.1;
  tmp7142 = p.2                 %% tmp7142    
@ tmp7142
))
  tmp7174 = {
      tmp7175 = {
          tmp7178 == 0;                 %% tmp7178:0..0,    
          tmp7177 = tmp7178 .. _;       %% tmp7177:0.._,    
          tmp7179 = _ .. _;             %% tmp7179    
          tmp7176 = tmp7177 -|-> tmp7179; %% tmp7176    
          tmp7182 == 0;                 %% tmp7182:0..0,    
          tmp7181 = tmp7182 .. _;       %% tmp7181:0.._,    
          tmp7183 = _ .. _;             %% tmp7183    
          tmp7184 = tmp7181 x tmp7183;  %% tmp7184:set(Infinity,null),    
          tmp7180 = P tmp7184;          %% tmp7180    
          f in tmp7180;
          tmp7185 = {
              x in f :: 3.0 ;
              tmp7186 = x.1                 %% tmp7186    
              %%----------
            @ tmp7186
            };                          %% tmp7185:set(100.0,null,1.._),    
          tmp7188 == 1;                 %% tmp7188:1..1,    
          # f = tmp7189;                %% tmp7189:0.._,    
          tmp7187 = tmp7188 .. tmp7189; %% tmp7187=tmp7185,:set(100.0,null,1.._),    
          %%---------------
          tmp7185 = tmp7187
        @ f
        };                          %% tmp7175:set(1000.0,null),    
      %%---------------
      s in tmp7175 :: 1000.0 ;
      tmp7190 = (s, s)              %% tmp7190={1=s, 2=s},    
    @ tmp7190
    };                          %% tmp7174:set(1000.0,null),    
  tmp7193 == 1;                 %% tmp7193:1..1,    
  tmp7194 == 1;                 %% tmp7194:1..1,    
  tmp7192 = (tmp7193, tmp7194); %% tmp7192={1=tmp7193, 2=tmp7194},    
  tmp7196 == 2;                 %% tmp7196:2..2,    
  tmp7197 == 3;                 %% tmp7197:3..3,    
  tmp7195 = (tmp7196, tmp7197); %% tmp7195={1=tmp7196, 2=tmp7197},    
  tmp7199 == 3;                 %% tmp7199:3..3,    
  tmp7200 == 5;                 %% tmp7200:5..5,    
  tmp7198 = (tmp7199, tmp7200); %% tmp7198={1=tmp7199, 2=tmp7200},    
  tmp7201 = { tmp7192, tmp7198, tmp7195 }; %% tmp7201=tmp7191,:set(3.0,3),    
  tmp7191 = tmp7201;            %% tmp7191:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7174 :: 500.0 ; %% p={1=tmp7191, 2=tmp7202},    
  tmp7191 = p.1;
  tmp7202 = p.2                 %% tmp7202    
@ tmp7202
))
  tmp7228 = {
      tmp7229 = {
          tmp7232 == 0;                 %% tmp7232:0..0,    
          tmp7231 = tmp7232 .. _;       %% tmp7231:0.._,    
          tmp7233 = _ .. _;             %% tmp7233    
          tmp7230 = tmp7231 -|-> tmp7233; %% tmp7230    
          tmp7236 == 0;                 %% tmp7236:0..0,    
          tmp7235 = tmp7236 .. _;       %% tmp7235:0.._,    
          tmp7237 = _ .. _;             %% tmp7237    
          tmp7238 = tmp7235 x tmp7237;  %% tmp7238:set(Infinity,null),    
          tmp7234 = P tmp7238;          %% tmp7234    
          f in tmp7234;
          tmp7239 = {
              %%---------------
              x in f :: 3.0 ;
              tmp7240 = x.1                 %% tmp7240    
            @ tmp7240
            };                          %% tmp7239:set(100.0,null,1.._),    
          tmp7242 == 1;                 %% tmp7242:1..1,    
          # f = tmp7243;                %% tmp7243:0.._,    
          tmp7241 = tmp7242 .. tmp7243; %% tmp7241=tmp7239,:set(100.0,null,1.._),    
          %%---------------
          tmp7239 = tmp7241
        @ f
        };                          %% tmp7229:set(1000.0,null),    
      %%---------------
      s in tmp7229 :: 1000.0 ;
      tmp7244 = (s, s)              %% tmp7244={1=s, 2=s},    
    @ tmp7244
    };                          %% tmp7228:set(1000.0,null),    
  tmp7247 == 1;                 %% tmp7247:1..1,    
  tmp7248 == 1;                 %% tmp7248:1..1,    
  tmp7246 = (tmp7247, tmp7248); %% tmp7246={1=tmp7247, 2=tmp7248},    
  tmp7250 == 2;                 %% tmp7250:2..2,    
  tmp7251 == 3;                 %% tmp7251:3..3,    
  tmp7249 = (tmp7250, tmp7251); %% tmp7249={1=tmp7250, 2=tmp7251},    
  tmp7253 == 3;                 %% tmp7253:3..3,    
  tmp7254 == 5;                 %% tmp7254:5..5,    
  tmp7252 = (tmp7253, tmp7254); %% tmp7252={1=tmp7253, 2=tmp7254},    
  tmp7255 = { tmp7246, tmp7249, tmp7252 }; %% tmp7255=tmp7245,:set(3.0,3),    
  tmp7245 = tmp7255;            %% tmp7245:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7228 :: 500.0 ; %% p={1=tmp7245, 2=tmp7256},    
  tmp7245 = p.1;
  tmp7256 = p.2                 %% tmp7256    
@ tmp7256
))
  tmp7282 = {
      tmp7283 = {
          tmp7286 == 0;                 %% tmp7286:0..0,    
          tmp7285 = tmp7286 .. _;       %% tmp7285:0.._,    
          tmp7287 = _ .. _;             %% tmp7287    
          tmp7284 = tmp7285 -|-> tmp7287; %% tmp7284    
          tmp7290 == 0;                 %% tmp7290:0..0,    
          tmp7289 = tmp7290 .. _;       %% tmp7289:0.._,    
          tmp7291 = _ .. _;             %% tmp7291    
          tmp7292 = tmp7289 x tmp7291;  %% tmp7292:set(Infinity,null),    
          tmp7288 = P tmp7292;          %% tmp7288    
          f in tmp7288;
          tmp7293 = {
              %%---------------
              x in f :: 3.0 ;
              tmp7294 = x.1                 %% tmp7294    
            @ tmp7294
            };                          %% tmp7293:set(100.0,null,1.._),    
          tmp7296 == 1;                 %% tmp7296:1..1,    
          # f = tmp7297;                %% tmp7297:0.._,    
          tmp7295 = tmp7296 .. tmp7297; %% tmp7295=tmp7293,:set(100.0,null,1.._),    
          %%---------------
          tmp7293 = tmp7295
        @ f
        };                          %% tmp7283:set(1000.0,null),    
      %%---------------
      s in tmp7283 :: 1000.0 ;
      tmp7298 = (s, s)              %% tmp7298={1=s, 2=s},    
    @ tmp7298
    };                          %% tmp7282:set(1000.0,null),    
  tmp7301 == 1;                 %% tmp7301:1..1,    
  tmp7302 == 1;                 %% tmp7302:1..1,    
  tmp7300 = (tmp7301, tmp7302); %% tmp7300={1=tmp7301, 2=tmp7302},    
  tmp7304 == 2;                 %% tmp7304:2..2,    
  tmp7305 == 3;                 %% tmp7305:3..3,    
  tmp7303 = (tmp7304, tmp7305); %% tmp7303={1=tmp7304, 2=tmp7305},    
  tmp7307 == 3;                 %% tmp7307:3..3,    
  tmp7308 == 5;                 %% tmp7308:5..5,    
  tmp7306 = (tmp7307, tmp7308); %% tmp7306={1=tmp7307, 2=tmp7308},    
  tmp7309 = { tmp7306, tmp7303, tmp7300 }; %% tmp7309=tmp7299,:set(3.0,3),    
  tmp7299 = tmp7309;            %% tmp7299:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7282 :: 500.0 ; %% p={1=tmp7299, 2=tmp7310},    
  tmp7299 = p.1;
  tmp7310 = p.2                 %% tmp7310    
@ tmp7310
))
  tmp9585 = {
      tmp9586 = {
          tmp9589 == 0;                 %% tmp9589:0..0,    
          tmp9588 = tmp9589 .. _;       %% tmp9588:0.._,    
          tmp9590 = _ .. _;             %% tmp9590    
          tmp9587 = tmp9588 -|-> tmp9590; %% tmp9587    
          tmp9593 == 0;                 %% tmp9593:0..0,    
          tmp9592 = tmp9593 .. _;       %% tmp9592:0.._,    
          tmp9594 = _ .. _;             %% tmp9594    
          tmp9595 = tmp9592 x tmp9594;  %% tmp9595:set(Infinity,null),    
          tmp9591 = P tmp9595;          %% tmp9591    
          f in tmp9591;
          tmp9596 = {
              %%---------------
              x in f :: 3.0 ;
              tmp9597 = x.1                 %% tmp9597    
            @ tmp9597
            };                          %% tmp9596:set(100.0,null,1.._),    
          tmp9599 == 1;                 %% tmp9599:1..1,    
          # f = tmp9600;                %% tmp9600:0.._,    
          tmp9598 = tmp9599 .. tmp9600; %% tmp9598=tmp9596,:set(100.0,null,1.._),    
          %%---------------
          tmp9596 = tmp9598
        @ f
        };                          %% tmp9586:set(1000.0,null),    
      %%---------------
      s in tmp9586 :: 1000.0 ;
      tmp9601 = (s, s)              %% tmp9601={1=s, 2=s},    
    @ tmp9601
    };                          %% tmp9585:set(1000.0,null),    
  tmp9604 == 1;                 %% tmp9604:1..1,    
  tmp9605 == 2;                 %% tmp9605:2..2,    
  tmp9603 = (tmp9604, tmp9605); %% tmp9603={1=tmp9604, 2=tmp9605},    
  tmp9607 == 2;                 %% tmp9607:2..2,    
  tmp9608 == 4;                 %% tmp9608:4..4,    
  tmp9606 = (tmp9607, tmp9608); %% tmp9606={1=tmp9607, 2=tmp9608},    
  tmp9610 == 3;                 %% tmp9610:3..3,    
  tmp9611 == 6;                 %% tmp9611:6..6,    
  tmp9609 = (tmp9610, tmp9611); %% tmp9609={1=tmp9610, 2=tmp9611},    
  tmp9612 = { tmp9606, tmp9609, tmp9603 }; %% tmp9612=tmp9602,:set(3.0,3),    
  tmp9602 = tmp9612;            %% tmp9602:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601e1b60, net.sourceforge.czt.z.impl.TupleExprImpl@602d1b9f, net.sourceforge.czt.z.impl.TupleExprImpl@603c1bde}} in tmp9585 :: 0.4 ; %% p={1=tmp9602, 2=tmp9613},    
  tmp9602 = p.1;
  tmp9613 = p.2                 %% tmp9613    
@ tmp9613
))
Passed test:animate_sequences.tex:135
Passed test:animate_sequences.tex:136
Passed test:animate_sequences.tex:137
Passed test:animate_sequences.tex:138
Passed test:animate_sequences.tex:139
Passed undef test: animate_sequences.tex:140
FAILED undef test (not undefined): animate_sequences.tex:141
Passed test:animate_sequences.tex:144
  tmp9965 = {
      tmp9966 = {
          tmp9969 == 0;
          tmp9968 = tmp9969 .. _;
          tmp9970 = _ .. _;
          tmp9967 = tmp9968 -|-> tmp9970;
          tmp9973 == 0;
          tmp9972 = tmp9973 .. _;
          tmp9974 = _ .. _;
          tmp9975 = tmp9972 x tmp9974;
          tmp9971 = P tmp9975;
          f in tmp9971;
          tmp9976 = {
              x in f;
              tmp9977 = x.1
            @ tmp9977
            };
          tmp9979 == 1;
          # f = tmp9980;
          tmp9978 = tmp9979 .. tmp9980;
          tmp9976 = tmp9978
        @ f
        };                          %% tmp9966:set(1000.0,null),    
      %%---------------
      tmp9981 = (s, s);             %% s    
      s in tmp9966 :: 1000.0 
    @ tmp9981
    };                          %% tmp9965:set(1000.0,null),    
  %%---------------
  p in tmp9965 :: 1000.0 ;
  tmp9982 = p.1;                %% tmp9982:set(2.0,2),    
  tmp9984 == 1;                 %% tmp9984:1..1,    
  tmp9985 == 3;                 %% tmp9985:3..3,    
  tmp9983 = (tmp9984, tmp9985); %% tmp9983={1=tmp9984, 2=tmp9985},    
  tmp9987 == 2;                 %% tmp9987:2..2,    
  tmp9988 == 5;                 %% tmp9988:5..5,    
  tmp9986 = (tmp9987, tmp9988); %% tmp9986={1=tmp9987, 2=tmp9988},    
  tmp9989 = { tmp9986, tmp9983 }; %% tmp9989=tmp9982,:set(2.0,2),    
  tmp9982 = tmp9989;
  tmp9990 = p.2                 %% tmp9990    
@ tmp9990
))
  tmp10048 = {
      tmp10049 = {
          tmp10052 == 0;
          tmp10051 = tmp10052 .. _;
          tmp10053 = _ .. _;
          tmp10050 = tmp10051 -|-> tmp10053;
          tmp10056 == 0;
          tmp10055 = tmp10056 .. _;
          tmp10057 = _ .. _;
          tmp10058 = tmp10055 x tmp10057;
          tmp10054 = P tmp10058;
          f in tmp10054;
          tmp10059 = {
              x in f;
              tmp10060 = x.1
            @ tmp10060
            };
          tmp10062 == 1;
          # f = tmp10063;
          tmp10061 = tmp10062 .. tmp10063;
          tmp10059 = tmp10061
        @ f
        };                          %% tmp10049:set(1000.0,null),    
      %%---------------
      tmp10064 = (s, s);            %% s    
      s in tmp10049 :: 1000.0 
    @ tmp10064
    };                          %% tmp10048:set(1000.0,null),    
  %%---------------
  p in tmp10048 :: 1000.0 ;
  tmp10065 = p.1;               %% tmp10065:set(5.0,5),    
  tmp10067 == 1;                %% tmp10067:1..1,    
  tmp10068 == 3;                %% tmp10068:3..3,    
  tmp10066 = (tmp10067, tmp10068); %% tmp10066={1=tmp10067, 2=tmp10068},    
  tmp10070 == 2;                %% tmp10070:2..2,    
  tmp10071 == 5;                %% tmp10071:5..5,    
  tmp10069 = (tmp10070, tmp10071); %% tmp10069={1=tmp10070, 2=tmp10071},    
  tmp10073 == 3;                %% tmp10073:3..3,    
  tmp10074 == 7;                %% tmp10074:7..7,    
  tmp10072 = (tmp10073, tmp10074); %% tmp10072={1=tmp10073, 2=tmp10074},    
  tmp10076 == 4;                %% tmp10076:4..4,    
  tmp10077 == 6;                %% tmp10077:6..6,    
  tmp10075 = (tmp10076, tmp10077); %% tmp10075={1=tmp10076, 2=tmp10077},    
  tmp10079 == 5;                %% tmp10079:5..5,    
  tmp10080 == 9;                %% tmp10080:9..9,    
  tmp10078 = (tmp10079, tmp10080); %% tmp10078={1=tmp10079, 2=tmp10080},    
  tmp10081 = { tmp10072, tmp10066, tmp10069, tmp10078, tmp10075 }; %% tmp10081=tmp10065,:set(5.0,5),    
  tmp10065 = tmp10081;
  tmp10082 = p.2                %% tmp10082    
@ tmp10082
))
Passed test:animate_sequences.tex:147
  tmp10194 = {
      tmp10195 = {
          tmp10198 == 0;
          tmp10197 = tmp10198 .. _;
          tmp10199 = _ .. _;
          tmp10196 = tmp10197 -|-> tmp10199;
          tmp10202 == 0;
          tmp10201 = tmp10202 .. _;
          tmp10203 = _ .. _;
          tmp10204 = tmp10201 x tmp10203;
          tmp10200 = P tmp10204;
          f in tmp10200;
          tmp10205 = {
              x in f;
              tmp10206 = x.1
            @ tmp10206
            };
          tmp10208 == 1;
          # f = tmp10209;
          tmp10207 = tmp10208 .. tmp10209;
          tmp10205 = tmp10207
        @ f
        };                          %% tmp10195:set(1000.0,null),    
      %%---------------
      tmp10210 = (s, s);            %% s    
      s in tmp10195 :: 1000.0 
    @ tmp10210
    };                          %% tmp10194:set(1000.0,null),    
  %%---------------
  p in tmp10194 :: 1000.0 ;
  tmp10211 = p.1;               %% tmp10211:set(2.0,2),    
  tmp10213 == 1;                %% tmp10213:1..1,    
  tmp10214 == 3;                %% tmp10214:3..3,    
  tmp10212 = (tmp10213, tmp10214); %% tmp10212={1=tmp10213, 2=tmp10214},    
  tmp10216 == 2;                %% tmp10216:2..2,    
  tmp10217 == 5;                %% tmp10217:5..5,    
  tmp10215 = (tmp10216, tmp10217); %% tmp10215={1=tmp10216, 2=tmp10217},    
  tmp10218 = { tmp10215, tmp10212 }; %% tmp10218=tmp10211,:set(2.0,2),    
  tmp10211 = tmp10218;
  tmp10219 = p.2                %% tmp10219    
@ tmp10219
))
Passed test:animate_sequences.tex:151
  tmp10339 = {
      tmp10340 = {
          tmp10343 == 0;
          tmp10342 = tmp10343 .. _;
          tmp10344 = _ .. _;
          tmp10341 = tmp10342 -|-> tmp10344;
          tmp10347 == 0;
          tmp10346 = tmp10347 .. _;
          tmp10348 = _ .. _;
          tmp10349 = tmp10346 x tmp10348;
          tmp10345 = P tmp10349;
          f in tmp10345;
          tmp10350 = {
              x in f;
              tmp10351 = x.1
            @ tmp10351
            };
          tmp10353 == 1;
          # f = tmp10354;
          tmp10352 = tmp10353 .. tmp10354;
          tmp10350 = tmp10352
        @ f
        };                          %% tmp10340:set(1000.0,null),    
      %%---------------
      tmp10355 = (s, s);            %% s    
      s in tmp10340 :: 1000.0 
    @ tmp10355
    };                          %% tmp10339:set(1000.0,null),    
  %%---------------
  p in tmp10339 :: 1000.0 ;
  tmp10356 = p.1;               %% tmp10356:set(2.0,2),    
  tmp10358 == 1;                %% tmp10358:1..1,    
  tmp10359 == 3;                %% tmp10359:3..3,    
  tmp10357 = (tmp10358, tmp10359); %% tmp10357={1=tmp10358, 2=tmp10359},    
  tmp10361 == 2;                %% tmp10361:2..2,    
  tmp10362 == 5;                %% tmp10362:5..5,    
  tmp10360 = (tmp10361, tmp10362); %% tmp10360={1=tmp10361, 2=tmp10362},    
  tmp10363 = { tmp10360, tmp10357 }; %% tmp10363=tmp10356,:set(2.0,2),    
  tmp10356 = tmp10363;
  tmp10364 = p.2                %% tmp10364    
@ tmp10364
))
  tmp10411 = {
      tmp10412 = {
          tmp10415 == 0;
          tmp10414 = tmp10415 .. _;
          tmp10416 = _ .. _;
          tmp10413 = tmp10414 -|-> tmp10416;
          tmp10419 == 0;
          tmp10418 = tmp10419 .. _;
          tmp10420 = _ .. _;
          tmp10421 = tmp10418 x tmp10420;
          tmp10417 = P tmp10421;
          f in tmp10417;
          tmp10422 = {
              x in f;
              tmp10423 = x.1
            @ tmp10423
            };
          tmp10425 == 1;
          # f = tmp10426;
          tmp10424 = tmp10425 .. tmp10426;
          tmp10422 = tmp10424
        @ f
        };                          %% tmp10412:set(1000.0,null),    
      %%---------------
      tmp10427 = (s, s);            %% s    
      s in tmp10412 :: 1000.0 
    @ tmp10427
    };                          %% tmp10411:set(1000.0,null),    
  %%---------------
  p in tmp10411 :: 1000.0 ;
  tmp10428 = p.1;               %% tmp10428:set(2.0,2),    
  tmp10430 == 1;                %% tmp10430:1..1,    
  tmp10431 == 3;                %% tmp10431:3..3,    
  tmp10429 = (tmp10430, tmp10431); %% tmp10429={1=tmp10430, 2=tmp10431},    
  tmp10433 == 2;                %% tmp10433:2..2,    
  tmp10434 == 5;                %% tmp10434:5..5,    
  tmp10432 = (tmp10433, tmp10434); %% tmp10432={1=tmp10433, 2=tmp10434},    
  tmp10435 = { tmp10432, tmp10429 }; %% tmp10435=tmp10428,:set(2.0,2),    
  tmp10428 = tmp10435;
  tmp10436 = p.2                %% tmp10436    
@ tmp10436
))
  tmp10494 = {
      tmp10495 = {
          tmp10498 == 0;
          tmp10497 = tmp10498 .. _;
          tmp10499 = _ .. _;
          tmp10496 = tmp10497 -|-> tmp10499;
          tmp10502 == 0;
          tmp10501 = tmp10502 .. _;
          tmp10503 = _ .. _;
          tmp10504 = tmp10501 x tmp10503;
          tmp10500 = P tmp10504;
          f in tmp10500;
          tmp10505 = {
              x in f;
              tmp10506 = x.1
            @ tmp10506
            };
          tmp10508 == 1;
          # f = tmp10509;
          tmp10507 = tmp10508 .. tmp10509;
          tmp10505 = tmp10507
        @ f
        };                          %% tmp10495:set(1000.0,null),    
      %%---------------
      tmp10510 = (s, s);            %% s    
      s in tmp10495 :: 1000.0 
    @ tmp10510
    };                          %% tmp10494:set(1000.0,null),    
  %%---------------
  p in tmp10494 :: 1000.0 ;
  tmp10511 = p.1;               %% tmp10511:set(5.0,5),    
  tmp10513 == 1;                %% tmp10513:1..1,    
  tmp10514 == 3;                %% tmp10514:3..3,    
  tmp10512 = (tmp10513, tmp10514); %% tmp10512={1=tmp10513, 2=tmp10514},    
  tmp10516 == 2;                %% tmp10516:2..2,    
  tmp10517 == 5;                %% tmp10517:5..5,    
  tmp10515 = (tmp10516, tmp10517); %% tmp10515={1=tmp10516, 2=tmp10517},    
  tmp10519 == 3;                %% tmp10519:3..3,    
  tmp10520 == 7;                %% tmp10520:7..7,    
  tmp10518 = (tmp10519, tmp10520); %% tmp10518={1=tmp10519, 2=tmp10520},    
  tmp10522 == 4;                %% tmp10522:4..4,    
  tmp10523 == 6;                %% tmp10523:6..6,    
  tmp10521 = (tmp10522, tmp10523); %% tmp10521={1=tmp10522, 2=tmp10523},    
  tmp10525 == 5;                %% tmp10525:5..5,    
  tmp10526 == 9;                %% tmp10526:9..9,    
  tmp10524 = (tmp10525, tmp10526); %% tmp10524={1=tmp10525, 2=tmp10526},    
  tmp10527 = { tmp10515, tmp10518, tmp10524, tmp10521, tmp10512 }; %% tmp10527=tmp10511,:set(5.0,5),    
  tmp10511 = tmp10527;
  tmp10528 = p.2                %% tmp10528    
@ tmp10528
))
------------- ---------------- ---------------
------------- Standard Error -----------------
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17506)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × POWER GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × POWER GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)) × POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)) × POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)) × POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)) × POWER (GIVEN 𝔸_16341 × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341)))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
Type1 POWER (POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341) × POWER (GIVEN 𝔸_16341 × GIVEN 𝔸_16341))
Type2 POWER (POWER (GIVEN 𝔸_16341 × GENTYPE X_17514) × POWER (GIVEN 𝔸_16341 × GENTYPE X_17514))
Type1 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17514)
Type2 POWER POWER (GIVEN 𝔸_16341 × GENTYPE X_17484)
------------- ---------------- ---------------

Testcase: animate_sequences.tex:28 took 0.5 sec
Testcase: animate_sequences.tex:29 took 0.564 sec
Testcase: animate_sequences.tex:31 took 0.489 sec
Testcase: animate_sequences.tex:32 took 0.546 sec
Testcase: animate_sequences.tex:34 took 0.495 sec
Testcase: animate_sequences.tex:35 took 0.503 sec
Testcase: animate_sequences.tex:36 took 0.718 sec
Testcase: animate_sequences.tex:40 took 0.714 sec
Testcase: animate_sequences.tex:41 took 0.668 sec
Testcase: animate_sequences.tex:43 took 0.591 sec
	FAILED
null
junit.framework.AssertionFailedError
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:136)

Testcase: animate_sequences.tex:44 took 0.685 sec
Testcase: animate_sequences.tex:46 took 0.583 sec
	FAILED
null
junit.framework.AssertionFailedError
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:136)

Testcase: animate_sequences.tex:47 took 0.634 sec
	FAILED
null
junit.framework.AssertionFailedError
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:136)

Testcase: animate_sequences.tex:48 took 0.614 sec
Testcase: animate_sequences.tex:50 took 0.997 sec
Testcase: animate_sequences.tex:54 took 0.5 sec
	FAILED
null
junit.framework.AssertionFailedError
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:136)

Testcase: animate_sequences.tex:55 took 0.505 sec
	FAILED
null
junit.framework.AssertionFailedError
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:136)

Testcase: animate_sequences.tex:57 took 0.469 sec
Testcase: animate_sequences.tex:58 took 0.481 sec
	FAILED
null
junit.framework.AssertionFailedError
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:136)

Testcase: animate_sequences.tex:60 took 0.517 sec
Testcase: animate_sequences.tex:61 took 0.556 sec
Testcase: animate_sequences.tex:63 took 0.549 sec
Testcase: animate_sequences.tex:64 took 0.688 sec
Testcase: animate_sequences.tex:67 took 0.62 sec
Testcase: animate_sequences.tex:68 took 0.445 sec
Testcase: animate_sequences.tex:69 took 0.189 sec
Testcase: animate_sequences.tex:70 took 0.194 sec
Testcase: animate_sequences.tex:71 took 0.367 sec
Testcase: animate_sequences.tex:72 took 0.398 sec
Testcase: animate_sequences.tex:75 took 0.798 sec
Testcase: animate_sequences.tex:76 took 0.718 sec
Testcase: animate_sequences.tex:77 took 0.294 sec
Testcase: animate_sequences.tex:78 took 0.32 sec
Testcase: animate_sequences.tex:79 took 0.469 sec
Testcase: animate_sequences.tex:80 took 0.371 sec
Testcase: animate_sequences.tex:83 took 0.478 sec
Testcase: animate_sequences.tex:84 took 0.489 sec
Testcase: animate_sequences.tex:85 took 0.227 sec
Testcase: animate_sequences.tex:86 took 0.266 sec
Testcase: animate_sequences.tex:87 took 0.289 sec
Testcase: animate_sequences.tex:88 took 0.252 sec
Testcase: animate_sequences.tex:91 took 0.866 sec
Testcase: animate_sequences.tex:92 took 0.66 sec
Testcase: animate_sequences.tex:93 took 0.491 sec
Testcase: animate_sequences.tex:94 took 0.268 sec
Testcase: animate_sequences.tex:95 took 0.362 sec
Testcase: animate_sequences.tex:96 took 0.327 sec
Testcase: animate_sequences.tex:100 took 0.8 sec
Testcase: animate_sequences.tex:101 took 0.565 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp7114 = {
      tmp7115 = {
          tmp7118 == 0;                 %% tmp7118:0..0,    
          tmp7117 = tmp7118 .. _;       %% tmp7117:0.._,    
          tmp7119 = _ .. _;             %% tmp7119    
          tmp7116 = tmp7117 -|-> tmp7119; %% tmp7116    
          tmp7122 == 0;                 %% tmp7122:0..0,    
          tmp7121 = tmp7122 .. _;       %% tmp7121:0.._,    
          tmp7123 = _ .. _;             %% tmp7123    
          tmp7124 = tmp7121 x tmp7123;  %% tmp7124:set(Infinity,null),    
          tmp7120 = P tmp7124;          %% tmp7120    
          f in tmp7120;
          tmp7125 = {
              x in f :: 3.0 ;
              tmp7126 = x.1                 %% tmp7126    
              %%----------
            @ tmp7126
            };                          %% tmp7125:set(100.0,null,1.._),    
          tmp7128 == 1;                 %% tmp7128:1..1,    
          # f = tmp7129;                %% tmp7129:0.._,    
          tmp7127 = tmp7128 .. tmp7129; %% tmp7127=tmp7125,:set(100.0,null,1.._),    
          %%---------------
          tmp7125 = tmp7127
        @ f
        };                          %% tmp7115:set(1000.0,null),    
      %%---------------
      s in tmp7115 :: 1000.0 ;
      tmp7130 = (s, s)              %% tmp7130={1=s, 2=s},    
    @ tmp7130
    };                          %% tmp7114:set(1000.0,null),    
  tmp7133 == 1;                 %% tmp7133:1..1,    
  tmp7134 == 1;                 %% tmp7134:1..1,    
  tmp7132 = (tmp7133, tmp7134); %% tmp7132={1=tmp7133, 2=tmp7134},    
  tmp7136 == 2;                 %% tmp7136:2..2,    
  tmp7137 == 3;                 %% tmp7137:3..3,    
  tmp7135 = (tmp7136, tmp7137); %% tmp7135={1=tmp7136, 2=tmp7137},    
  tmp7139 == 3;                 %% tmp7139:3..3,    
  tmp7140 == 5;                 %% tmp7140:5..5,    
  tmp7138 = (tmp7139, tmp7140); %% tmp7138={1=tmp7139, 2=tmp7140},    
  tmp7141 = { tmp7132, tmp7135, tmp7138 }; %% tmp7141=tmp7131,:set(3.0,3),    
  tmp7131 = tmp7141;            %% tmp7131:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7114 :: 500.0 ; %% p={1=tmp7131, 2=tmp7142},    
  tmp7131 = p.1;
  tmp7142 = p.2                 %% tmp7142    
@ tmp7142
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp7114 = {
      tmp7115 = {
          tmp7118 == 0;                 %% tmp7118:0..0,    
          tmp7117 = tmp7118 .. _;       %% tmp7117:0.._,    
          tmp7119 = _ .. _;             %% tmp7119    
          tmp7116 = tmp7117 -|-> tmp7119; %% tmp7116    
          tmp7122 == 0;                 %% tmp7122:0..0,    
          tmp7121 = tmp7122 .. _;       %% tmp7121:0.._,    
          tmp7123 = _ .. _;             %% tmp7123    
          tmp7124 = tmp7121 x tmp7123;  %% tmp7124:set(Infinity,null),    
          tmp7120 = P tmp7124;          %% tmp7120    
          f in tmp7120;
          tmp7125 = {
              x in f :: 3.0 ;
              tmp7126 = x.1                 %% tmp7126    
              %%----------
            @ tmp7126
            };                          %% tmp7125:set(100.0,null,1.._),    
          tmp7128 == 1;                 %% tmp7128:1..1,    
          # f = tmp7129;                %% tmp7129:0.._,    
          tmp7127 = tmp7128 .. tmp7129; %% tmp7127=tmp7125,:set(100.0,null,1.._),    
          %%---------------
          tmp7125 = tmp7127
        @ f
        };                          %% tmp7115:set(1000.0,null),    
      %%---------------
      s in tmp7115 :: 1000.0 ;
      tmp7130 = (s, s)              %% tmp7130={1=s, 2=s},    
    @ tmp7130
    };                          %% tmp7114:set(1000.0,null),    
  tmp7133 == 1;                 %% tmp7133:1..1,    
  tmp7134 == 1;                 %% tmp7134:1..1,    
  tmp7132 = (tmp7133, tmp7134); %% tmp7132={1=tmp7133, 2=tmp7134},    
  tmp7136 == 2;                 %% tmp7136:2..2,    
  tmp7137 == 3;                 %% tmp7137:3..3,    
  tmp7135 = (tmp7136, tmp7137); %% tmp7135={1=tmp7136, 2=tmp7137},    
  tmp7139 == 3;                 %% tmp7139:3..3,    
  tmp7140 == 5;                 %% tmp7140:5..5,    
  tmp7138 = (tmp7139, tmp7140); %% tmp7138={1=tmp7139, 2=tmp7140},    
  tmp7141 = { tmp7132, tmp7135, tmp7138 }; %% tmp7141=tmp7131,:set(3.0,3),    
  tmp7131 = tmp7141;            %% tmp7131:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7114 :: 500.0 ; %% p={1=tmp7131, 2=tmp7142},    
  tmp7131 = p.1;
  tmp7142 = p.2                 %% tmp7142    
@ tmp7142
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatForall.nextEvaluation(FlatForall.java:161)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:102 took 0.552 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp7174 = {
      tmp7175 = {
          tmp7178 == 0;                 %% tmp7178:0..0,    
          tmp7177 = tmp7178 .. _;       %% tmp7177:0.._,    
          tmp7179 = _ .. _;             %% tmp7179    
          tmp7176 = tmp7177 -|-> tmp7179; %% tmp7176    
          tmp7182 == 0;                 %% tmp7182:0..0,    
          tmp7181 = tmp7182 .. _;       %% tmp7181:0.._,    
          tmp7183 = _ .. _;             %% tmp7183    
          tmp7184 = tmp7181 x tmp7183;  %% tmp7184:set(Infinity,null),    
          tmp7180 = P tmp7184;          %% tmp7180    
          f in tmp7180;
          tmp7185 = {
              x in f :: 3.0 ;
              tmp7186 = x.1                 %% tmp7186    
              %%----------
            @ tmp7186
            };                          %% tmp7185:set(100.0,null,1.._),    
          tmp7188 == 1;                 %% tmp7188:1..1,    
          # f = tmp7189;                %% tmp7189:0.._,    
          tmp7187 = tmp7188 .. tmp7189; %% tmp7187=tmp7185,:set(100.0,null,1.._),    
          %%---------------
          tmp7185 = tmp7187
        @ f
        };                          %% tmp7175:set(1000.0,null),    
      %%---------------
      s in tmp7175 :: 1000.0 ;
      tmp7190 = (s, s)              %% tmp7190={1=s, 2=s},    
    @ tmp7190
    };                          %% tmp7174:set(1000.0,null),    
  tmp7193 == 1;                 %% tmp7193:1..1,    
  tmp7194 == 1;                 %% tmp7194:1..1,    
  tmp7192 = (tmp7193, tmp7194); %% tmp7192={1=tmp7193, 2=tmp7194},    
  tmp7196 == 2;                 %% tmp7196:2..2,    
  tmp7197 == 3;                 %% tmp7197:3..3,    
  tmp7195 = (tmp7196, tmp7197); %% tmp7195={1=tmp7196, 2=tmp7197},    
  tmp7199 == 3;                 %% tmp7199:3..3,    
  tmp7200 == 5;                 %% tmp7200:5..5,    
  tmp7198 = (tmp7199, tmp7200); %% tmp7198={1=tmp7199, 2=tmp7200},    
  tmp7201 = { tmp7192, tmp7198, tmp7195 }; %% tmp7201=tmp7191,:set(3.0,3),    
  tmp7191 = tmp7201;            %% tmp7191:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7174 :: 500.0 ; %% p={1=tmp7191, 2=tmp7202},    
  tmp7191 = p.1;
  tmp7202 = p.2                 %% tmp7202    
@ tmp7202
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp7174 = {
      tmp7175 = {
          tmp7178 == 0;                 %% tmp7178:0..0,    
          tmp7177 = tmp7178 .. _;       %% tmp7177:0.._,    
          tmp7179 = _ .. _;             %% tmp7179    
          tmp7176 = tmp7177 -|-> tmp7179; %% tmp7176    
          tmp7182 == 0;                 %% tmp7182:0..0,    
          tmp7181 = tmp7182 .. _;       %% tmp7181:0.._,    
          tmp7183 = _ .. _;             %% tmp7183    
          tmp7184 = tmp7181 x tmp7183;  %% tmp7184:set(Infinity,null),    
          tmp7180 = P tmp7184;          %% tmp7180    
          f in tmp7180;
          tmp7185 = {
              x in f :: 3.0 ;
              tmp7186 = x.1                 %% tmp7186    
              %%----------
            @ tmp7186
            };                          %% tmp7185:set(100.0,null,1.._),    
          tmp7188 == 1;                 %% tmp7188:1..1,    
          # f = tmp7189;                %% tmp7189:0.._,    
          tmp7187 = tmp7188 .. tmp7189; %% tmp7187=tmp7185,:set(100.0,null,1.._),    
          %%---------------
          tmp7185 = tmp7187
        @ f
        };                          %% tmp7175:set(1000.0,null),    
      %%---------------
      s in tmp7175 :: 1000.0 ;
      tmp7190 = (s, s)              %% tmp7190={1=s, 2=s},    
    @ tmp7190
    };                          %% tmp7174:set(1000.0,null),    
  tmp7193 == 1;                 %% tmp7193:1..1,    
  tmp7194 == 1;                 %% tmp7194:1..1,    
  tmp7192 = (tmp7193, tmp7194); %% tmp7192={1=tmp7193, 2=tmp7194},    
  tmp7196 == 2;                 %% tmp7196:2..2,    
  tmp7197 == 3;                 %% tmp7197:3..3,    
  tmp7195 = (tmp7196, tmp7197); %% tmp7195={1=tmp7196, 2=tmp7197},    
  tmp7199 == 3;                 %% tmp7199:3..3,    
  tmp7200 == 5;                 %% tmp7200:5..5,    
  tmp7198 = (tmp7199, tmp7200); %% tmp7198={1=tmp7199, 2=tmp7200},    
  tmp7201 = { tmp7192, tmp7198, tmp7195 }; %% tmp7201=tmp7191,:set(3.0,3),    
  tmp7191 = tmp7201;            %% tmp7191:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7174 :: 500.0 ; %% p={1=tmp7191, 2=tmp7202},    
  tmp7191 = p.1;
  tmp7202 = p.2                 %% tmp7202    
@ tmp7202
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatForall.nextEvaluation(FlatForall.java:161)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:103 took 0.535 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp7228 = {
      tmp7229 = {
          tmp7232 == 0;                 %% tmp7232:0..0,    
          tmp7231 = tmp7232 .. _;       %% tmp7231:0.._,    
          tmp7233 = _ .. _;             %% tmp7233    
          tmp7230 = tmp7231 -|-> tmp7233; %% tmp7230    
          tmp7236 == 0;                 %% tmp7236:0..0,    
          tmp7235 = tmp7236 .. _;       %% tmp7235:0.._,    
          tmp7237 = _ .. _;             %% tmp7237    
          tmp7238 = tmp7235 x tmp7237;  %% tmp7238:set(Infinity,null),    
          tmp7234 = P tmp7238;          %% tmp7234    
          f in tmp7234;
          tmp7239 = {
              %%---------------
              x in f :: 3.0 ;
              tmp7240 = x.1                 %% tmp7240    
            @ tmp7240
            };                          %% tmp7239:set(100.0,null,1.._),    
          tmp7242 == 1;                 %% tmp7242:1..1,    
          # f = tmp7243;                %% tmp7243:0.._,    
          tmp7241 = tmp7242 .. tmp7243; %% tmp7241=tmp7239,:set(100.0,null,1.._),    
          %%---------------
          tmp7239 = tmp7241
        @ f
        };                          %% tmp7229:set(1000.0,null),    
      %%---------------
      s in tmp7229 :: 1000.0 ;
      tmp7244 = (s, s)              %% tmp7244={1=s, 2=s},    
    @ tmp7244
    };                          %% tmp7228:set(1000.0,null),    
  tmp7247 == 1;                 %% tmp7247:1..1,    
  tmp7248 == 1;                 %% tmp7248:1..1,    
  tmp7246 = (tmp7247, tmp7248); %% tmp7246={1=tmp7247, 2=tmp7248},    
  tmp7250 == 2;                 %% tmp7250:2..2,    
  tmp7251 == 3;                 %% tmp7251:3..3,    
  tmp7249 = (tmp7250, tmp7251); %% tmp7249={1=tmp7250, 2=tmp7251},    
  tmp7253 == 3;                 %% tmp7253:3..3,    
  tmp7254 == 5;                 %% tmp7254:5..5,    
  tmp7252 = (tmp7253, tmp7254); %% tmp7252={1=tmp7253, 2=tmp7254},    
  tmp7255 = { tmp7246, tmp7249, tmp7252 }; %% tmp7255=tmp7245,:set(3.0,3),    
  tmp7245 = tmp7255;            %% tmp7245:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7228 :: 500.0 ; %% p={1=tmp7245, 2=tmp7256},    
  tmp7245 = p.1;
  tmp7256 = p.2                 %% tmp7256    
@ tmp7256
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp7228 = {
      tmp7229 = {
          tmp7232 == 0;                 %% tmp7232:0..0,    
          tmp7231 = tmp7232 .. _;       %% tmp7231:0.._,    
          tmp7233 = _ .. _;             %% tmp7233    
          tmp7230 = tmp7231 -|-> tmp7233; %% tmp7230    
          tmp7236 == 0;                 %% tmp7236:0..0,    
          tmp7235 = tmp7236 .. _;       %% tmp7235:0.._,    
          tmp7237 = _ .. _;             %% tmp7237    
          tmp7238 = tmp7235 x tmp7237;  %% tmp7238:set(Infinity,null),    
          tmp7234 = P tmp7238;          %% tmp7234    
          f in tmp7234;
          tmp7239 = {
              %%---------------
              x in f :: 3.0 ;
              tmp7240 = x.1                 %% tmp7240    
            @ tmp7240
            };                          %% tmp7239:set(100.0,null,1.._),    
          tmp7242 == 1;                 %% tmp7242:1..1,    
          # f = tmp7243;                %% tmp7243:0.._,    
          tmp7241 = tmp7242 .. tmp7243; %% tmp7241=tmp7239,:set(100.0,null,1.._),    
          %%---------------
          tmp7239 = tmp7241
        @ f
        };                          %% tmp7229:set(1000.0,null),    
      %%---------------
      s in tmp7229 :: 1000.0 ;
      tmp7244 = (s, s)              %% tmp7244={1=s, 2=s},    
    @ tmp7244
    };                          %% tmp7228:set(1000.0,null),    
  tmp7247 == 1;                 %% tmp7247:1..1,    
  tmp7248 == 1;                 %% tmp7248:1..1,    
  tmp7246 = (tmp7247, tmp7248); %% tmp7246={1=tmp7247, 2=tmp7248},    
  tmp7250 == 2;                 %% tmp7250:2..2,    
  tmp7251 == 3;                 %% tmp7251:3..3,    
  tmp7249 = (tmp7250, tmp7251); %% tmp7249={1=tmp7250, 2=tmp7251},    
  tmp7253 == 3;                 %% tmp7253:3..3,    
  tmp7254 == 5;                 %% tmp7254:5..5,    
  tmp7252 = (tmp7253, tmp7254); %% tmp7252={1=tmp7253, 2=tmp7254},    
  tmp7255 = { tmp7246, tmp7249, tmp7252 }; %% tmp7255=tmp7245,:set(3.0,3),    
  tmp7245 = tmp7255;            %% tmp7245:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7228 :: 500.0 ; %% p={1=tmp7245, 2=tmp7256},    
  tmp7245 = p.1;
  tmp7256 = p.2                 %% tmp7256    
@ tmp7256
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatForall.nextEvaluation(FlatForall.java:161)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatNot.nextEvaluation(FlatNot.java:58)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:104 took 0.535 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp7282 = {
      tmp7283 = {
          tmp7286 == 0;                 %% tmp7286:0..0,    
          tmp7285 = tmp7286 .. _;       %% tmp7285:0.._,    
          tmp7287 = _ .. _;             %% tmp7287    
          tmp7284 = tmp7285 -|-> tmp7287; %% tmp7284    
          tmp7290 == 0;                 %% tmp7290:0..0,    
          tmp7289 = tmp7290 .. _;       %% tmp7289:0.._,    
          tmp7291 = _ .. _;             %% tmp7291    
          tmp7292 = tmp7289 x tmp7291;  %% tmp7292:set(Infinity,null),    
          tmp7288 = P tmp7292;          %% tmp7288    
          f in tmp7288;
          tmp7293 = {
              %%---------------
              x in f :: 3.0 ;
              tmp7294 = x.1                 %% tmp7294    
            @ tmp7294
            };                          %% tmp7293:set(100.0,null,1.._),    
          tmp7296 == 1;                 %% tmp7296:1..1,    
          # f = tmp7297;                %% tmp7297:0.._,    
          tmp7295 = tmp7296 .. tmp7297; %% tmp7295=tmp7293,:set(100.0,null,1.._),    
          %%---------------
          tmp7293 = tmp7295
        @ f
        };                          %% tmp7283:set(1000.0,null),    
      %%---------------
      s in tmp7283 :: 1000.0 ;
      tmp7298 = (s, s)              %% tmp7298={1=s, 2=s},    
    @ tmp7298
    };                          %% tmp7282:set(1000.0,null),    
  tmp7301 == 1;                 %% tmp7301:1..1,    
  tmp7302 == 1;                 %% tmp7302:1..1,    
  tmp7300 = (tmp7301, tmp7302); %% tmp7300={1=tmp7301, 2=tmp7302},    
  tmp7304 == 2;                 %% tmp7304:2..2,    
  tmp7305 == 3;                 %% tmp7305:3..3,    
  tmp7303 = (tmp7304, tmp7305); %% tmp7303={1=tmp7304, 2=tmp7305},    
  tmp7307 == 3;                 %% tmp7307:3..3,    
  tmp7308 == 5;                 %% tmp7308:5..5,    
  tmp7306 = (tmp7307, tmp7308); %% tmp7306={1=tmp7307, 2=tmp7308},    
  tmp7309 = { tmp7306, tmp7303, tmp7300 }; %% tmp7309=tmp7299,:set(3.0,3),    
  tmp7299 = tmp7309;            %% tmp7299:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7282 :: 500.0 ; %% p={1=tmp7299, 2=tmp7310},    
  tmp7299 = p.1;
  tmp7310 = p.2                 %% tmp7310    
@ tmp7310
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp7282 = {
      tmp7283 = {
          tmp7286 == 0;                 %% tmp7286:0..0,    
          tmp7285 = tmp7286 .. _;       %% tmp7285:0.._,    
          tmp7287 = _ .. _;             %% tmp7287    
          tmp7284 = tmp7285 -|-> tmp7287; %% tmp7284    
          tmp7290 == 0;                 %% tmp7290:0..0,    
          tmp7289 = tmp7290 .. _;       %% tmp7289:0.._,    
          tmp7291 = _ .. _;             %% tmp7291    
          tmp7292 = tmp7289 x tmp7291;  %% tmp7292:set(Infinity,null),    
          tmp7288 = P tmp7292;          %% tmp7288    
          f in tmp7288;
          tmp7293 = {
              %%---------------
              x in f :: 3.0 ;
              tmp7294 = x.1                 %% tmp7294    
            @ tmp7294
            };                          %% tmp7293:set(100.0,null,1.._),    
          tmp7296 == 1;                 %% tmp7296:1..1,    
          # f = tmp7297;                %% tmp7297:0.._,    
          tmp7295 = tmp7296 .. tmp7297; %% tmp7295=tmp7293,:set(100.0,null,1.._),    
          %%---------------
          tmp7293 = tmp7295
        @ f
        };                          %% tmp7283:set(1000.0,null),    
      %%---------------
      s in tmp7283 :: 1000.0 ;
      tmp7298 = (s, s)              %% tmp7298={1=s, 2=s},    
    @ tmp7298
    };                          %% tmp7282:set(1000.0,null),    
  tmp7301 == 1;                 %% tmp7301:1..1,    
  tmp7302 == 1;                 %% tmp7302:1..1,    
  tmp7300 = (tmp7301, tmp7302); %% tmp7300={1=tmp7301, 2=tmp7302},    
  tmp7304 == 2;                 %% tmp7304:2..2,    
  tmp7305 == 3;                 %% tmp7305:3..3,    
  tmp7303 = (tmp7304, tmp7305); %% tmp7303={1=tmp7304, 2=tmp7305},    
  tmp7307 == 3;                 %% tmp7307:3..3,    
  tmp7308 == 5;                 %% tmp7308:5..5,    
  tmp7306 = (tmp7307, tmp7308); %% tmp7306={1=tmp7307, 2=tmp7308},    
  tmp7309 = { tmp7306, tmp7303, tmp7300 }; %% tmp7309=tmp7299,:set(3.0,3),    
  tmp7299 = tmp7309;            %% tmp7299:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601da701, net.sourceforge.czt.z.impl.TupleExprImpl@602ca740, net.sourceforge.czt.z.impl.TupleExprImpl@603ba77f}} in tmp7282 :: 500.0 ; %% p={1=tmp7299, 2=tmp7310},    
  tmp7299 = p.1;
  tmp7310 = p.2                 %% tmp7310    
@ tmp7310
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatForall.nextEvaluation(FlatForall.java:161)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatNot.nextEvaluation(FlatNot.java:58)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:107 took 0.864 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:108 took 0.809 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:109 took 0.889 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:110 took 1.079 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatNot.nextEvaluation(FlatNot.java:58)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:111 took 0.814 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatNot.nextEvaluation(FlatNot.java:58)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:114 took 1.105 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:115 took 1.105 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:116 took 1.111 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:117 took 1.118 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:118 took 1.123 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:119 took 1.353 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:120 took 1.126 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:121 took 1.156 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatNot.nextEvaluation(FlatNot.java:58)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:122 took 1.145 sec
	Caused an ERROR
Cannot start iteration through ALL integers
net.sourceforge.czt.animation.eval.EvalException: Cannot start iteration through ALL integers
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:265)
	at net.sourceforge.czt.animation.eval.result.RangeSet$RangeSetIterator.next(RangeSet.java:1)
	at net.sourceforge.czt.animation.eval.result.ProdSet$ProdSetIterator.next(ProdSet.java:172)
	at net.sourceforge.czt.animation.eval.result.ProdSet.nextMember(ProdSet.java:105)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.result.PowerSet$PowerSetIterator.<init>(PowerSet.java:162)
	at net.sourceforge.czt.animation.eval.result.PowerSet.nextMember(PowerSet.java:114)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatExists.nextEvaluation(FlatExists.java:60)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatNot.nextEvaluation(FlatNot.java:58)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:126 took 0.614 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp9585 = {
      tmp9586 = {
          tmp9589 == 0;                 %% tmp9589:0..0,    
          tmp9588 = tmp9589 .. _;       %% tmp9588:0.._,    
          tmp9590 = _ .. _;             %% tmp9590    
          tmp9587 = tmp9588 -|-> tmp9590; %% tmp9587    
          tmp9593 == 0;                 %% tmp9593:0..0,    
          tmp9592 = tmp9593 .. _;       %% tmp9592:0.._,    
          tmp9594 = _ .. _;             %% tmp9594    
          tmp9595 = tmp9592 x tmp9594;  %% tmp9595:set(Infinity,null),    
          tmp9591 = P tmp9595;          %% tmp9591    
          f in tmp9591;
          tmp9596 = {
              %%---------------
              x in f :: 3.0 ;
              tmp9597 = x.1                 %% tmp9597    
            @ tmp9597
            };                          %% tmp9596:set(100.0,null,1.._),    
          tmp9599 == 1;                 %% tmp9599:1..1,    
          # f = tmp9600;                %% tmp9600:0.._,    
          tmp9598 = tmp9599 .. tmp9600; %% tmp9598=tmp9596,:set(100.0,null,1.._),    
          %%---------------
          tmp9596 = tmp9598
        @ f
        };                          %% tmp9586:set(1000.0,null),    
      %%---------------
      s in tmp9586 :: 1000.0 ;
      tmp9601 = (s, s)              %% tmp9601={1=s, 2=s},    
    @ tmp9601
    };                          %% tmp9585:set(1000.0,null),    
  tmp9604 == 1;                 %% tmp9604:1..1,    
  tmp9605 == 2;                 %% tmp9605:2..2,    
  tmp9603 = (tmp9604, tmp9605); %% tmp9603={1=tmp9604, 2=tmp9605},    
  tmp9607 == 2;                 %% tmp9607:2..2,    
  tmp9608 == 4;                 %% tmp9608:4..4,    
  tmp9606 = (tmp9607, tmp9608); %% tmp9606={1=tmp9607, 2=tmp9608},    
  tmp9610 == 3;                 %% tmp9610:3..3,    
  tmp9611 == 6;                 %% tmp9611:6..6,    
  tmp9609 = (tmp9610, tmp9611); %% tmp9609={1=tmp9610, 2=tmp9611},    
  tmp9612 = { tmp9606, tmp9609, tmp9603 }; %% tmp9612=tmp9602,:set(3.0,3),    
  tmp9602 = tmp9612;            %% tmp9602:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601e1b60, net.sourceforge.czt.z.impl.TupleExprImpl@602d1b9f, net.sourceforge.czt.z.impl.TupleExprImpl@603c1bde}} in tmp9585 :: 0.4 ; %% p={1=tmp9602, 2=tmp9613},    
  tmp9602 = p.1;
  tmp9613 = p.2                 %% tmp9613    
@ tmp9613
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp9585 = {
      tmp9586 = {
          tmp9589 == 0;                 %% tmp9589:0..0,    
          tmp9588 = tmp9589 .. _;       %% tmp9588:0.._,    
          tmp9590 = _ .. _;             %% tmp9590    
          tmp9587 = tmp9588 -|-> tmp9590; %% tmp9587    
          tmp9593 == 0;                 %% tmp9593:0..0,    
          tmp9592 = tmp9593 .. _;       %% tmp9592:0.._,    
          tmp9594 = _ .. _;             %% tmp9594    
          tmp9595 = tmp9592 x tmp9594;  %% tmp9595:set(Infinity,null),    
          tmp9591 = P tmp9595;          %% tmp9591    
          f in tmp9591;
          tmp9596 = {
              %%---------------
              x in f :: 3.0 ;
              tmp9597 = x.1                 %% tmp9597    
            @ tmp9597
            };                          %% tmp9596:set(100.0,null,1.._),    
          tmp9599 == 1;                 %% tmp9599:1..1,    
          # f = tmp9600;                %% tmp9600:0.._,    
          tmp9598 = tmp9599 .. tmp9600; %% tmp9598=tmp9596,:set(100.0,null,1.._),    
          %%---------------
          tmp9596 = tmp9598
        @ f
        };                          %% tmp9586:set(1000.0,null),    
      %%---------------
      s in tmp9586 :: 1000.0 ;
      tmp9601 = (s, s)              %% tmp9601={1=s, 2=s},    
    @ tmp9601
    };                          %% tmp9585:set(1000.0,null),    
  tmp9604 == 1;                 %% tmp9604:1..1,    
  tmp9605 == 2;                 %% tmp9605:2..2,    
  tmp9603 = (tmp9604, tmp9605); %% tmp9603={1=tmp9604, 2=tmp9605},    
  tmp9607 == 2;                 %% tmp9607:2..2,    
  tmp9608 == 4;                 %% tmp9608:4..4,    
  tmp9606 = (tmp9607, tmp9608); %% tmp9606={1=tmp9607, 2=tmp9608},    
  tmp9610 == 3;                 %% tmp9610:3..3,    
  tmp9611 == 6;                 %% tmp9611:6..6,    
  tmp9609 = (tmp9610, tmp9611); %% tmp9609={1=tmp9610, 2=tmp9611},    
  tmp9612 = { tmp9606, tmp9609, tmp9603 }; %% tmp9612=tmp9602,:set(3.0,3),    
  tmp9602 = tmp9612;            %% tmp9602:set(3.0,3),    
  %%---------------
  p{1={net.sourceforge.czt.z.impl.TupleExprImpl@601e1b60, net.sourceforge.czt.z.impl.TupleExprImpl@602d1b9f, net.sourceforge.czt.z.impl.TupleExprImpl@603c1bde}} in tmp9585 :: 0.4 ; %% p={1=tmp9602, 2=tmp9613},    
  tmp9602 = p.1;
  tmp9613 = p.2                 %% tmp9613    
@ tmp9613
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.flatpred.FlatForall.nextEvaluation(FlatForall.java:161)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:129 took 0.377 sec
	Caused an ERROR
ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
net.sourceforge.czt.animation.eval.EvalException: ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
	at net.sourceforge.czt.animation.eval.FlattenVisitor.notYet(FlattenVisitor.java:283)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:453)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.RefExprImpl.accept(RefExprImpl.java:154)
	at net.sourceforge.czt.animation.eval.Flatten.flattenExpr(Flatten.java:95)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addDecl(FlatPredList.java:259)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addSchText(FlatPredList.java:216)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:625)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.ApplExprImpl.accept(ApplExprImpl.java:115)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:357)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.MemPredImpl.accept(MemPredImpl.java:128)
	at net.sourceforge.czt.animation.eval.Flatten.flattenPred(Flatten.java:79)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addPred(FlatPredList.java:303)
	at net.sourceforge.czt.animation.eval.ZLive.compile(ZLive.java:365)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:331)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:130 took 0.952 sec
	Caused an ERROR
ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
net.sourceforge.czt.animation.eval.EvalException: ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
	at net.sourceforge.czt.animation.eval.FlattenVisitor.notYet(FlattenVisitor.java:283)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:453)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.RefExprImpl.accept(RefExprImpl.java:154)
	at net.sourceforge.czt.animation.eval.Flatten.flattenExpr(Flatten.java:95)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addDecl(FlatPredList.java:259)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addSchText(FlatPredList.java:216)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:625)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.ApplExprImpl.accept(ApplExprImpl.java:115)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:357)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.MemPredImpl.accept(MemPredImpl.java:128)
	at net.sourceforge.czt.animation.eval.Flatten.flattenPred(Flatten.java:79)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addPred(FlatPredList.java:303)
	at net.sourceforge.czt.animation.eval.ZLive.compile(ZLive.java:365)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:331)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:131 took 1.086 sec
	Caused an ERROR
ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
net.sourceforge.czt.animation.eval.EvalException: ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
	at net.sourceforge.czt.animation.eval.FlattenVisitor.notYet(FlattenVisitor.java:283)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:453)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.RefExprImpl.accept(RefExprImpl.java:154)
	at net.sourceforge.czt.animation.eval.Flatten.flattenExpr(Flatten.java:95)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addDecl(FlatPredList.java:259)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addSchText(FlatPredList.java:216)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:625)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.ApplExprImpl.accept(ApplExprImpl.java:115)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:357)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.MemPredImpl.accept(MemPredImpl.java:128)
	at net.sourceforge.czt.animation.eval.Flatten.flattenPred(Flatten.java:79)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addPred(FlatPredList.java:303)
	at net.sourceforge.czt.animation.eval.ZLive.compile(ZLive.java:365)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:331)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:132 took 0.894 sec
	Caused an ERROR
ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
net.sourceforge.czt.animation.eval.EvalException: ZLive does not handle net.sourceforge.czt.z.impl.RefExprImpl yet. generic
	at net.sourceforge.czt.animation.eval.FlattenVisitor.notYet(FlattenVisitor.java:283)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:453)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitRefExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.RefExprImpl.accept(RefExprImpl.java:154)
	at net.sourceforge.czt.animation.eval.Flatten.flattenExpr(Flatten.java:95)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addDecl(FlatPredList.java:259)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addSchText(FlatPredList.java:216)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:625)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitApplExpr(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.ApplExprImpl.accept(ApplExprImpl.java:115)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:357)
	at net.sourceforge.czt.animation.eval.FlattenVisitor.visitMemPred(FlattenVisitor.java:1)
	at net.sourceforge.czt.z.impl.MemPredImpl.accept(MemPredImpl.java:128)
	at net.sourceforge.czt.animation.eval.Flatten.flattenPred(Flatten.java:79)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.addPred(FlatPredList.java:303)
	at net.sourceforge.czt.animation.eval.ZLive.compile(ZLive.java:365)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:331)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:135 took 0.705 sec
Testcase: animate_sequences.tex:136 took 0.347 sec
Testcase: animate_sequences.tex:137 took 0.69 sec
Testcase: animate_sequences.tex:138 took 0.642 sec
Testcase: animate_sequences.tex:139 took 0.507 sec
Testcase: animate_sequences.tex:140 took 0.326 sec
Testcase: animate_sequences.tex:141 took 0.33 sec
	FAILED
Should be undefined: net.sourceforge.czt.z.impl.ApplExprImpl@c1e1e679
junit.framework.AssertionFailedError: Should be undefined: net.sourceforge.czt.z.impl.ApplExprImpl@c1e1e679
	at net.sourceforge.czt.animation.eval.EvalTest$UndefTest.runTest(EvalTest.java:159)

Testcase: animate_sequences.tex:144 took 0.616 sec
Testcase: animate_sequences.tex:145 took 0.777 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp9965 = {
      tmp9966 = {
          tmp9969 == 0;
          tmp9968 = tmp9969 .. _;
          tmp9970 = _ .. _;
          tmp9967 = tmp9968 -|-> tmp9970;
          tmp9973 == 0;
          tmp9972 = tmp9973 .. _;
          tmp9974 = _ .. _;
          tmp9975 = tmp9972 x tmp9974;
          tmp9971 = P tmp9975;
          f in tmp9971;
          tmp9976 = {
              x in f;
              tmp9977 = x.1
            @ tmp9977
            };
          tmp9979 == 1;
          # f = tmp9980;
          tmp9978 = tmp9979 .. tmp9980;
          tmp9976 = tmp9978
        @ f
        };                          %% tmp9966:set(1000.0,null),    
      %%---------------
      tmp9981 = (s, s);             %% s    
      s in tmp9966 :: 1000.0 
    @ tmp9981
    };                          %% tmp9965:set(1000.0,null),    
  %%---------------
  p in tmp9965 :: 1000.0 ;
  tmp9982 = p.1;                %% tmp9982:set(2.0,2),    
  tmp9984 == 1;                 %% tmp9984:1..1,    
  tmp9985 == 3;                 %% tmp9985:3..3,    
  tmp9983 = (tmp9984, tmp9985); %% tmp9983={1=tmp9984, 2=tmp9985},    
  tmp9987 == 2;                 %% tmp9987:2..2,    
  tmp9988 == 5;                 %% tmp9988:5..5,    
  tmp9986 = (tmp9987, tmp9988); %% tmp9986={1=tmp9987, 2=tmp9988},    
  tmp9989 = { tmp9986, tmp9983 }; %% tmp9989=tmp9982,:set(2.0,2),    
  tmp9982 = tmp9989;
  tmp9990 = p.2                 %% tmp9990    
@ tmp9990
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp9965 = {
      tmp9966 = {
          tmp9969 == 0;
          tmp9968 = tmp9969 .. _;
          tmp9970 = _ .. _;
          tmp9967 = tmp9968 -|-> tmp9970;
          tmp9973 == 0;
          tmp9972 = tmp9973 .. _;
          tmp9974 = _ .. _;
          tmp9975 = tmp9972 x tmp9974;
          tmp9971 = P tmp9975;
          f in tmp9971;
          tmp9976 = {
              x in f;
              tmp9977 = x.1
            @ tmp9977
            };
          tmp9979 == 1;
          # f = tmp9980;
          tmp9978 = tmp9979 .. tmp9980;
          tmp9976 = tmp9978
        @ f
        };                          %% tmp9966:set(1000.0,null),    
      %%---------------
      tmp9981 = (s, s);             %% s    
      s in tmp9966 :: 1000.0 
    @ tmp9981
    };                          %% tmp9965:set(1000.0,null),    
  %%---------------
  p in tmp9965 :: 1000.0 ;
  tmp9982 = p.1;                %% tmp9982:set(2.0,2),    
  tmp9984 == 1;                 %% tmp9984:1..1,    
  tmp9985 == 3;                 %% tmp9985:3..3,    
  tmp9983 = (tmp9984, tmp9985); %% tmp9983={1=tmp9984, 2=tmp9985},    
  tmp9987 == 2;                 %% tmp9987:2..2,    
  tmp9988 == 5;                 %% tmp9988:5..5,    
  tmp9986 = (tmp9987, tmp9988); %% tmp9986={1=tmp9987, 2=tmp9988},    
  tmp9989 = { tmp9986, tmp9983 }; %% tmp9989=tmp9982,:set(2.0,2),    
  tmp9982 = tmp9989;
  tmp9990 = p.2                 %% tmp9990    
@ tmp9990
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.flatpred.FlatCard.nextEvaluation(FlatCard.java:83)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:146 took 0.752 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp10048 = {
      tmp10049 = {
          tmp10052 == 0;
          tmp10051 = tmp10052 .. _;
          tmp10053 = _ .. _;
          tmp10050 = tmp10051 -|-> tmp10053;
          tmp10056 == 0;
          tmp10055 = tmp10056 .. _;
          tmp10057 = _ .. _;
          tmp10058 = tmp10055 x tmp10057;
          tmp10054 = P tmp10058;
          f in tmp10054;
          tmp10059 = {
              x in f;
              tmp10060 = x.1
            @ tmp10060
            };
          tmp10062 == 1;
          # f = tmp10063;
          tmp10061 = tmp10062 .. tmp10063;
          tmp10059 = tmp10061
        @ f
        };                          %% tmp10049:set(1000.0,null),    
      %%---------------
      tmp10064 = (s, s);            %% s    
      s in tmp10049 :: 1000.0 
    @ tmp10064
    };                          %% tmp10048:set(1000.0,null),    
  %%---------------
  p in tmp10048 :: 1000.0 ;
  tmp10065 = p.1;               %% tmp10065:set(5.0,5),    
  tmp10067 == 1;                %% tmp10067:1..1,    
  tmp10068 == 3;                %% tmp10068:3..3,    
  tmp10066 = (tmp10067, tmp10068); %% tmp10066={1=tmp10067, 2=tmp10068},    
  tmp10070 == 2;                %% tmp10070:2..2,    
  tmp10071 == 5;                %% tmp10071:5..5,    
  tmp10069 = (tmp10070, tmp10071); %% tmp10069={1=tmp10070, 2=tmp10071},    
  tmp10073 == 3;                %% tmp10073:3..3,    
  tmp10074 == 7;                %% tmp10074:7..7,    
  tmp10072 = (tmp10073, tmp10074); %% tmp10072={1=tmp10073, 2=tmp10074},    
  tmp10076 == 4;                %% tmp10076:4..4,    
  tmp10077 == 6;                %% tmp10077:6..6,    
  tmp10075 = (tmp10076, tmp10077); %% tmp10075={1=tmp10076, 2=tmp10077},    
  tmp10079 == 5;                %% tmp10079:5..5,    
  tmp10080 == 9;                %% tmp10080:9..9,    
  tmp10078 = (tmp10079, tmp10080); %% tmp10078={1=tmp10079, 2=tmp10080},    
  tmp10081 = { tmp10072, tmp10066, tmp10069, tmp10078, tmp10075 }; %% tmp10081=tmp10065,:set(5.0,5),    
  tmp10065 = tmp10081;
  tmp10082 = p.2                %% tmp10082    
@ tmp10082
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp10048 = {
      tmp10049 = {
          tmp10052 == 0;
          tmp10051 = tmp10052 .. _;
          tmp10053 = _ .. _;
          tmp10050 = tmp10051 -|-> tmp10053;
          tmp10056 == 0;
          tmp10055 = tmp10056 .. _;
          tmp10057 = _ .. _;
          tmp10058 = tmp10055 x tmp10057;
          tmp10054 = P tmp10058;
          f in tmp10054;
          tmp10059 = {
              x in f;
              tmp10060 = x.1
            @ tmp10060
            };
          tmp10062 == 1;
          # f = tmp10063;
          tmp10061 = tmp10062 .. tmp10063;
          tmp10059 = tmp10061
        @ f
        };                          %% tmp10049:set(1000.0,null),    
      %%---------------
      tmp10064 = (s, s);            %% s    
      s in tmp10049 :: 1000.0 
    @ tmp10064
    };                          %% tmp10048:set(1000.0,null),    
  %%---------------
  p in tmp10048 :: 1000.0 ;
  tmp10065 = p.1;               %% tmp10065:set(5.0,5),    
  tmp10067 == 1;                %% tmp10067:1..1,    
  tmp10068 == 3;                %% tmp10068:3..3,    
  tmp10066 = (tmp10067, tmp10068); %% tmp10066={1=tmp10067, 2=tmp10068},    
  tmp10070 == 2;                %% tmp10070:2..2,    
  tmp10071 == 5;                %% tmp10071:5..5,    
  tmp10069 = (tmp10070, tmp10071); %% tmp10069={1=tmp10070, 2=tmp10071},    
  tmp10073 == 3;                %% tmp10073:3..3,    
  tmp10074 == 7;                %% tmp10074:7..7,    
  tmp10072 = (tmp10073, tmp10074); %% tmp10072={1=tmp10073, 2=tmp10074},    
  tmp10076 == 4;                %% tmp10076:4..4,    
  tmp10077 == 6;                %% tmp10077:6..6,    
  tmp10075 = (tmp10076, tmp10077); %% tmp10075={1=tmp10076, 2=tmp10077},    
  tmp10079 == 5;                %% tmp10079:5..5,    
  tmp10080 == 9;                %% tmp10080:9..9,    
  tmp10078 = (tmp10079, tmp10080); %% tmp10078={1=tmp10079, 2=tmp10080},    
  tmp10081 = { tmp10072, tmp10066, tmp10069, tmp10078, tmp10075 }; %% tmp10081=tmp10065,:set(5.0,5),    
  tmp10065 = tmp10081;
  tmp10082 = p.2                %% tmp10082    
@ tmp10082
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.flatpred.FlatCard.nextEvaluation(FlatCard.java:83)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:147 took 0.663 sec
Testcase: animate_sequences.tex:148 took 0.668 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp10194 = {
      tmp10195 = {
          tmp10198 == 0;
          tmp10197 = tmp10198 .. _;
          tmp10199 = _ .. _;
          tmp10196 = tmp10197 -|-> tmp10199;
          tmp10202 == 0;
          tmp10201 = tmp10202 .. _;
          tmp10203 = _ .. _;
          tmp10204 = tmp10201 x tmp10203;
          tmp10200 = P tmp10204;
          f in tmp10200;
          tmp10205 = {
              x in f;
              tmp10206 = x.1
            @ tmp10206
            };
          tmp10208 == 1;
          # f = tmp10209;
          tmp10207 = tmp10208 .. tmp10209;
          tmp10205 = tmp10207
        @ f
        };                          %% tmp10195:set(1000.0,null),    
      %%---------------
      tmp10210 = (s, s);            %% s    
      s in tmp10195 :: 1000.0 
    @ tmp10210
    };                          %% tmp10194:set(1000.0,null),    
  %%---------------
  p in tmp10194 :: 1000.0 ;
  tmp10211 = p.1;               %% tmp10211:set(2.0,2),    
  tmp10213 == 1;                %% tmp10213:1..1,    
  tmp10214 == 3;                %% tmp10214:3..3,    
  tmp10212 = (tmp10213, tmp10214); %% tmp10212={1=tmp10213, 2=tmp10214},    
  tmp10216 == 2;                %% tmp10216:2..2,    
  tmp10217 == 5;                %% tmp10217:5..5,    
  tmp10215 = (tmp10216, tmp10217); %% tmp10215={1=tmp10216, 2=tmp10217},    
  tmp10218 = { tmp10215, tmp10212 }; %% tmp10218=tmp10211,:set(2.0,2),    
  tmp10211 = tmp10218;
  tmp10219 = p.2                %% tmp10219    
@ tmp10219
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp10194 = {
      tmp10195 = {
          tmp10198 == 0;
          tmp10197 = tmp10198 .. _;
          tmp10199 = _ .. _;
          tmp10196 = tmp10197 -|-> tmp10199;
          tmp10202 == 0;
          tmp10201 = tmp10202 .. _;
          tmp10203 = _ .. _;
          tmp10204 = tmp10201 x tmp10203;
          tmp10200 = P tmp10204;
          f in tmp10200;
          tmp10205 = {
              x in f;
              tmp10206 = x.1
            @ tmp10206
            };
          tmp10208 == 1;
          # f = tmp10209;
          tmp10207 = tmp10208 .. tmp10209;
          tmp10205 = tmp10207
        @ f
        };                          %% tmp10195:set(1000.0,null),    
      %%---------------
      tmp10210 = (s, s);            %% s    
      s in tmp10195 :: 1000.0 
    @ tmp10210
    };                          %% tmp10194:set(1000.0,null),    
  %%---------------
  p in tmp10194 :: 1000.0 ;
  tmp10211 = p.1;               %% tmp10211:set(2.0,2),    
  tmp10213 == 1;                %% tmp10213:1..1,    
  tmp10214 == 3;                %% tmp10214:3..3,    
  tmp10212 = (tmp10213, tmp10214); %% tmp10212={1=tmp10213, 2=tmp10214},    
  tmp10216 == 2;                %% tmp10216:2..2,    
  tmp10217 == 5;                %% tmp10217:5..5,    
  tmp10215 = (tmp10216, tmp10217); %% tmp10215={1=tmp10216, 2=tmp10217},    
  tmp10218 = { tmp10215, tmp10212 }; %% tmp10218=tmp10211,:set(2.0,2),    
  tmp10211 = tmp10218;
  tmp10219 = p.2                %% tmp10219    
@ tmp10219
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.flatpred.FlatCard.nextEvaluation(FlatCard.java:83)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:151 took 0.842 sec
Testcase: animate_sequences.tex:152 took 0.651 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp10339 = {
      tmp10340 = {
          tmp10343 == 0;
          tmp10342 = tmp10343 .. _;
          tmp10344 = _ .. _;
          tmp10341 = tmp10342 -|-> tmp10344;
          tmp10347 == 0;
          tmp10346 = tmp10347 .. _;
          tmp10348 = _ .. _;
          tmp10349 = tmp10346 x tmp10348;
          tmp10345 = P tmp10349;
          f in tmp10345;
          tmp10350 = {
              x in f;
              tmp10351 = x.1
            @ tmp10351
            };
          tmp10353 == 1;
          # f = tmp10354;
          tmp10352 = tmp10353 .. tmp10354;
          tmp10350 = tmp10352
        @ f
        };                          %% tmp10340:set(1000.0,null),    
      %%---------------
      tmp10355 = (s, s);            %% s    
      s in tmp10340 :: 1000.0 
    @ tmp10355
    };                          %% tmp10339:set(1000.0,null),    
  %%---------------
  p in tmp10339 :: 1000.0 ;
  tmp10356 = p.1;               %% tmp10356:set(2.0,2),    
  tmp10358 == 1;                %% tmp10358:1..1,    
  tmp10359 == 3;                %% tmp10359:3..3,    
  tmp10357 = (tmp10358, tmp10359); %% tmp10357={1=tmp10358, 2=tmp10359},    
  tmp10361 == 2;                %% tmp10361:2..2,    
  tmp10362 == 5;                %% tmp10362:5..5,    
  tmp10360 = (tmp10361, tmp10362); %% tmp10360={1=tmp10361, 2=tmp10362},    
  tmp10363 = { tmp10360, tmp10357 }; %% tmp10363=tmp10356,:set(2.0,2),    
  tmp10356 = tmp10363;
  tmp10364 = p.2                %% tmp10364    
@ tmp10364
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp10339 = {
      tmp10340 = {
          tmp10343 == 0;
          tmp10342 = tmp10343 .. _;
          tmp10344 = _ .. _;
          tmp10341 = tmp10342 -|-> tmp10344;
          tmp10347 == 0;
          tmp10346 = tmp10347 .. _;
          tmp10348 = _ .. _;
          tmp10349 = tmp10346 x tmp10348;
          tmp10345 = P tmp10349;
          f in tmp10345;
          tmp10350 = {
              x in f;
              tmp10351 = x.1
            @ tmp10351
            };
          tmp10353 == 1;
          # f = tmp10354;
          tmp10352 = tmp10353 .. tmp10354;
          tmp10350 = tmp10352
        @ f
        };                          %% tmp10340:set(1000.0,null),    
      %%---------------
      tmp10355 = (s, s);            %% s    
      s in tmp10340 :: 1000.0 
    @ tmp10355
    };                          %% tmp10339:set(1000.0,null),    
  %%---------------
  p in tmp10339 :: 1000.0 ;
  tmp10356 = p.1;               %% tmp10356:set(2.0,2),    
  tmp10358 == 1;                %% tmp10358:1..1,    
  tmp10359 == 3;                %% tmp10359:3..3,    
  tmp10357 = (tmp10358, tmp10359); %% tmp10357={1=tmp10358, 2=tmp10359},    
  tmp10361 == 2;                %% tmp10361:2..2,    
  tmp10362 == 5;                %% tmp10362:5..5,    
  tmp10360 = (tmp10361, tmp10362); %% tmp10360={1=tmp10361, 2=tmp10362},    
  tmp10363 = { tmp10360, tmp10357 }; %% tmp10363=tmp10356,:set(2.0,2),    
  tmp10356 = tmp10363;
  tmp10364 = p.2                %% tmp10364    
@ tmp10364
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.flatpred.FlatCard.nextEvaluation(FlatCard.java:83)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:153 took 0.749 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp10411 = {
      tmp10412 = {
          tmp10415 == 0;
          tmp10414 = tmp10415 .. _;
          tmp10416 = _ .. _;
          tmp10413 = tmp10414 -|-> tmp10416;
          tmp10419 == 0;
          tmp10418 = tmp10419 .. _;
          tmp10420 = _ .. _;
          tmp10421 = tmp10418 x tmp10420;
          tmp10417 = P tmp10421;
          f in tmp10417;
          tmp10422 = {
              x in f;
              tmp10423 = x.1
            @ tmp10423
            };
          tmp10425 == 1;
          # f = tmp10426;
          tmp10424 = tmp10425 .. tmp10426;
          tmp10422 = tmp10424
        @ f
        };                          %% tmp10412:set(1000.0,null),    
      %%---------------
      tmp10427 = (s, s);            %% s    
      s in tmp10412 :: 1000.0 
    @ tmp10427
    };                          %% tmp10411:set(1000.0,null),    
  %%---------------
  p in tmp10411 :: 1000.0 ;
  tmp10428 = p.1;               %% tmp10428:set(2.0,2),    
  tmp10430 == 1;                %% tmp10430:1..1,    
  tmp10431 == 3;                %% tmp10431:3..3,    
  tmp10429 = (tmp10430, tmp10431); %% tmp10429={1=tmp10430, 2=tmp10431},    
  tmp10433 == 2;                %% tmp10433:2..2,    
  tmp10434 == 5;                %% tmp10434:5..5,    
  tmp10432 = (tmp10433, tmp10434); %% tmp10432={1=tmp10433, 2=tmp10434},    
  tmp10435 = { tmp10432, tmp10429 }; %% tmp10435=tmp10428,:set(2.0,2),    
  tmp10428 = tmp10435;
  tmp10436 = p.2                %% tmp10436    
@ tmp10436
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp10411 = {
      tmp10412 = {
          tmp10415 == 0;
          tmp10414 = tmp10415 .. _;
          tmp10416 = _ .. _;
          tmp10413 = tmp10414 -|-> tmp10416;
          tmp10419 == 0;
          tmp10418 = tmp10419 .. _;
          tmp10420 = _ .. _;
          tmp10421 = tmp10418 x tmp10420;
          tmp10417 = P tmp10421;
          f in tmp10417;
          tmp10422 = {
              x in f;
              tmp10423 = x.1
            @ tmp10423
            };
          tmp10425 == 1;
          # f = tmp10426;
          tmp10424 = tmp10425 .. tmp10426;
          tmp10422 = tmp10424
        @ f
        };                          %% tmp10412:set(1000.0,null),    
      %%---------------
      tmp10427 = (s, s);            %% s    
      s in tmp10412 :: 1000.0 
    @ tmp10427
    };                          %% tmp10411:set(1000.0,null),    
  %%---------------
  p in tmp10411 :: 1000.0 ;
  tmp10428 = p.1;               %% tmp10428:set(2.0,2),    
  tmp10430 == 1;                %% tmp10430:1..1,    
  tmp10431 == 3;                %% tmp10431:3..3,    
  tmp10429 = (tmp10430, tmp10431); %% tmp10429={1=tmp10430, 2=tmp10431},    
  tmp10433 == 2;                %% tmp10433:2..2,    
  tmp10434 == 5;                %% tmp10434:5..5,    
  tmp10432 = (tmp10433, tmp10434); %% tmp10432={1=tmp10433, 2=tmp10434},    
  tmp10435 = { tmp10432, tmp10429 }; %% tmp10435=tmp10428,:set(2.0,2),    
  tmp10428 = tmp10435;
  tmp10436 = p.2                %% tmp10436    
@ tmp10436
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.flatpred.FlatCard.nextEvaluation(FlatCard.java:83)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

Testcase: animate_sequences.tex:154 took 0.711 sec
	Caused an ERROR
Mu expression has no solutions: (mu
  tmp10494 = {
      tmp10495 = {
          tmp10498 == 0;
          tmp10497 = tmp10498 .. _;
          tmp10499 = _ .. _;
          tmp10496 = tmp10497 -|-> tmp10499;
          tmp10502 == 0;
          tmp10501 = tmp10502 .. _;
          tmp10503 = _ .. _;
          tmp10504 = tmp10501 x tmp10503;
          tmp10500 = P tmp10504;
          f in tmp10500;
          tmp10505 = {
              x in f;
              tmp10506 = x.1
            @ tmp10506
            };
          tmp10508 == 1;
          # f = tmp10509;
          tmp10507 = tmp10508 .. tmp10509;
          tmp10505 = tmp10507
        @ f
        };                          %% tmp10495:set(1000.0,null),    
      %%---------------
      tmp10510 = (s, s);            %% s    
      s in tmp10495 :: 1000.0 
    @ tmp10510
    };                          %% tmp10494:set(1000.0,null),    
  %%---------------
  p in tmp10494 :: 1000.0 ;
  tmp10511 = p.1;               %% tmp10511:set(5.0,5),    
  tmp10513 == 1;                %% tmp10513:1..1,    
  tmp10514 == 3;                %% tmp10514:3..3,    
  tmp10512 = (tmp10513, tmp10514); %% tmp10512={1=tmp10513, 2=tmp10514},    
  tmp10516 == 2;                %% tmp10516:2..2,    
  tmp10517 == 5;                %% tmp10517:5..5,    
  tmp10515 = (tmp10516, tmp10517); %% tmp10515={1=tmp10516, 2=tmp10517},    
  tmp10519 == 3;                %% tmp10519:3..3,    
  tmp10520 == 7;                %% tmp10520:7..7,    
  tmp10518 = (tmp10519, tmp10520); %% tmp10518={1=tmp10519, 2=tmp10520},    
  tmp10522 == 4;                %% tmp10522:4..4,    
  tmp10523 == 6;                %% tmp10523:6..6,    
  tmp10521 = (tmp10522, tmp10523); %% tmp10521={1=tmp10522, 2=tmp10523},    
  tmp10525 == 5;                %% tmp10525:5..5,    
  tmp10526 == 9;                %% tmp10526:9..9,    
  tmp10524 = (tmp10525, tmp10526); %% tmp10524={1=tmp10525, 2=tmp10526},    
  tmp10527 = { tmp10515, tmp10518, tmp10524, tmp10521, tmp10512 }; %% tmp10527=tmp10511,:set(5.0,5),    
  tmp10511 = tmp10527;
  tmp10528 = p.2                %% tmp10528    
@ tmp10528
)
net.sourceforge.czt.animation.eval.UndefException: Mu expression has no solutions: (mu
  tmp10494 = {
      tmp10495 = {
          tmp10498 == 0;
          tmp10497 = tmp10498 .. _;
          tmp10499 = _ .. _;
          tmp10496 = tmp10497 -|-> tmp10499;
          tmp10502 == 0;
          tmp10501 = tmp10502 .. _;
          tmp10503 = _ .. _;
          tmp10504 = tmp10501 x tmp10503;
          tmp10500 = P tmp10504;
          f in tmp10500;
          tmp10505 = {
              x in f;
              tmp10506 = x.1
            @ tmp10506
            };
          tmp10508 == 1;
          # f = tmp10509;
          tmp10507 = tmp10508 .. tmp10509;
          tmp10505 = tmp10507
        @ f
        };                          %% tmp10495:set(1000.0,null),    
      %%---------------
      tmp10510 = (s, s);            %% s    
      s in tmp10495 :: 1000.0 
    @ tmp10510
    };                          %% tmp10494:set(1000.0,null),    
  %%---------------
  p in tmp10494 :: 1000.0 ;
  tmp10511 = p.1;               %% tmp10511:set(5.0,5),    
  tmp10513 == 1;                %% tmp10513:1..1,    
  tmp10514 == 3;                %% tmp10514:3..3,    
  tmp10512 = (tmp10513, tmp10514); %% tmp10512={1=tmp10513, 2=tmp10514},    
  tmp10516 == 2;                %% tmp10516:2..2,    
  tmp10517 == 5;                %% tmp10517:5..5,    
  tmp10515 = (tmp10516, tmp10517); %% tmp10515={1=tmp10516, 2=tmp10517},    
  tmp10519 == 3;                %% tmp10519:3..3,    
  tmp10520 == 7;                %% tmp10520:7..7,    
  tmp10518 = (tmp10519, tmp10520); %% tmp10518={1=tmp10519, 2=tmp10520},    
  tmp10522 == 4;                %% tmp10522:4..4,    
  tmp10523 == 6;                %% tmp10523:6..6,    
  tmp10521 = (tmp10522, tmp10523); %% tmp10521={1=tmp10522, 2=tmp10523},    
  tmp10525 == 5;                %% tmp10525:5..5,    
  tmp10526 == 9;                %% tmp10526:9..9,    
  tmp10524 = (tmp10525, tmp10526); %% tmp10524={1=tmp10525, 2=tmp10526},    
  tmp10527 = { tmp10515, tmp10518, tmp10524, tmp10521, tmp10512 }; %% tmp10527=tmp10511,:set(5.0,5),    
  tmp10511 = tmp10527;
  tmp10528 = p.2                %% tmp10528    
@ tmp10528
)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMu.nextEvaluation(FlatMu.java:144)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.access$1(DefaultEvalSet.java:237)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet$EvalSetIterator.hasNext(DefaultEvalSet.java:310)
	at net.sourceforge.czt.animation.eval.flatpred.FlatMember.nextEvaluation(FlatMember.java:278)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.flatpred.FlatCard.nextEvaluation(FlatCard.java:83)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.result.SetComp.nextMember(SetComp.java:152)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.insertMember(DefaultEvalSet.java:240)
	at net.sourceforge.czt.animation.eval.result.DefaultEvalSet.size(DefaultEvalSet.java:125)
	at net.sourceforge.czt.animation.eval.ExprComparator.compare(ExprComparator.java:209)
	at net.sourceforge.czt.animation.eval.flatpred.FlatEquals.nextEvaluation(FlatEquals.java:91)
	at net.sourceforge.czt.animation.eval.flatpred.FlatPredList.nextEvaluation(FlatPredList.java:607)
	at net.sourceforge.czt.animation.eval.ZLive.evaluate(ZLive.java:446)
	at net.sourceforge.czt.animation.eval.ZLive.evalTerm(ZLive.java:332)
	at net.sourceforge.czt.animation.eval.ZLive.evalPred(ZLive.java:299)
	at net.sourceforge.czt.animation.eval.EvalTest$PredTest.runTest(EvalTest.java:134)

