<project name="Parser" default="install">
  <property name="czt.home" location="../"/>
  <property file="${czt.home}/czt.properties"/>
  <property name="czt.lib" location="${czt.home}/${jar.dir}"/>
  <property name="parser.jar.dir" location="${czt.home}/${jar.dir}"/>
  <property name="jar.file" location="${parser.jar.dir}/${parser.jar.file}"/>
  <property name="src.dir" location="src"/>
  <property name="templates.dir" location="templates"/>
  <property name="build.dir" location="build"/>
  <property name="build.class.dir" location="${build.dir}/classes"/>
  <property name="build.src.dir" location="${build.dir}/src"/>
  <property name="api.dir" location="doc/api"/>
  <property name="src.oz.dir" location="${src.dir}/net/sourceforge/czt/parser/oz"/>
  <property name="src.tcoz.dir" location="${src.dir}/net/sourceforge/czt/parser/tcoz"/>
  <property name="build.src.z.dir" location="${build.src.dir}/net/sourceforge/czt/parser/z"/>
  <property name="build.src.oz.dir" location="${build.src.dir}/net/sourceforge/czt/parser/oz"/>
  <property name="build.src.tcoz.dir" location="${build.src.dir}/net/sourceforge/czt/parser/tcoz"/>
  
  <taskdef classname="JFlex.anttask.JFlexTask" name="jflex"/>

  <path id="classpath">
    <pathelement path="${jwsdp.classpath}"/>
    <fileset dir="${czt.lib}">
      <include name="${corejava.base.jar.file}"/>
      <include name="${corejava.core.jar.file}"/>
      <include name="${corejava.oz.jar.file}"/>
      <include name="${corejava.tcoz.jar.file}"/>
      <include name="${corejava.jaxb.jar.file}"/>
    </fileset>
    <pathelement path="${javacup.home}"/>
    <pathelement path="${java.class.path}"/>
    <pathelement path="${ant.home}/lib/clover.jar"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.src.dir}"/>
    <mkdir dir="${build.class.dir}"/>
  </target>

  <target name="-set-javacup-task">
    <taskdef classname="ant.JavaCupTask" name="java_cup"
      classpath="${czt.home}/${jar.dir}/${java_cup.task.jar.file}"/>
  </target>

  <target name="all" depends="install, doc"
    description="Builds the jar files and the api documentation."/>

  <target name="install" depends="compile"
    description="Builds and installs the jar file in '../lib'.">
    <mkdir dir="${parser.jar.dir}"/>
    <jar jarfile="${jar.file}">
      <fileset dir="${build.class.dir}"/>
      <fileset dir=".">
        <include name="lib/*.tex"/>
        <include name="lib/*.xml"/>
      </fileset>
    </jar>
  </target>

  <target name="Unicode2Latex-cup" depends="init">
    <xslt
      in="templates/Unicode2Latex.xml"
      out="${build.src.dir}/net/sourceforge/czt/print/z/Unicode2Latex.cup"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="Unicode2Latex"/>
      <param name="package" expression="net.sourceforge.czt.print.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="UnicodeToLatex" depends="Unicode2Latex-cup, -set-javacup-task">
    <java_cup
      srcDir="${build.src.dir}/net/sourceforge/czt/print/z"
      destDir="${build.src.dir}/net/sourceforge/czt/print/z"
      inputFile="Unicode2Latex.cup"
      parserFile="Unicode2Latex"
      symbolFile="Sym"
      classpath="${javacup.home}">
    </java_cup>
  </target>

  <target name="compile" depends="init, generate-src, 
      UnicodeToLatex"
          description="Compiles the sources.">
    <javac source="1.4" srcdir="${src.dir}:${build.src.dir}"
           destdir="${build.class.dir}"
           debug="${debug}" debuglevel="${debuglevel}" optimize="${optimize}">
      <classpath refid="classpath"/>
    </javac>
  </target>

  <target name="generate-src"
    depends="generate-z-src, generate-oz-src, generate-tcoz-src, generate-print-src"/>

  <target name="generate-print-src"
    depends="print-scanner"/>

  <target name="generate-z-src"
    depends="generate-z-parser, generate-z-scanner"/>

  <target name="generate-oz-src"
    depends="generate-oz-parser, generate-oz-scanner"/>

  <target name="generate-tcoz-src"
     depends="generate-tcoz-parser, generate-tcoz-scanner"/>

  <target name="generate-z-parser"
    depends="z-parser, z-lparser, z-uparser, z-parserutils"/>

  <target name="generate-z-scanner"
    depends="z-l2u, z-ltu, z-uscanner, z-lscanner, z-sscanner"/>

  <target name="generate-oz-parser"
    depends="oz-parser, oz-lparser, oz-uparser, oz-parserutils"/>

  <target name="generate-oz-scanner"
    depends="oz-l2u, oz-ltu, oz-uscanner, oz-lscanner, oz-sscanner"/>

  <target name="generate-tcoz-parser"
    depends="tcoz-parser,tcoz-lparser, tcoz-uparser, tcoz-parserutils"/>

  <target name="generate-tcoz-scanner"
    depends="tcoz-l2u, tcoz-ltu, tcoz-uscanner, tcoz-lscanner, tcoz-sscanner"/>
  
  <target name="print-scanner">
    <xslt
      in="templates/ContextFreeScanner.xml"
      out="${build.src.dir}/net/sourceforge/czt/print/z/ContextFreeScanner.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="ContextFreeScanner"/>
      <param name="package" expression="net.sourceforge.czt.print.z"/>
      <param name="add" expression="{print}"/>
    </xslt>
    <jflex
      file="${build.src.dir}/net/sourceforge/czt/print/z/ContextFreeScanner.jflex"
      destdir="${build.src.dir}"/>
    <xslt
      in="templates/SectHeadScanner.xml"
      out="${build.src.dir}/net/sourceforge/czt/print/z/SectHeadScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="SectHeadScanner"/>
      <param name="package" expression="net.sourceforge.czt.print.z"/>
      <param name="add" expression="{z}{print}"/>
    </xslt>
  </target>

  <target name="z-lparser" depends="init">
    <xslt
      in="templates/LatexParser.xml"
      out="${build.src.z.dir}/LatexParser.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexParser"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="z-uparser" depends="init">
    <xslt
      in="templates/UnicodeParser.xml"
      out="${build.src.z.dir}/UnicodeParser.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="UnicodeParser"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="oz-lparser" depends="init">
    <xslt
      in="templates/LatexParser.xml"
      out="${build.src.oz.dir}/LatexParser.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexParser"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
  </target>

  <target name="oz-uparser" depends="init">
    <xslt
      in="templates/UnicodeParser.xml"
      out="${build.src.oz.dir}/UnicodeParser.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="UnicodeParser"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <!-- Modifications below for TCOZ -->
  <target name="tcoz-lparser" depends="init">
    <xslt
      in="templates/LatexParser.xml"
      out="${build.src.tcoz.dir}/LatexParser.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexParser"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{tcoz}"/>
    </xslt>
  </target>

  <target name="tcoz-uparser" depends="init">
    <xslt
      in="templates/UnicodeParser.xml"
      out="${build.src.tcoz.dir}/UnicodeParser.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="UnicodeParser"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="z-l2u">
    <xslt
      in="templates/Latex2Unicode.xml"
      out="${build.src.dir}/net/sourceforge/czt/parser/z/Latex2Unicode.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="Latex2Unicode"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
    <jflex
      file="${build.src.dir}/net/sourceforge/czt/parser/z/Latex2Unicode.jflex"
      destdir="${build.src.dir}"/>
  </target>

  <target name="z-ltu">
    <xslt
      in="templates/LatexToUnicode.xml"
      out="${build.src.dir}/net/sourceforge/czt/parser/z/LatexToUnicode.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexToUnicode"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="z-lscanner" depends="init">
    <xslt
      in="templates/LatexScanner.xml"
      out="${build.src.z.dir}/LatexScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="oz-l2u">
    <xslt
      in="templates/Latex2Unicode.xml"
      out="${build.src.dir}/net/sourceforge/czt/parser/oz/Latex2Unicode.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="Latex2Unicode"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
    <jflex
      file="${build.src.dir}/net/sourceforge/czt/parser/oz/Latex2Unicode.jflex"
      destdir="${build.src.dir}"/>
  </target>

  <target name="oz-ltu">
    <xslt
      in="templates/LatexToUnicode.xml"
      out="${build.src.dir}/net/sourceforge/czt/parser/oz/LatexToUnicode.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexToUnicode"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
  </target>

  <target name="oz-lscanner" depends="init">
    <xslt
      in="templates/LatexScanner.xml"
      out="${build.src.oz.dir}/LatexScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
  </target>

  <!-- Modifications below for TCOZ -->
  <target name="tcoz-l2u">
    <xslt
      in="templates/Latex2Unicode.xml"
      out="${build.src.dir}/net/sourceforge/czt/parser/tcoz/Latex2Unicode.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="Latex2Unicode"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{oz},{tcoz}"/>
    </xslt>
    <jflex
      file="${build.src.dir}/net/sourceforge/czt/parser/tcoz/Latex2Unicode.jflex"
      destdir="${build.src.dir}"/>
  </target>

  <target name="tcoz-ltu">
    <xslt
      in="templates/LatexToUnicode.xml"
      out="${build.src.dir}/net/sourceforge/czt/parser/tcoz/LatexToUnicode.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexToUnicode"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{tcoz}"/>
    </xslt>
  </target>

  <target name="tcoz-lscanner" depends="init">
    <xslt
      in="templates/LatexScanner.xml"
      out="${build.src.tcoz.dir}/LatexScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="LatexScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{tcoz}"/>
    </xslt>
  </target>
  
  <target name="z-parserutils" depends="init">
    <xslt
      in="templates/ParseUtils.xml"
      out="${build.src.z.dir}/ParseUtils.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="ParseUtils"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="oz-parserutils" depends="init">
    <xslt
      in="templates/ParseUtils.xml"
      out="${build.src.oz.dir}/ParseUtils.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="ParseUtils"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
  </target>

  <!-- Modifications below for TCOZ -->
  <target name="tcoz-parserutils" depends="init">
      <xslt
        in="templates/ParseUtils.xml"
        out="${build.src.tcoz.dir}/ParseUtils.java"
        style="${czt.home}/devtools/template2text.xsl">
        <param name="class" expression="ParseUtils"/>
        <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
        <param name="add" expression="{tcoz}"/>
      </xslt>
    </target>

  <target name="z-parser" depends="z-parser-cup, -set-javacup-task">
    <java_cup
      srcDir="${build.src.z.dir}/"
      destDir="${build.src.z.dir}/"
      inputFile="Parser.cup"
      parserFile="Parser"
      symbolFile="Sym"
      classpath="${javacup.home}">
    </java_cup>
  </target>

  <target name="z-parser-cup" depends="init">
    <xslt
      in="templates/Parser.xml"
      out="${build.src.z.dir}/Parser.cup"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="Parser"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <target name="oz-parser" depends="oz-parser-cup, -set-javacup-task">
    <java_cup
      srcDir="${build.src.oz.dir}/"
      destDir="${build.src.oz.dir}/"
      inputFile="Parser.cup"
      parserFile="Parser"
      symbolFile="Sym"
      classpath="${javacup.home}">
    </java_cup>
  </target>

  <target name="oz-parser-cup" depends="init">
    <xslt
      in="templates/Parser.xml"
      out="${build.src.oz.dir}/Parser.cup"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="Parser"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz},{ozz}"/>
    </xslt>
  </target>

  <!-- Modifications below for TCOZ -->
  <target name="tcoz-parser" depends="tcoz-parser-cup, -set-javacup-task">
      <java_cup
        srcDir="${build.src.tcoz.dir}/"
        destDir="${build.src.tcoz.dir}/"
        inputFile="Parser.cup"
        parserFile="Parser"
        symbolFile="Sym"
        classpath="${javacup.home}">
      </java_cup>
    </target>
  
    <target name="tcoz-parser-cup" depends="init">
      <xslt
        in="templates/Parser.xml"
        out="${build.src.tcoz.dir}/Parser.cup"
        style="${czt.home}/devtools/template2text.xsl">
        <param name="class" expression="Parser"/>
        <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
        <param name="add" expression="{oz},{tcoz}"/>
      </xslt>
    </target>

  <target name="z-uscanner"
    description="Create the unicode scanner for the Z parser">
  <!-- Create the unicode scanner for the Z parser. -->
    <xslt
      in="templates/UnicodeScanner.xml"
      out="${build.src.z.dir}/UnicodeScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="UnicodeScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
    <xslt
      in="templates/OperatorScanner.xml"
      out="${build.src.z.dir}/OperatorScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="OperatorScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
    <xslt
      in="templates/KeywordScanner.xml"
      out="${build.src.z.dir}/KeywordScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="KeywordScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
    <xslt
      in="templates/ContextFreeScanner.xml"
      out="${build.src.z.dir}/ContextFreeScanner.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="ContextFreeScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
    <jflex file="${build.src.z.dir}/ContextFreeScanner.jflex"
      destdir="${build.src.dir}"
      skipMinimization="yes"
    />
  </target>

  <!-- Create the smart scanner for the Z parser. -->
  <target name="z-sscanner">
    <xslt
      in="templates/SmartScanner.xml"
      out="${build.src.z.dir}/SmartScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="SmartScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.z"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <!-- Create the unicode scanner for the object Z parser. -->
  <target name="oz-uscanner">
    <xslt
      in="templates/UnicodeScanner.xml"
      out="${build.src.oz.dir}/UnicodeScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="UnicodeScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
    <xslt
      in="templates/OperatorScanner.xml"
      out="${build.src.oz.dir}/OperatorScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="OperatorScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
    <xslt
      in="templates/KeywordScanner.xml"
      out="${build.src.oz.dir}/KeywordScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="KeywordScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
    <xslt
      in="templates/ContextFreeScanner.xml"
      out="${build.src.oz.dir}/ContextFreeScanner.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="ContextFreeScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
    <jflex file="${build.src.oz.dir}/ContextFreeScanner.jflex"
      destdir="${build.src.dir}"
      skipMinimization="yes"
    />
  </target>

  <!-- Create the smart scanner for the Object Z parser. -->
  <target name="oz-sscanner">
    <xslt
      in="templates/SmartScanner.xml"
      out="${build.src.oz.dir}/SmartScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="SmartScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.oz"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>

  <!-- Modifications below for TCOZ -->
  <target name="tcoz-uscanner"
    description="Create the unicode scanner for the TCOZ parser">
    <xslt
      in="templates/UnicodeScanner.xml"
      out="${build.src.tcoz.dir}/UnicodeScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="UnicodeScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{tcoz}"/>
    </xslt>
    <xslt
      in="templates/OperatorScanner.xml"
      out="${build.src.tcoz.dir}/OperatorScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="OperatorScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{oz}"/>
    </xslt>
    <xslt
      in="templates/KeywordScanner.xml"
      out="${build.src.tcoz.dir}/KeywordScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="KeywordScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{oz},{tcoz}"/>
    </xslt>
    <xslt
      in="templates/ContextFreeScanner.xml"
      out="${build.src.tcoz.dir}/ContextFreeScanner.jflex"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="ContextFreeScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{oz}{tcoz}"/>
    </xslt>
    <jflex file="${build.src.tcoz.dir}/ContextFreeScanner.jflex"
      destdir="${build.src.dir}"
      skipMinimization="yes"
    />
  </target>

  <target name="tcoz-sscanner"
    description="Create the smart scanner for the TCOZ parser">
    <xslt
      in="templates/SmartScanner.xml"
      out="${build.src.tcoz.dir}/SmartScanner.java"
      style="${czt.home}/devtools/template2text.xsl">
      <param name="class" expression="SmartScanner"/>
      <param name="package" expression="net.sourceforge.czt.parser.tcoz"/>
      <param name="add" expression="{z}"/>
    </xslt>
  </target>
    
  <target name="printclasspath">
      <pathconvert targetos="unix" property="tmp.clspath"
            refid="classpath">
    </pathconvert>
    <echo message="CLASSPATH = ${tmp.clspath}"/>
  </target>

  <target name="run" depends="install"
    description="Runs the GUI for the object Z parser.">
    <java classname="net.sourceforge.czt.parser.oz.Main" fork="true">
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${build.class.dir}"/>
      </classpath>
    </java>
  </target>


  <target name="ozed2zml" depends="install" description="Translates an Object Z specification written in latex markup into ZML">
    <input message="input file: " addproperty="in"/>
    <input message="output file: " addproperty="out"/>
    <java classname="net.sourceforge.czt.parser.oz.LatexParser" fork="true">
      <arg line="-in ${in} -out ${out}"/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${jar.file}"/>
        <pathelement location="${bsh.jar}"/>
      </classpath>
    </java>
  </target>

  <!-- Modifications below for TCOZ -->
  <target name="tcozed2zml" depends="install" description="Translates an TCOZ specification written in latex markup into ZML">
      <input message="input file: " addproperty="in"/>
      <input message="output file: " addproperty="out"/>
      <java classname="net.sourceforge.czt.parser.tcoz.LatexParser" fork="true">
        <arg line="-in ${in} -out ${out}"/>
        <classpath>
          <path refid="classpath"/>
          <pathelement location="${jar.file}"/>
          <pathelement location="${bsh.jar}"/>
        </classpath>
      </java>
  </target>
  
  <target name="scan" depends="install" if="file"
    description="Scans an unicode file (provide a file name by setting property 'file' using the -D option).">
    <java classname="net.sourceforge.czt.print.z.ContextFreeScanner" fork="true">
      <arg value="${file}"/>
      <jvmarg value="-Dczt.home=.."/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${jar.file}"/>
      </classpath>
    </java>
  </target>

  <target name="scanLatex" depends="install" if="file"
    description="Scans a latex file (provide a file name by setting property 'file' using the -D option).">
    <java classname="net.sourceforge.czt.parser.z.LatexScanner" fork="true">
      <arg value="${file}"/>
      <jvmarg value="-Dczt.home=.."/>
      <classpath>
        <path refid="classpath"/>
        <pathelement location="${jar.file}"/>
      </classpath>
    </java>
  </target>

  <target name="doc" depends="api"
    description="Builds all the documentation (currently just the API documentation)."/>

  <target name="api"
    depends="compile"
    description="Builds the API documentation.">
    <mkdir dir="${api.dir}"/>
    <javadoc
      source="1.4"
      destdir="${api.dir}"
      private="true">
      <packageset dir="${src.dir}"/>
      <packageset dir="${build.src.dir}"/>
      <tag name="czt.todo" description="To do:"/>
      <classpath refid="classpath"/>
    </javadoc>
  </target>

  <target name="test" depends="install"
    description="Builds and runs the tests.  A browsable version of the test results is created in tests/build/report/index.html.">
    <ant dir="tests"/>
    <ant dir="tests" target="report"/>
  </target>

  <target name="with.clover" description="Initializes clover.">
    <mkdir dir="clover-db"/>
    <taskdef resource="clovertasks"/>
    <clover-setup initString="clover-db/coverage.db">
      <files excludes="**/Parser.java"/>
    </clover-setup>
  </target>

  <target name="report" depends="with.clover"
    description="Creates a clover report.">
    <clover-report>
      <current outfile="clover_html" title="CZT Parser Clover Report">
        <format type="html"/> 
      </current>         
    </clover-report>
  </target>

  <target name="checkstyle"
    description="Checks the Java sources whether they conform to the style guidelines for CZT.">
    <taskdef resource="checkstyletask.properties"
      classpath="${checkstyle.jar}"/>
    <checkstyle config="${czt.home}/devtools/checkstyle.xml">
      <classpath refid="classpath"/>
      <fileset dir="${src.dir}"/>
      <fileset dir="tests/src"/>
      <formatter type="plain"/>
    </checkstyle>
  </target>

  <target name="clean"
          description="Cleans up (this does not delete the jar file in '../lib').">
    <delete dir="${build.dir}"/>
    <delete dir="${api.dir}"/>
    <ant dir="tests" target="clean"/>
  </target>
</project>
