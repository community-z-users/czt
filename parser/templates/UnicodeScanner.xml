<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2003, 2004 Petra Malik
     This file is part of the czt project.
     
     The czt project contains free software;
     you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation; either version 2 of the License, or
     (at your option) any later version.
     
     The czt project is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU General Public License for more details.
     
     You should have received a copy of the GNU General Public License
     along with czt; if not, write to the Free Software
     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
     -->

<scanner xmlns:add="http://czt.sourceforge.net/templates/additional">
/**
 * This is a scanner for lexing
<add:z> * Z specifications</add:z>
<add:oz> * Object Z specifications</add:oz>
<add:tcoz> * TCOZ specifications</add:tcoz>
 * in unicode format as described in the Z standard.
 * Numbers in brackets contained in comments refer to
 * the corresponding sections in this document.
 *
 * @author Petra Malik
 */

package <package/>;

import java.io.*;
import java_cup.runtime.*;
      
import net.sourceforge.czt.parser.util.CztReader;
import net.sourceforge.czt.parser.util.DebugUtils;
import net.sourceforge.czt.parser.util.ScanException;

public class UnicodeScanner
  implements Scanner
{
  ContextFreeScanner contextFreeScanner_;
  KeywordScanner keywordScanner_;

  public <class/>(Reader in)
  {
    contextFreeScanner_ = new ContextFreeScanner(in);
    keywordScanner_ = new KeywordScanner(contextFreeScanner_);
  }

  public <class/>(CztReader in)
  {
    contextFreeScanner_ = new ContextFreeScanner(in);
    keywordScanner_ = new KeywordScanner(contextFreeScanner_);
  }

  /**
   * Lexes a given file.
   */
  public static void main(String argv[]) {    
    try {
      InputStream stream = new FileInputStream(argv[0]);
      InputStreamReader reader = new InputStreamReader(stream, "UTF-8");

      <class/> scanner = new <class/>(reader);
      DebugUtils.scan(scanner, Sym.class);
    }
    catch (Exception e) {
      e.printStackTrace();
    }
  }

  public Symbol next_token()
    throws IOException
  {
    return keywordScanner_.next_token();
  }

  public void reset(Reader in)
  {
    try {
      contextFreeScanner_.yyreset(in);
    } catch (Throwable e) {}
  }
}
</scanner>
