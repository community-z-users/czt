<?xml version="1.0"?>
<status>

  <developers>
    <person name="Petra Malik" email="PetraMalik@sourceforge.net" id="Petra"/>
    <person name="Tim Miller" email="timmiller@sourceforge.net" id="Tim"/>
    <person name="Mark Utting" id="Mark"/>
  </developers>

  <changes>
    <!-- Add new releases here
         Some action types have associated images. By default, images are
         defined for 'add', 'fix', 'remove', 'update' and 'hack'. If you add
         src/documentation/resources/images/<foo>.jpg images, these will
         automatically be used for entries of type <foo>.
         Sample action:
         <action dev="JB" type="fix" due-to="Joe Contributor"
           due-to-email="joec@apache.org" fixes-bug="123">
           Fixed a bug in the Foo class.
         </action>
    -->
    <release version="0.5" date="unrelease">
      <action dev="Petra" type="update">
        Update to ZML 2.0.
      </action>
      <action dev="Tim,Petra" type="fix">
        Improve support for parsing and printing Z pattern, Object Z,
        and TCOZ.
      </action>
      <action dev="Petra" type="add">
        Improve location annotion information of the AST classes
        created by the parser.  Now, start character number and length
        information is, in addition to line and column numbers, also
        recorded.
      </action>
      <action dev="Petra" type="fix">
        Improve error reporting.
      </action>
      <action dev="Petra" type="fix" fixes-bug="1475274">
        Use BigInteger for Z numerals.
      </action>
      <action dev="Tim" type="fix">
        Corrected the Object-Z grammar so that scope enrichment has a
        lower precedence than other infix operators.
      </action>
      <action dev="Tim" type="fix">
        Corrected the Object-Z grammar so that any expression can be
        used as the LHS of an operation promotion.
      </action>
      <action dev="Tim" type="fix">
        Change some rules to improve memory usage for LALR(1) grammar.
      </action>
    </release>
    <release version="0.4" date="September 2, 2005">
      <action dev="Tim" type="fix">
        Create operation names from OPNAME symbols using
        createDeclName(Decorword), so that the strokes are correctly
        added.
      </action>
      <action dev="Tim" type="add">
        Add parse support for Z pattern and rule language.
      </action>
      <action dev="Tim" type="add">
        Lots of improvements to the 
        Object-Z and TCOZ parser.
      </action>
      <action dev="Petra" type="update">
        Improve error messages provided by the parser.
      </action>
      <action dev="Tim" type="fix" fixes-bug="1234527">
        Allow parsing of empty schema texts.
      </action>
      <action dev="Petra" type="fix" fixes-bug="1200267">
        Fix the Unicode scanner to return stroke tokens instead of
        a DECORWORD token when, after separation of trailing subscript digits,
        the WORD part of the DECORWORD becomes empty.
      </action>
      <action dev="Tim" type="fix" fixes-bug="1189143">
        Fix the parsing of complex applications to schemas.
      </action>
      <action dev="Tim" type="fix">
        Fix the parsing of theta expressions (decorations were being
        added in reverse order).
      </action>
      <action dev="Petra" type="fix">
        Fix the Unicode printer to print a GENSCH token (instead of a SCH
        token) when a generic schema definition is printed.
      </action>
      <action dev="Tim" type="fix">
        Change the parser grammer to not accept (optional)
        formal parameters after a SCH token.
      </action>
      <action dev="Tim" type="fix" fixes-bug="1175303">
        Fix the parser to parse "id? : VID" correctly.
      </action>
    </release>
    <release version="0.3" date="March 17, 2005">
      <action dev="Petra" type="add">
        Add support for unicode supplementary characters as it is used by
        finset and arithmos.
      </action>
      <action dev="Petra" type="add">
        Add a first working version of a section manager
        (see package <code>net.sourceforge.czt.session</code>)
        that caches information
        about Z sections like AST, operator table, etc.
      </action>
      <action dev="Petra" type="add">
        Add support for multiple error messages provided by the parser:
        The parser now does not throw an exception immediately when an
        error has been found but tries to recover to collect more error
        messages.
      </action>
      <action dev="Petra" type="add">
        Add a check to the Parser that tests Z NAMES whether
        the wordglue charactes SE, SW, NE, NW match and occur only
        in nested pairs.
      </action>
      <action dev="Petra" type="add">
        Add a check to the Latex to Unicode converter that tests whether
        \begin and \end command match.
      </action>
      <action dev="Petra" type="add">
        Add some more test cases.
      </action>
      <action dev="Tim" type="add">
        Lots of improvements to the 
        Object-Z parser.
      </action>
      <action dev="Petra" type="fix">
        Fix the Latex to Unicode converter to allow braces in schema names.
        Now, "\begin{schema}{S_{1}}" will be converted correctly.
      </action>
      <action dev="Petra" type="fix">
        Fix the SmartScanner so that operator words in declaration lists
        can now be parsed.
      </action>
      <action dev="Tim" type="fix">
        Implement lookahead to resolve ambiguity between generic
        instantiation expression and function application with a schema
        as an argument (see also Z Standard, Note 4 in section 8.4 on page 38).
      </action>
      <action dev="Tim" type="fix">
        Fix a bug in the parser so that set comprehension can now be parsed.
      </action>
      <action dev="Petra" type="fix">
        Fix the LatexParser to provide an error message instead of throwing
        a NullPointerException when the AST is not available.
      </action>
      <action dev="Petra" type="fix">
        Improve error messages provided by the parser.
      </action>
    </release>
    <release version="0.2" date="September 22, 2004">
      <action dev="Petra" type="add">
        Implement a visitor that annotates an AST indicating where braces are
        needed to enforce the given priority.  This is used by printers
        that walk over an AST and print one of the markup languages.
      </action>
      <action dev="Petra" type="add">
        Add LocAnn to (AST) terms created in the parser
        so that other tools can identify the position of the term.
      </action>
      <action dev="Petra" type="add">
        Parse latex markup directives (%%Zchar etc.) and add it into
        the AST.
      </action>
      <action dev="Tim" type="fix">
        Allow soft newlines after generic parameters.
      </action>
      <action dev="Tim" type="fix">
        Set mixfix in MemPred to false for a membership application in a chain
        relation.
      </action>
      <action dev="Petra" type="fix">
        Fix the Object Z parser so that it can parse the first simple
        Object Z examples.
      </action>
      <action dev="Petra" type="fix">
        Fix the CztReader to handle EOF correctly.
        This closes bug #992029.
      </action>
      <action dev="Tim" type="fix">
        Fix the parser and precedence handling visitor so that
        the precedence of Cartesian product is handled correctly.
      </action>
      <action dev="Mark" type="fix">
        Modify parser grammar to allow newlines and semicolon within
        parenthesied predicates.
      </action>
      <action dev="Petra" type="fix">
        Improve the operator table so that the rules from Section 8.3
        of the Z standard are followed.  This includes checks that
        a whole operator name is never defined more than once,
        that operators with the same precedence also have the same
        associativity, etc.
      </action>
      <action dev="Petra" type="fix">
        Improve error messages in case a parse error occured
        (compute correct line and column number).
      </action>
      <action dev="Mark, Petra" type="fix">
        Fix the computation of the name of a prefix function like,
        for instance, cardinality.
        Now, the parser does not add a leading space to the name of
        a prefix functions any more.  This closes bug #937623.
      </action>
      <action dev="Petra" type="fix">
        Write XML files using UTF-8 encoding instead of using the
        locale encoding.  Now the files written when using the
        command line tools zed2zml and ozed2zml with the -out argument
        are in UTF-8.
      </action>
    </release>

    <release version="0.1" date="April 8, 2004">
      <action dev="Tim, Petra" type="add" context="admin">
        Initial Release.
      </action>
    </release>
  </changes>

  <todo>
    <actions priority="high">
      <action context="code" dev="open">
        Write a Circus parser.
      </action>
      <action context="code" dev="open">
        Write a TCOZ parser.
      </action>
    </actions>
    <actions priority="medium">
      <action context="code" dev="open">
        Fix the latex printer.  The current latex printer tries to avoid
        putting hard spaces everywhere by using information from the latex
        markup table.  For instance, there is no need to put hard spaces
        around the latex command
        <code>\varg</code>
        since it is defined to be an inword (via the '%%Zinword \varg \_'
        directive in the prelude), i.e. spaces are added before
        and after it when it is tranlated back into unicode.
        But this is true only in most cases.  For instance, when defining
        the function
        <code>\function \varg ^{ ~\varg~ }</code>,
        the hard spaces cannot be omited since the second
        <code>\varg</code>
        is enclosed in braces and no spaces are added when it is tranlated
        to unicode.  The current latex printer does not handle this case.
        The current workaround (to be able to print the prelude) is
        to not use
        <code>\varg</code>
        at all, but user defined operators that use braces may not be
        printed correcly.
      </action>
      <action context="code" dev="open">
        Develop an e-mail markup to unicode converter.  It should
        return Symbol objects so that it can be fitted into the CztReader.
      </action>
    </actions>
    <actions priority="low">
      <action context="docs" dev="open">
        Design a Parser logo.
      </action>
      <action context="code" dev="open">
        Improve the output of schema text so that it generates
	semicolons versus newlines 'correctly'.  Note that LET expressions
	can only contain semicolons, but other schema text can contain
	either.  The choice between semicolon and newline could be done via
        some heuristics, but to do it properly would require recording
        which was used in the input, which requires significant changes
	to the XML schema for Z.
      </action>
    </actions>

    <!-- Add todo items. @context is an arbitrary string. Eg:
    <actions priority="high">
      <action context="code" dev="SN">
      </action>
    </actions>
    <actions priority="medium">
      <action context="docs" dev="open">
      </action>
    </actions>
    -->
  </todo>
</status>
