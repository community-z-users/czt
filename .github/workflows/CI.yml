# CI workflow for the CZT project - Samuel Valery 2022 
name: CI

on:
  pull_request:
  push: { branches: [main] }

jobs:

  CI:
    runs-on: ubuntu-latest
    
    env:
      BUILD_STATUS: "FAILED" # Assume failed and change if build PASSES
      TEST_STATUS: "FAILED"  # Do the same with test results
      COMET_API_KEY: ${{ secrets.COMET_API_KEY }}
      TCP_SYSTEM: "COMET" # Options are: "MODULE", "TOT_COVERAGE", "ADD_COVERAGE", "COMET"
    
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Java 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.3
        with:
          maven-version: 3.8.5

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' 

      - name: Setup Comet
        if: ${{ env.TCP_SYSTEM == 'COMET' }}
        run: |
          CZT_HOME=$pwd
          cd ci_scripts/test/comet/
  
          echo "Cloning and building Comet API"
          git clone https://bitbucket.org/smartesting/comet-clients.git;
          cd comet-clients/java/comet-javaclient;
          mvn clean install;
          cd -

          echo "Building CometJavaClient Project"
          mvn install
          cd $CZT_HOME

      - name: Build
        run: |
          chmod +x ./ci_scripts/build/build_czt.sh # Ensure the build_czt.sh is executable
          . ./ci_scripts/build/build_czt.sh # This will generate build_report.txt
  
      - name: Update build status
        run: |
          chmod +x ./ci_scripts/build/build_status.sh # Ensure build_status.sh is executable
          if [ `./ci_scripts/build/build_status.sh` = 1 ]; then echo "BUILD_STATUS=PASSED" >> $GITHUB_ENV; fi;
          
      - name: Post Comment of Build Status to Pull Request 
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            Build Status: **${{ env.BUILD_STATUS }}**
            A full build report can be found **[here][1]** under CI->Build.
            
            [1]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Test
        if: ${{ env.BUILD_STATUS == 'PASSED' }}
        run: |
          git fetch origin main 

          if [ $TCP_SYSTEM = "MODULE" ]
          then
            # Module based TCP
            chmod +x ./ci_scripts/test/module/run_tests.py
            ./ci_scripts/test/module/run_tests.py
            if [ `echo $?` = 0 ]; then echo "TEST_STATUS=PASSED" >> $GITHUB_ENV; fi;
          
          elif [ $TCP_SYSTEM = "TOT_COVERAGE" ]
          then
            # Total Coverage Based TCP
            chmod +x ./ci_scripts/test/coverage/total/run_tests.py
            ./ci_scripts/test/coverage/total/run_tests.py
            if [ `echo $?` = 0 ]; then echo "TEST_STATUS=PASSED" >> $GITHUB_ENV; fi;

          elif [ $TCP_SYSTEM = "ADD_COVERAGE" ]
          then
            # Additional Coverage Based TCP
            chmod +x ./ci_scripts/test/coverage/additional/run_tests_additional.py
            ./ci_scripts/test/coverage/additional/run_tests_additional.py
            if [ `echo $?` = 0 ]; then echo "TEST_STATUS=PASSED" >> $GITHUB_ENV; fi;

          elif [ $TCP_SYSTEM = "COMET" ]
          then
            # Comet TCP (AI Based)
            chmod +x ./ci_scripts/test/comet/run_tests.sh
            ./ci_scripts/test/comet/run_tests.sh
            if [ `echo $?` = 0 ]; then echo "TEST_STATUS=PASSED" >> $GITHUB_ENV; fi;
          fi

          
      - name: Notify the developer of the test status
        if: ${{ env.BUILD_STATUS == 'PASSED' }}
        uses: peter-evans/commit-comment@v1
        with:
          body: |
            Test Status: **${{ env.TEST_STATUS }}**
            A full test report can be found **[here][1]** under CI->Test.
            
            [1]: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

