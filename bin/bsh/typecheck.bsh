import net.sourceforge.czt.base.ast.Term;
import net.sourceforge.czt.session.*;
import net.sourceforge.czt.typecheck.util.typingenv.*;
import net.sourceforge.czt.typecheck.z.*;

/** Typechecks a given Z specification.
 */
typecheck()
{
  manager = new SectionManager();
  return typecheck(manager);
}

typecheck(SectionInfo manager)
{
  term = parse(manager);
  if (term == null)
     return null;
  return typecheck(term, manager);
}

typecheck(String filename)
{
  manager = new SectionManager();
  term = typecheck(filename, manager);
}

typecheck(String filename, SectionInfo manager)
{
  term = parse(filename, manager);
  if (term == null)
     return null;
  return typecheck(term, manager);
}

typecheck(Term term)
{
  manager = new SectionManager();
  typecheck(term, manager, Markup.LATEX);
}

typecheck(Term term, SectionInfo manager, Markup markup)
{
  errors = TypeCheckUtils.typecheck(term, manager, markup);
  for (Iterator iter = errors.iterator(); iter.hasNext(); ) {
    Object next = iter.next();
    System.err.println(next);
  }
  return term;
}
