#*
Copyright 2003 Petra Malik
This file is part of the czt project.

The czt project contains free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

The czt project is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with czt; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*#
#set($FactoryInterface = ${project.getObject("AstFactoryInterface")})
#if($copyright)#include($copyright)
#end

package ${BasePackage}.${class.Package};

#foreach($p in $projects)
import ${p.AstPackage}.*;
#end
import ${project.AstPackage}.*;

/**
 * <p>An implementation of the object factory for constructing
 * concrete Z terms.  Each factory method returns an instance
 * of the corresponding class provided in this package.</p>
 *
#if(! $ImportProject)
 * <p>To use a differnt implementation for a particular interface
 * overwrite the corresponding object factory methods
 * returning an instance of your implementation instead.
 * If there are two factory methods for this class, it is sufficient to
 * overwrite the default factory method (the method without arguments)
 * since the factory method with arguments first calls the default
 * factory method and then uses setter methods to set the children.</p>
 *
#end
#if($author) * @author ${author}
#end
 */
public class ${class.Name}
  implements ${FactoryInterface.FullName}
{
#foreach($c in $classes)
#if(!$c.Abstract)
#set($head = "public ${c.Name} create${c.Name}")
  ${head}()
  {
    ${c.Name} zedObject = new ${c.ImplName}();
    return zedObject;
  }

#if($c.AllProperties.size() > 0)
  ${head}(#typeVarList(${c.AllProperties}))
  {
    ${c.Name} zedObject = create${c.Name}();
#foreach($prop in ${c.AllProperties})
#if(${prop.Type.FullName} == 'java.util.List')
    zedObject.${prop.GetterName}().addAll(${prop.VarName});
#else
    zedObject.${prop.SetterName}(${prop.VarName});
#end
#end
    return zedObject;
  }

#end
#end
#end
}
