# ------------------------------------------------------------
# This file controls various CZT specific properties which may be set
# during a build and while running examples and tests.
# Please customize according your needs.
# ************************************************************
# NOTE: when using windows paths, use either slash or
#       double backslash instead of a single backslash
#       as a separator
# ------------------------------------------------------------

# ************************************************************
# home directories and jar files of 3rd party software
# ************************************************************

# *******************
# * LOCAL VARIABLES *
# *******************
# Local variables start with "__"
# (in order to avoid clashes with
# other property settings in build files).
# They can be used within this settings file
# but are NOT explicitly used in build scripts.

# the directory where most of the third party software is installed
__install.dir = /usr/local

# Java Web Services Developer Pack home directory (JAXB and JAXP)
# needed by corejava to read and write XML
# (http://java.sun.com/webservices/downloads/webservicespack.html)
# WARNING: JWSDP 2.0 is not yet working with CZT;
#          please use version 1.6 or earlier!
__jwsdp.home = ${__install.dir}/jwsdp-1.6

# *******************

# jar file of BeanShell
# not essential but very convenient to have
# (http://www.beanshell.org)
bsh.jar = ${__install.dir}/java/bsh-2.0b4.jar

# jar file of the Bean Scripting Framework (BSF) library
# only required by gaffe, the GUI-builder for Z animators
# (http://jakarta.apache.org/bsf/)
# This currently requires an old IBM version of BSF: 2.2.0.
bsf.jar = ${__install.dir}/bsf-2.2.0/lib/bsf.jar

# home of JFlex -- used for scanner generation
jflex = ${__install.dir}/jflex-1.4.1/lib/JFlex.jar

# jar file of jEdit Programmer's Text Editor
# This is required to build the jEdit plugins for CZT.
# Note that after installing jEdit itself, you must start up jEdit
# and use its plugin manager (Plugins/Plugin Manager) to install
# the following plugins: Console, ErrorList, SideKick, WhiteSpace.
# After you've done this, check that the paths below point to the
# newly installed jar files (if jEdit installs them in your private
# area, such as $HOME/.jedit/jars, you will need to move the jar
# files or change the paths below).
# (http://jedit.org/)
__jedit.home = ${__install.dir}/jEdit_4_3pre3
jedit.jar = ${__jedit.home}/jedit.jar
jedit-console.jar = ${__jedit.home}/jars/Console.jar
jedit-errorlist.jar =  ${__jedit.home}/jars/ErrorList.jar
jedit-sidekick.jar = ${__jedit.home}/jars/SideKick.jar

# jar files of the Java Web Services Developer Pack
# JAXB and JAXP contained in JWSDP is required by corejava
# to read and write XML
# it is probably sufficient to set __jwsdp.home in the local variables section
# (http://java.sun.com/webservices/webservicespack.html)
dom.jar = ${__jwsdp.home}/jaxp/lib/endorsed/dom.jar
jaxb-api.jar = ${__jwsdp.home}/jaxb/lib/jaxb-api.jar
jaxb-impl.jar = ${__jwsdp.home}/jaxb/lib/jaxb-impl.jar
jaxb-libs.jar = ${__jwsdp.home}/jaxb/lib/jaxb-libs.jar
jaxb-xjc.jar = ${__jwsdp.home}/jaxb/lib/jaxb-xjc.jar
jaxp-api.jar = ${__jwsdp.home}/jaxp/lib/jaxp-api.jar
xercesImpl.jar = ${__jwsdp.home}/jaxp/lib/endorsed/xercesImpl.jar
xerces.jar = ${xercesImpl.jar}
xalan.jar = ${__jwsdp.home}/jaxp/lib/endorsed/xalan.jar
sax.jar = ${__jwsdp.home}/jaxp/lib/endorsed/sax.jar
jax-qname.jar = ${__jwsdp.home}/jwsdp-shared/lib/jax-qname.jar
namespace.jar = ${__jwsdp.home}/jwsdp-shared/lib/namespace.jar
xsdlib.jar = ${__jwsdp.home}/jwsdp-shared/lib/xsdlib.jar
relaxngDatatype.jar = ${__jwsdp.home}/jwsdp-shared/lib/relaxngDatatype.jar

jwsdp.classpath = ${dom.jar}:${jaxb-api.jar}:${jaxb-impl.jar}:${jaxb-libs.jar}:${jaxb-xjc.jar}:${jaxp-api.jar}:${xercesImpl.jar}:${xalan.jar}:${sax.jar}:${jax-qname.jar}:${namespace.jar}:${xsdlib.jar}:${relaxngDatatype.jar}

# jar file of the Rhino library (an implementation of Javascript)
# only required by gaffe, the GUI-builder for Z animators
# (http://www.mozilla.org/rhino/)
# This currently requires an old version of Rhino: 1.5R3.
rhino.jar = ${__install.dir}/rhino1_5R3/js.jar

# jar file of Velocity
# only required by GnAST, the code generator for AST
# (http://jakarta.apache.org/velocity/)
velocity.jar = ${__install.dir}/velocity-1.4/velocity-dep-1.4.jar
velocity.classpath = ${velocity.jar}

# jar files for Xerces 2.7.1
# (http://xml.apache.org/xerces2-j/)
xerces.classpath = ${__install.dir}/xerces-2_8_0/xercesImpl.jar

# jar file of Xalan XSLT processor (I used 2.6.2, single-jar-file distribution)
# Only required by GnAST, the code generator for AST
# (http://xml.apache.org/xalan-j)
xalan.jar = ${__install.dir}/xalan-j_2_6_0/bin/xalan.jar

# Eclipse project: a CZT plugin for Eclipse 3.1.2 (http://www.eclipse.org)
# (These settings are only required to build the CZT Eclipse plugin).
# eclipse.home is the directory where Eclipse is installed.
# Get Eclipse from http://www.eclipse.org
eclipse.home = ${__install.dir}/eclipse
eclipse.jar.file = eclipse_czt.jar

# Servlet Container settings
# (only needed by the zml2xhtml converter)
# --------------------------

# J2EE Servlet API 2.4
# "lib/jsdk-24.jar" in Caucho Resin 3.x (http://www.caucho.com)
# or
# "common/lib/servlet-api.jar" in Tomcat 5 (http://jakarta.apache.org/tomcat/)
servletapi.jar = ${__install.dir}/jakarta-tomcat-5.0.19/common/lib/servlet-api.jar

# the webapps, i.e. deploy, directory of the Servlet Container
servletcontainer.deploy.dir = ${__install.dir}/jakarta-tomcat-5.0.19/webapps/

# developers
# ----------

# jar file of Checkstyle (http://checkstyle.sourceforge.net/)
# only needed by developers who want to check whether
# the java source code follows the coding conventions
checkstyle.jar = ${__install.dir}/checkstyle-4.1/checkstyle-all-4.1.jar

# jar file of Clover, Coverage Analysis Tool (http://www.cenqua.com/clover).
# CZT has a open-source-project license to use this.
clover.jar = ${ant.home}/lib/clover.jar"

# ************************************************************
# directory and file settings for the CZT project
# ************************************************************

# the directory where all example files go in
# the example directory contains subdirectories z, oz, tcoz, etc.
# to disinguish standard Z specifications from extensions like Object Z
examples.dir = zml/examples

# the directory where all the jar files go in
jar.dir = lib

# the directory where the jEdit plugin jar files go in
plugin.jar.dir = lib/jedit_jars

# names of the jar files
# ----------------------

# czt
czt.jar.file = czt.jar

# corejava
corejava.base.jar.file = corejavaBase.jar
corejava.core.jar.file = corejavaZ.jar
corejava.oz.jar.file = corejavaOZ.jar
corejava.tcoz.jar.file = corejavaTCOZ.jar
corejava.zpatt.jar.file = corejavaZPatt.jar
corejava.circus.jar.file = corejavaCircus.jar
corejava.jaxb.jar.file = corejavaJaxb.jar

# session
session.jar.file = session.jar

# gaffe
gaffe.jar.file = gaffe.jar
gaffe.generator.jar.file = gaffe-generator.jar

# gnast
gnast.jar.file = gnast.jar

# java_cup and java_cup task
java_cup.jar.file = java_cup.jar
java_cup.task.jar.file = java_cup_task.jar
java_cup.runtime.jar.file = java_cup.runtime.jar

# parser (and printer)
parser.jar.file = parser.jar

# jedit plugins
plugin.jar.file = CommunityZToolsPlugin.jar
zsidekick-jedit-plugin.jar.file = ZSideKick.jar
zlive-jedit-plugin.jar.file = ZLivePlugin.jar

# typechecker
typechecker.jar.file = typechecker.jar

# zml to B
z2b.jar.file = z2b.jar

# zml to xhtml
zml2xhtml.jar.file = zml2xhtml.jar

# zlive animator
zlive.jar.file = zlive.jar

# rules
rules.jar.file = rules.jar

# modeljunit, used for unit testing in zlive.
modeljunit.jar.file = modeljunit.jar

# ************************************************************
# build properties
# ************************************************************

debug=true
debuglevel=lines,vars,source
optimize=off
compilerarg=-Xlint:unchecked
